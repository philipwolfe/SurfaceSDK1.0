<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Surface.Presentation</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewAutomationPeer">
      <summary>
            Defines an automation peer class for 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            objects.
            </summary>
      <remarks>
            The <strong>ScatterViewAutomationPeer</strong> class does not provide automatable functionality. 
            Instead, clients can have this automation peer and then can query it for a bounding
            rectangle. This rectangle then informs clients where they can move 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> 
            objects.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.SurfaceElementAutomationPeer">
      <summary>
            Defines the base automation peer class for Microsoft Surface elements.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.SurfaceElementAutomationPeer.#ctor(System.Type,System.Windows.Controls.Control)">
      <summary>
            Initializes a new instance of the
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.SurfaceElementAutomationPeer">SurfaceElementAutomationPeer</see></strong>
            class.
            </summary>
      <param name="ownerType">The type of owner control that this peer belongs to.</param>
      <param name="owner">The element that owns this automation peer.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.SurfaceElementAutomationPeer.GetClassNameCore">
      <summary>
            When overriding this method in a derived class, is called by 
            the <strong>GetClassName</strong> method.
            </summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.SurfaceElementAutomationPeer.GetAutomationControlTypeCore">
      <summary>
            When overriding this method in a derived class, is called by 
            the <strong>GetAutomationControlType</strong> method.
            </summary>
      <returns>The control type.</returns>
      <remarks>
             The <strong>GetAutomationControlTypeCore</strong> 
             method always returns <strong>AutomationControlType.Custom</strong>.
             Override this method in derived classes to implement other behavior.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.SurfaceElementAutomationPeer.IsKeyboardFocusableCore">
      <summary>
            When overriding this method in a derived class, is called by 
            the <strong>IsKeyboardFocusable</strong> method.
            </summary>
      <returns>
        <strong>true</strong> if the element can accept keyboard focus; 
            otherwise, <strong>false</strong>.
            </returns>
      <remarks>
            The <strong>IsKeyboardFocusableCore</strong> method always returns <strong>false</strong>. 
            Override this method in derived classes to implement other behavior.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewAutomationPeer.#ctor(Microsoft.Surface.Presentation.Controls.ScatterView)">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewAutomationPeer">ScatterViewAutomationPeer</see></strong>
            class.
            </summary>
      <param name="owner">The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            object that owns this automation peer.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer">
      <summary>
            Defines an automation peer class for 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            objects.
            </summary>
      <remarks>
             The <strong>ScatterViewItemAutomationPeer</strong> class implements the 
             <strong><see cref="T:System.Windows.Automation.Provider.ITransformProvider" /></strong>
             and
             <strong><see cref="T:System.Windows.Automation.Provider.IToggleProvider" /></strong>
             interfaces. You can use the transform pattern to rotate and move a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong> 
             control. You can use the toggle pattern to query the activation state 
             and to activate or deactivate the <strong>ScatterViewItem</strong> control.
            </remarks>
      <example>
        <para>
             In the following example, a <strong>ScatterViewItemAutomationPeer</strong> object is used to 
             rotate a <strong>ScatterViewItem</strong> control.
            </para>
        <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl1.xaml.cs" region="Rotate" title="To automate the rotation of a ScatterViewItem control" lang="cs" />
        <para>
             Rather than using a <strong>try</strong>/<strong>catch</strong> block, you can perform the rotation conditionally, 
             based on the value of the <strong><see cref="P:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.CanRotate" /></strong> property.
            </para>
        <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl2.xaml.cs" region="Rotate" title="To automate the rotation of a ScatterViewItem control" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.#ctor(Microsoft.Surface.Presentation.Controls.ScatterViewItem)">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer">ScatterViewItemAutomationPeer</see></strong>
            class.
            </summary>
      <param name="owner">The 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> 
            object that owns this automation peer.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
            When overriding this method in a derived class, gets the control pattern that is associated with the specified 
            <strong><see cref="T:System.Windows.Automation.Peers.PatternInterface">PatternInterface</see></strong>
            value.
            </summary>
      <param name="patternInterface">A <strong>PatternInterface</strong> value that specifies a control pattern.</param>
      <returns>An <strong><see cref="T:System.Object">Object</see></strong> object for the requested interface.</returns>
      <remarks>
        <strong>
          <see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" />
        </strong> implements the 
             <strong><see cref="T:System.Windows.Automation.Provider.ITransformProvider" /></strong>
             and
             <strong><see cref="T:System.Windows.Automation.Provider.IToggleProvider" /></strong>
             interfaces. When <em>patternInterface</em> is <strong>PatternInterface.Transform</strong>
             or <strong>PatternInterface.Toggle</strong>, this method returns <strong>this</strong>;
             otherwise, the return value from the base method is used.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.Move(System.Double,System.Double)">
      <summary>
            Moves the center of a control to the specified coordinates.
            </summary>
      <param name="x">The x-coordinate to move the control to.</param>
      <param name="y">The y-coordinate to move the control to.</param>
      <example>
        <para>
             In the following example, a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong> object is used to move a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control. This example assumes that
             <strong><see cref="T:System.Windows.Point" /></strong>
             has already been validated to fall within the boundaries of the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong> 
             control that contains the <strong>ScatterViewItem</strong>.
            </para>
        <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl1.xaml.cs" region="Move" title="To automate the movement of a ScatterViewItem control" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.Resize(System.Double,System.Double)">
      <summary>
            Resizes a control. This method is not currently implemented.
            </summary>
      <param name="width">The new width for the control.</param>
      <param name="height">The new height for the control.</param>
      <remarks>
        <para>
             The <strong></strong> method is present because the implementation requirements of the 
             <strong><see cref="T:System.Windows.Automation.Provider.ITransformProvider" /></strong>
             interface. However, user interaction with a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control involves scaling the item (changing the width and height simultaneously while maintaining 
             the aspect ratio) rather than modifying the width and height independently.
            </para>
        <para>
             Because this behavior does not correspond to the intention of the resizing transform, 
             <strong>Resize</strong> always throws an
             <strong><see cref="T:System.InvalidOperationException" /></strong>.
            </para>
        <para>
             You can change the size of a <strong>ScatterViewItem</strong> control programmatically by setting the 
             <strong><see cref="P:System.Windows.FrameworkElement.Width" /></strong> and 
             <strong><see cref="P:System.Windows.FrameworkElement.Height" /></strong> 
             properties.
             </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.Rotate(System.Double)">
      <summary>
            Rotates a control.
            </summary>
      <param name="degrees">The new orientation for the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> object.
            </param>
      <example>
        <para>
             In the following example, a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong> 
             object is used to rotate a <strong>ScatterViewItem</strong> control.
            </para>
        <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl1.xaml.cs" region="Rotate" title="To automate the rotation of a ScatterViewItem control" lang="cs" />
        <para>
             Rather than using a <strong>try</strong>/<strong>catch</strong> block, you can  perform the rotation conditionally, 
             based on the value of the <strong><see cref="P:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.CanRotate" /></strong> property.
            </para>
        <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl2.xaml.cs" region="Rotate" title="To automate the rotation of a ScatterViewItem control" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.Toggle">
      <summary>
            Cycles through the toggle states of the control.
            </summary>
      <remarks>
             The <strong>Toggle</strong> method activates and deactivates the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control that is associated with this
             <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong> instance.
             This action corresponds to setting the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">ScatterViewItem.IsActive</see></strong>
             property.
            </remarks>
      <example>
            In the following example, a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong> 
            object is used to activate a <strong>ScatterViewItem</strong> control.
            <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl1.xaml.cs" region="Activate" title="To automate the activation of a ScatterViewItem control" lang="cs" /></example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.CanMove">
      <summary>
            Determines whether users can move a control.
            </summary>
      <remarks>
            The <strong>CanMove</strong> property is always <strong>true</strong>. 
            Users can always move a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            control.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.CanResize">
      <summary>
            Determines whether users can resize a UI Automation element.
            </summary>
      <remarks>
        <para>
             The <strong>CanResize</strong> property is present because the implementation requirements of the 
             <strong><see cref="T:System.Windows.Automation.Provider.ITransformProvider" /></strong>
             interface. However, user interaction with a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control involves scaling the item (changing the width and height simultaneously while maintaining 
             the aspect ratio) rather than modifying the width and height independently.
            </para>
        <para>
             Because this behavior does not correspond to the intention of the resizing transform, 
             <strong>CanResize</strong> always returns <strong>false</strong>. In addition, calling the
             <strong><see cref="M:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.Resize(System.Double,System.Double)">Resize</see></strong> method always throws an
             <strong><see cref="T:System.InvalidOperationException" /></strong>.
            </para>
        <para>
             You can change the size of a <strong>ScatterViewItem</strong> control programmatically by setting the 
             <strong><see cref="P:System.Windows.FrameworkElement.Width" /></strong> and 
             <strong><see cref="P:System.Windows.FrameworkElement.Height" /></strong> 
             properties.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.CanRotate">
      <summary>
            Determines whether users can rotate a control.
            </summary>
      <remarks>
            The <strong>CanRotate</strong> property returns the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanRotate" /></strong>
            property of the owning
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            control that was specified when this 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong>
            was instantiated.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer.ToggleState">
      <summary>
            Gets the toggle state of a control.
            </summary>
      <remarks>
             The <strong>ToggleState</strong> property gets the activation state of 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control that is associated with this
             <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong> instance.
             This action corresponds to getting the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">ScatterViewItem.IsActive</see></strong>
             property.
            </remarks>
      <example>
            In the following example, a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong> 
            object is used to activate a <strong>ScatterViewItem</strong> control.
            <code source="Presentation\Classes_AutomationPeers\Controls\ScatterViewControl1.xaml.cs" region="Activate" title="To automate the activation of a ScatterViewItem control" lang="cs" /></example>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.TagVisualizationAutomationPeer">
      <summary>
            Defines an automation peer class for 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            objects.
            </summary>
      <remarks>
            The <strong>TagVisualizationAutomationPeer</strong> class does not provide automatable functionality. 
            Instead, clients can query this automation peer for a bounding rectangle.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.TagVisualizationAutomationPeer.#ctor(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.TagVisualizationAutomationPeer">TagVisualizationAutomationPeer</see></strong>
            class.
            </summary>
      <param name="owner">The 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object that owns this automation peer.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.TagVisualizerAutomationPeer">
      <summary>
            Defines an automation peer class for 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            objects.
            </summary>
      <remarks>
            The <strong>TagVisualizerAutomationPeer</strong> class does not provide automatable functionality. 
            Instead, clients can query this automation peer for a bounding rectangle. This rectangle then 
            informs clients where <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> objects can be moved.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.TagVisualizerAutomationPeer.#ctor(Microsoft.Surface.Presentation.Controls.TagVisualizer)">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.TagVisualizerAutomationPeer">TagVisualizerAutomationPeer</see></strong>
            class.
            </summary>
      <param name="owner">The 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object that owns this automation peer.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.ByteTag">
      <summary>
            Represents a byte tag on a <a src="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a>.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ByteTag.op_Inequality(Microsoft.Surface.Presentation.ByteTag,Microsoft.Surface.Presentation.ByteTag)">
      <summary>
            Determines whether two specified <strong><see cref="T:Microsoft.Surface.Presentation.ByteTag">ByteTag</see></strong>
            structures are different.</summary>
      <param name="left">The first <strong>ByteTag</strong> structure to use in the comparison.</param>
      <param name="right">The second <strong>ByteTag</strong> structure to use in the comparison.</param>
      <returns>
        <strong>true</strong> if the two <strong>ByteTag</strong> structures are different; 
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ByteTag.op_Equality(Microsoft.Surface.Presentation.ByteTag,Microsoft.Surface.Presentation.ByteTag)">
      <summary>
            Determines whether two specified <strong><see cref="T:Microsoft.Surface.Presentation.ByteTag">ByteTag</see></strong> 
            structures are the same. </summary>
      <param name="left">The first <strong>ByteTag</strong> structure to use in the comparison.</param>
      <param name="right">The second <strong>ByteTag</strong> structure to use in the comparison.</param>
      <returns>
        <strong>true</strong> if the two <strong>ByteTag</strong> structures are the same; 
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ByteTag.Equals(System.Object)">
      <summary>
            Determines if this 
            <strong><see cref="T:Microsoft.Surface.Presentation.ByteTag">ByteTag</see></strong> 
            structure is equal to another specified <strong>ByteTag</strong> structure.
            </summary>
      <param name="obj">The <strong>ByteTag</strong> structure to compare to this object.</param>
      <returns>
        <strong>true</strong> if the two <strong>ByteTag</strong> structures are the same;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ByteTag.GetHashCode">
      <summary>
            Returns the hash code for this instance. 
            </summary>
      <returns>A 32-bit signed integer hash code for this instance.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ByteTag.ToString">
      <summary>
            Converts the <strong><see cref="T:Microsoft.Surface.Presentation.ByteTag">ByteTag</see></strong> 
            structure to its equivalent string representation.</summary>
      <returns>A string representation of the structure.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ByteTag.Value">
      <summary>
            Gets the value of a byte tag.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter">
      <summary>
            Provides a quick way to calculate anchor position for rectangle-shaped elements.
            </summary>
      <remarks>
            Use the <strong>ContactVisualizerRectangleAdapter</strong> adapter when 
            the default <strong>ContactVisualizerAdapter</strong> adapter is not efficient or it cannot calculate the correct
            anchor position.
            The geometry that <strong>ContactVisualizerRectangleAdapter</strong> uses is a rectangle with the width and height 
            set to the <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> 
            property of the element that is capturing 
            the contact or mouse, deflated by the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.Padding" /></strong> property, and with rounded corners 
            based on the specified <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusX"></see></strong> and <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusY"></see></strong> values.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter">
      <summary>
            Provides a way to customize the anchor position and visibility 
            of visualizations for captured contacts or mouse events.
            </summary>
      <remarks>
        <para>When a contact or mouse event is captured, the visualization consists of a glow under 
            the contact and an optional tether that connects the glow with an anchor. 
            The visibility of the visualization and the anchor position is defined by a 
            <strong>ContactVisualizerAdapter</strong> object that is set on the capturing element.</para>
        <para>If no adapter is set on the element, visualizations 
            are visible, assuming <strong>ContactVisualizer.ShowsVisualizations</strong> is 
            <strong>true</strong> and no tether is drawn.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.GetAnchorPosition(System.Windows.Input.InputDevice)">
      <summary>
            Gets an anchor point for the contact visualization that is relative to the captured contact.
            </summary>
      <param name="device">The device that the visualization is associated with.</param>
      <returns>The anchor position for <i>device</i> or <strong>null</strong>.</returns>
      <remarks>
        <para>
             The <strong>GetAnchorPosition</strong> method is called only when all of the following conditions are true:
            </para>
        <list type="bullet">
          <item>The specified device is captured.</item>
          <item>
             The
             <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.ShowsVisualizationsProperty">ContactVisualizer.ShowsVisualizationsProperty</see></strong>
             attached property is set to <strong>true</strong> on the element that is capturing the device.
            </item>
          <item>
             The
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.ShowsVisualization(System.Windows.Input.InputDevice)">ShowsVisualization</see></strong>
             method for the adapter returns <strong>true</strong> for the specified device.
            </item>
        </list>
        <para>The default implementation of <strong>GetAnchorPosition</strong> assumes 
            that the device is a contact or mouse.</para>
        <para>The method calculates anchor position as the closest point on the element boundary. 
            The element boundary is built based on several heuristics about the element visual tree, 
            such as whether the visual is hit-test visible with enough opaque background and 
            whether the visual has geometry. The method returns the current device position, 
            if the device is within the element boundaries.</para>
        <para>A derived class can override this behavior. 
            If you override this method, return <strong>null</strong> to indicate that no anchor is available 
            and no tether should be displayed. </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.ShowsVisualization(System.Windows.Input.InputDevice)">
      <summary>
             Gets a value that indicates whether visualizations should be displayed
             for the specified device.
            </summary>
      <param name="device">The device to check.</param>
      <returns>
        <strong>true</strong> if visualizations should be displayed for the specified device;
             otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             The <strong>ShowsVisualization</strong> method is called only when all of the following conditions are true:
            </para>
        <list type="bullet">
          <item>The specified device is captured.</item>
          <item>
             The value of the
             <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.ShowsVisualizationsProperty">ContactVisualizer.ShowsVisualizationsProperty</see></strong>
             attached property is <strong>true</strong> on the element that is capturing the device.
            </item>
        </list>
        <para>
             The default implementation of this method returns <strong>true</strong>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.GetClosestPositionTo(System.Windows.Media.Geometry,System.Windows.Point)">
      <summary>
             Calculates the closest position to the specified geometry.
            </summary>
      <exception cref="T:System.ArgumentException">
            Geometry is <strong>null</strong>.        
            </exception>
      <param name="geometry">The geometry to calculate the closest position for.</param>
      <param name="relativePosition">A position to calculate the closest point to.</param>
      <returns>The point that is closet to <i>geometry</i>.</returns>
      <remarks>
             The <i>geometry</i> and <i>relativePosition</i> parameters and the return value 
             of the <strong>GetClosestPositionTo</strong> method 
             are all in the same coordinate system. If <i>relativePosition</i> is inside 
             <i>geometry</i>, the return value is the same as <i>relativePosition</i>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.GetClosestPositionTo(System.Windows.Rect,System.Windows.Thickness,System.Double,System.Double,System.Windows.Point)">
      <summary>
            Calculates the closest position to the specified rounded rectangle.
            </summary>
      <param name="rect">The rectangle to calculate the closest position for.</param>
      <param name="padding">The padding inside the rectangle bounds.</param>
      <param name="radiusX">The X radius of the rectangle.</param>
      <param name="radiusY">The Y radius of the rectangle.</param>
      <param name="relativePosition">A position to calculate the closest point to.</param>
      <returns>The point that is closet to <i>rect</i>.</returns>
      <remarks>
             The <i>rect</i> and <i>relativePosition</i> parameters and the return value 
             of the <strong>GetClosestPositionTo</strong> method 
             are all in the same coordinate system. If <i>relativePosition</i> is inside 
             <i>rect</i>, the return value is the same as <i>relativePosition</i>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.CreateInstanceCore">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong> class.
            </summary>
      <returns>A new <strong>ContactVisualizerAdapter</strong> object.</returns>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.PaddingProperty">
      <summary>
            Identifies a dependency property that represents the amount of padding inside the element bounds.
            </summary>
      <remarks>
            The <strong>PaddingProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.Padding" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusXProperty">
      <summary>
            Identifies a dependency property that represents the x-radius of the rounded corners.
            </summary>
      <remarks>
            The <strong>RadiusXProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusX" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusYProperty">
      <summary>
            Identifies a dependency property that represents the y-radius of the rounded corners.
            </summary>
      <remarks>
            The <strong>RadiusYProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusY" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.GetAnchorPosition(System.Windows.Input.InputDevice)">
      <summary>
            Gets an anchor point for the contact visualization that is relative to the captured device.
            </summary>
      <param name="device">The device that the visualization is associated with.</param>
      <returns>The anchor position for <i>device</i> or <strong>null</strong>.</returns>
      <remarks>
        <para>
             The <strong>GetAnchorPosition</strong> method returns <strong>null</strong> if one of the following conditions is true:
            </para>
        <list type="bullet">
          <item>
            The specified device is not captured to an object that derives from 
            <strong><see cref="T:System.Windows.UIElement" /></strong>.
            </item>
          <item>
             The 
             <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong>
             property of the element that the device is captured to is undefined.
            </item>
        </list>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.CreateInstanceCore">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter" /></strong> class.
            </summary>
      <returns>A new <strong>ContactVisualizerRectangleAdapter</strong> object.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.Padding">
      <summary>
            Gets or sets the amount of padding inside the element bounds.
            </summary>
      <remarks>
            The <strong>Padding</strong> property is a dependency property that is identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.PaddingProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusX">
      <summary>
            Gets or sets the x-radius of the rounded corners.
            </summary>
      <remarks>
            The <strong>RadiusX</strong> property is a dependency property that is identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusXProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusY">
      <summary>
            Gets or sets the y-radius of the rounded corners.
            </summary>
      <remarks>
            The <strong>RadiusY</strong> property is a dependency property that is identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerRectangleAdapter.RadiusYProperty" /></strong> field.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition">
      <summary>
            Specializes the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>
            class to handle <a href="/Development/TaggedObjects/TaggedObjects.htm">byte tags</a>.
            </summary>
      <remarks>
        <para>A <em>byte tag</em> is a physical object marker that represents an 8-bit value. An application can use tags to recognize an object 
            or distinguish among a collection of objects. For example, a board game might use different tags to represent the 
            players and trace their positions on the Microsoft Surface screen.</para>
        <para>For more information about how visualization definitions are used, see 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>.</para>
        <para>For more information about how to use tagged physical objects, see
            <a href="/Development/TaggedObjects/TaggedObjects.htm">Tagged Objects</a>.</para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" />
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">
      <summary>
            Defines how a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object should instantiate and render a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object in response to contacts with a particular tag value.
            </summary>
      <remarks>
        <para>
            A <strong>TagVisualizationDefinition</strong> object defines the details that are used to create a 
            <strong>TagVisualization</strong> control for a particular tag value. A <strong>TagVisualization</strong> object is the actual visible
            element that is displayed and positioned to move with the tagged object.
            </para>
        <para>
             The appearance of a <strong>TagVisualization</strong> control is typically defined in a XAML file of its own. The
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.Source" /></strong>
             property of a <strong>TagVisualizationDefinition</strong> specifies this file.
            </para>
        <para>
             A <strong>TagVisualization</strong> control is hosted within a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
             content control. When a tagged object is placed on a <strong>TagVisualizer</strong> control, 
             the control checks its
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizer.Definitions" /></strong>
             property to see if contains a <strong>TagVisualizationDefinition</strong> object that corresponds to 
             the value of the tagged object. If the <strong>TagVisualizer</strong> control does contain a corresponding <strong>TagVisualizationDefinition</strong> object,
             the <strong>TagVisualizer</strong> object instantiates a <strong>TagVisualization</strong> object
             (from the details of the definition) and displays it.
            </para>
        <para>
             The easiest way to create a visualization is by adding a <strong>TagVisualizationDefinition</strong> object to 
             the <strong>Definitions</strong> property of your <strong>TagVisualizer</strong> control. 
             If your application requires custom functionality when it instantiates a 
             <strong>TagVisualization</strong> object, you can override the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.CreateVisualizationForTag(Microsoft.Surface.Presentation.Contact)">CreateVisualizationForTag</see></strong>
             method.
            </para>
        <para>
            The <strong>TagVisualizationDefinition</strong> object contain several properties that are 
            used as the default values for the corresponding properties on created 
            <strong>TagVisualization</strong> objects:
            </para>
        <para>
          <list type="bullet">
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTag" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.PhysicalCenterOffsetFromTag" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehavior" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientation" />
              </strong>
            </item>
          </list>
        </para>
        <para>
            When a <strong>TagVisualizer</strong> object needs to create 
            a <strong>TagVisualization</strong> object, it uses the values from the definition. 
            You can change these values during a <strong>TagVisualizer</strong> event.
            </para>
      </remarks>
      <example>
        <para>
              The following code examples demonstrate how to define and implement a visualization that
              appears on the Microsoft Surface screen in reaction to the placement of a tagged object.
             </para>
        <para>
              The XAML code for the appearance of the visualization is defined in the SimpleVisualization.xaml file.
              The root element derives from <strong>TagVisualization</strong>.
             </para>
        <code source="Presentation\Classes_TagVisualizations\SimpleVisualization.xaml" title="" lang="xml" />
        <para>
              When the application starts up, several <strong>TagVisualizationDefinition</strong> objects
              are created and added to the 
              <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection" /></strong>
              object of the <strong>TagVisualizer</strong> control. 
              The <strong>Source</strong> property of each <strong>TagVisualizationDefinition</strong> object is initialized
              by a reference to SimpleVisualization.xaml.
             </para>
        <code source="Presentation\Classes_TagVisualizations\Window1.xaml.cs" region="InitTagVisualizer1" title="To create and assign TagVisualizationDefinition objects" lang="cs" />
        <para>
          <note type="implementnotes">
               You can also create visualization definitions in XAML markup. For an example, see
               <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>.
              </note>
        </para>
        <para>
              When a tagged object with a value that matches a 
              <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.Value">ByteTagVisualizationDefinition.Value</see></strong>
              property is placed on the <strong>TagVisualizer</strong> control, the
              <strong>TagVisualizer</strong> object displays the <strong>TagVisualization</strong> control and raises the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded">TagVisualizer.VisualizationAdded</see></strong>
              event. By handling the <strong>VisualizationAdded</strong> event, your application can access the <strong>TagVisualization</strong> control
              and apply custom logic that might be required at run time.
             </para>
        <code source="Presentation\Classes_TagVisualizations\Window1.xaml.cs" region="OnTagVisualizationAdded1" title="To handle the VisualizationAdded event" lang="cs" />
      </example>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" />
      <seealso href="/Samples/HowDoIExamples/CreatingTagVisualization.htm">Creating a Tag Visualization</seealso>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.SourceProperty">
      <summary>
            Identifies a dependency property that stores the Uniform Resource Identifier (URI)
            for this definition's source.
            </summary>
      <remarks>
            The <strong>SourceProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.Source" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.MaxCountProperty">
      <summary>
            Identifies a dependency property that stores the maximum number of
            visualizations that a given definition can create.
            </summary>
      <remarks>
            The <strong>MaxCountProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.MaxCount" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OffsetOriginProperty">
      <summary>
            Identifies a dependency property that specifies the relative
            origin for a visualization.
            </summary>
      <remarks>
            The <strong>OffsetOriginProperty</strong> field is the identifier 
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OffsetOrigin" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.PhysicalCenterOffsetFromTagProperty">
      <summary>
            Identifies a dependency property that specifies the offset of the center
            of a visualization from a tag location.
            </summary>
      <remarks>
            The <strong>PhysicalCenterOffsetFromTagProperty</strong> field is the identifier 
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.PhysicalCenterOffsetFromTag" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTagProperty">
      <summary>
            Identifies a dependency property that specifies the offset of the
            orientation of a visualization from the tag orientation.
            </summary>
      <remarks>
            The <strong>OrientationOffsetFromTagProperty</strong> field is the identifier 
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTag" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientationProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            visualization rotates with its tag.
            </summary>
      <remarks>
            The <strong>UsesTagOrientationProperty</strong> field is the identifier for 
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientation" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehaviorProperty">
      <summary>
            Identifies a dependency property that specifies how a visualization should 
            behave when its tag is removed.
            </summary>
      <remarks>
            The <strong>TagRemovedBehaviorProperty</strong> field is the identifier for 
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehavior" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeoutProperty">
      <summary>
            Identifies a dependency property that specifies how long a visualization
            should remain in the visual tree after its tracked tag contact is lost.
            </summary>
      <remarks>
            The <strong>LostTagTimeoutProperty</strong> field is the identifier for 
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout" /></strong> dependency property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.Matches(Microsoft.Surface.Presentation.TagData)">
      <summary>
            Gets a value that indicates whether this definition matches the specified tag.
            </summary>
      <param name="tag">The tag data to check for match.</param>
      <returns>
        <strong>true</strong> if the definition matches the tag; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
            The <strong>Matches</strong> method is used by derived classes to indicate whether
            they consider a particular <strong><see cref="T:Microsoft.Surface.Presentation.TagData" /></strong>
            structure as matching the derived definition. This method enables you to create custom definitions
            that match tag data in any manner appropriate to your application.
            </remarks>
      <example>
            In this code example, a custom class that is derived from <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            defines a range of matching byte values and the background brush that will 
            be used on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            control that is created from the definition.
            <code source="Presentation\Classes_TagVisualizationsHost\ByteTagRangeVisualizationDefinition.cs" region="EntireClass" title="ByteTagRangeVisualizationDefinition class" lang="cs" /></example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.#ctor">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OnVisualizationCreated(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called when a visualization has been created. This method raises the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.VisualizationCreated" /></strong> event.
            </summary>
      <param name="visualization">
            The newly created 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object.
            </param>
      <remarks>
             Classes that derive from <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
             should call the <strong>OnVisualizationCreated</strong> method when a visualization is created to raise the 
             <strong>VisualizationCreated</strong> event.
            </remarks>
      <example>
            In this code example, a custom definition class that is derived from
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            overrides the <strong>OnVisualizationCreated</strong> method
            to assign the 
            <strong><see cref="P:System.Windows.Controls.Panel.Background" /></strong>
            property as specified by the custom definition. The method in this example first calls
            the base implementation of the <strong>OnVisualizationCreated</strong> method
            to raise the <strong>VisualizationCreated</strong> event.
            <code source="Presentation\Classes_TagVisualizationsHost\ByteTagRangeVisualizationDefinition.cs" region="OnVisualizationCreated" title="Overriding the OnVisualizationCreated method" lang="cs" /></example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OnMatchingChanged">
      <summary>
            Called by derived classes when changes to the definition affect which tags will be matched.
            </summary>
      <remarks>
             The <strong>OnMatchingChanged</strong> method is not called by the base implementation of
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>. Derived classes 
             must call this method to notify the base implementation
             when a change occurs to the derived class that affects which tags
             that it matches.
            </remarks>
      <example>
            In this code example, a custom class that is derived from <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            defines a range of matching byte values and the background brush that will 
            be used on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            control that is created from the definition. When a property that affects which tag values
            will match the definition is set, the <strong>OnMatchingChanged</strong> method is called.
            <code source="Presentation\Classes_TagVisualizationsHost\ByteTagRangeVisualizationDefinition.cs" region="EntireClass" title="ByteTagRangeVisualizationDefinition class" lang="cs" /></example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.Count">
      <summary>
            Gets the number of active 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            objects that were created from this 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>
            object.
            </summary>
      <remarks>
            The number of <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong> objects from this definition that are currently 
            visible might be less than the number that the <strong>Count</strong> property reports. Depending on 
            the setting of the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehavior" /></strong> and 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout" /></strong> properties, a <strong>TagVisualization</strong> 
            object might be hidden (because its physical tagged object was lost) but not 
            timed out yet, so the <strong>TagVisualization</strong> object has not yet been disposed of.
            </remarks>
      <seealso cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout" />
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.Source">
      <summary>
            Gets or sets the Uniform Resource Identifier (URI) of a XAML file whose
            root element is a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object (or a subclass of <strong>TagVisualization</strong>).
            </summary>
      <remarks>
        <para>The <strong>Source</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.SourceProperty" /></strong> field.
            </para>
        <para>When a tagged object whose value matches a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            is placed on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            control, an instance of the element that is defined in the XAML file specified by 
            the <strong>Source</strong> property is created and displayed. 
            </para>
        <para>
            The default value of <strong>Source</strong> references a built-in visualization. 
            The built-in visualization is intended to assist you in developing and debugging your application, 
            but you should not use it for your final deployment.
            </para>
        <para>
            If you set <strong>Source</strong> to <strong>null</strong>, an empty visualization 
            (one without any visible elements) is created. Although invisible, the visualization
            is still contained within the visual tree of the <strong>TagVisualizer</strong>, and
            the behavior of the empty visualization is identical in all respects to a visible one. 
            </para>
        <para>
            The URI that the <strong>Source</strong> property specifies must be relative, not absolute; 
            otherwise, an exception is thrown. The visualization that 
            <strong>Source</strong> specifies can be in the same assembly as the definition, 
            or in another referenced assembly. For more information, see
            <a href="http://msdn.microsoft.com/en-us/library/aa970069.aspx" target="_blank">Pack URIs in Windows Presentation Foundation</a>.
            The following examples show how to specify the <strong>Source</strong> property.
            </para>
        <code source="Presentation\TagVisualizationSource\SetSourceProperty\AppSurfaceWindow.xaml" title="Setting the Source Property (XAML)" lang="xml" />
        <code source="Presentation\TagVisualizationSource\SetSourceProperty\AppSurfaceWindow.cs" title="Setting the Source Property (Code)" region="CreateDefinitions" lang="cs" />
        <para>
            For more information, see the example in
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.MaxCount">
      <summary>
            Gets or sets the maximum number of instances of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            class that can be simultaneously present in the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> 
            object. </summary>
      <remarks>
        <para>The <strong>MaxCount</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.MaxCountProperty" /></strong> field.
            </para>
        <para>The <strong>MaxCount</strong> property counts only 
            <strong>TagVisualization</strong> instances that are based on this 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong> 
            definition.</para>
        <para>
            The default value of <strong>MaxCount</strong> is 0. If <strong>MaxCount</strong> is set to 0, no limit is imposed. 
            </para>
        <para>The 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.Count">Count</see></strong> 
            property can exceed the <strong>MaxCount</strong> property 
            because you can set <strong>MaxCount</strong> after visualizations are already active.
            If this situation occurs, nothing happens (for example, previously active
            visualizations remain active), but the definition cannot
            create any more visualizations until enough visualizations have disappeared
            so that <strong>Count</strong> is lower than <strong>MaxCount</strong>.</para>
        <note type="caution">
            A created <strong>TagVisualization</strong> control can count against the 
            <strong>MaxCount</strong> limit, even if its tagged object has been removed from the Microsoft Surface screen and the visualization 
            is no longer visible. For more information about this situation, see <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout" /></strong>.
            </note>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OffsetOrigin">
      <summary>
            Gets or sets the relative origin of a visualization.
            </summary>
      <remarks>
        <para>The <strong>OffsetOrigin</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OffsetOriginProperty" /></strong> field.
            </para>
        <para>
            This property enables your application to determine what part of a visualization
            corresponds to the coordinate that is identified by the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center">Center</see></strong> property. It defaults to (0.5, 0.5),
            meaning that the physical center of the visualization is placed at the point that
            <strong>Center</strong> identifies. If you set <strong>Center</strong> to another value, the visualization
            will be placed differently. For example, a value of (0.0, 0.0) would place the visualization's upper-left
            corner at the <strong>Center</strong> location.
            </para>
        <para>
            If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object
            created the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> control, the initial (default) value of 
            <strong>OffsetOrigin</strong> is the same as the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OffsetOrigin">TagVisualizationDefinition.OffsetOrigin</see></strong>
            property.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.PhysicalCenterOffsetFromTag">
      <summary>
            Gets or sets the distance, in inches, that the center of the visualizations
            that this definition created is offset from the center of the tagged contact. 
            </summary>
      <remarks>
        <para>The <strong>PhysicalCenterOffsetFromTag</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.PhysicalCenterOffsetFromTagProperty" /></strong> field.
            </para>
        <para>
            This property enables your application to compensate for tags that are not 
            placed in the center of physical objects. For example, you might create
            customer cards that require the horizontal center of the printed tag to be 1 inch away 
            from the horizontal center of the physical card, while aligned to the vertical center. 
            Your application can then set <strong>PhysicalCenterOffsetFromTag</strong> to 
            <strong>Vector(1.0, 0)</strong> to enable your <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            control to be centered correctly around the physical card.
            </para>
        <para>
            If you need to convert from a physical offset to a pixel offset, you can use the
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.PhysicalScaleTransform" /></strong>
            property of the
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurface.PrimarySurfaceDevice">InteractiveSurface.PrimarySurfaceDevice</see></strong>
            object.
            </para>
        <para>
            The default value of the <strong>PhysicalCenterOffsetFromTag</strong> property is <strong>0,0</strong>.
            When a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> object needs to create a <strong>TagVisualization</strong> object, the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTag">TagVisualization.PhysicalCenterOffsetFromTag</see></strong> 
            property of the new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong> 
            object is set to the value that is established here.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTag">
      <summary>
            Gets or sets the orientation offset of 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            objects that this definition created from the offset of the tag 
            that is being tracked. 
            </summary>
      <remarks>
        <para>The <strong>OrientationOffsetFromTag</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTagProperty" /></strong> field.</para>
        <para>
            The <strong>OrientationOffsetFromTag</strong> property is measured in degrees. 
            The default value is 0.
            </para>
        <para>
            This property enables your application to compensate for tags that are not oriented 
            in the same way as the physical object that they reside on. For example, you might 
            create customer cards that require the orientation of the printed tag to be 
            rotated 90 degrees from the orientation of the physical card. Your application 
            can then set <strong>OrientationOffsetFromTag</strong> to <strong>90.0</strong> to enable your 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            control to be correctly aligned.
            </para>
        <para>
             When a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> 
            object needs to create a <strong>TagVisualization</strong> object, the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag">TagVisualization.OrientationOffsetFromTag</see></strong> 
             property of the new <see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /> 
             object is set to the value that is established here.
            </para>
        <para>
            If the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientation" /></strong>
            property is set to <strong>false</strong>, the value of <strong>OrientationOffsetFromTag</strong> 
            is ignored, and a <strong>TagVisualization</strong> object that is created from this definition has an
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong> value of 0.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientation">
      <summary>
            Gets or sets whether a visualization is rotated to match a tag's
            orientation. 
            </summary>
      <remarks>
        <para>The <strong>UsesTagOrientation</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientationProperty" /></strong> field.</para>
        <para>
             When a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> object needs 
             to create a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> object, the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag">TagVisualization.OrientationOffsetFromTag</see></strong> 
             property of the new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong> 
             object is set to the value that is established here.
            </para>
        <para>
            If you set the <strong>UsesTagOrientation</strong> property to <strong>false</strong>, the value of 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTag" /></strong>
            is ignored, and a <strong>TagVisualization</strong> object that is created from this definition has an
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong> value of 0.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehavior">
      <summary>
            Gets or sets a value that specifies what happens to a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object when the contact that it corresponds to is removed.
            </summary>
      <remarks>
        <para>The <strong>TagRemovedBehavior</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehaviorProperty" /></strong> field.
            </para>
        <para>
             The default value of the <strong>TagRemovedBehavior</strong> property is <strong>Disappear</strong>.
            </para>
        <para>
             When a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> object 
             needs to create a <strong>TagVisualization</strong> object, the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior">TagVisualization.TagRemovedBehavior</see></strong> 
             property of the new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong> 
             object is set to the value that is established here.
            </para>
        <para>
            You can implement a custom tag removal behavior. The following code example demonstrates this technique.
            </para>
      </remarks>
      <example>
        <code source="Presentation\Classes_TagVisualizations\Window1.xaml.cs" region="TagVisual2" title="To implement a custom tag removal behavior" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout">
      <summary>
             Gets or sets how long, in milliseconds, a visualization should
             remain in the visual tree after it loses its tracked contact.
             </summary>
      <remarks>
        <para>The <strong>LostTagTimeout</strong> property is a dependency property that is identified by the
             <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeoutProperty" /></strong> field.
             </para>
        <para>As a user moves a tagged object around on the Microsoft Surface screen, 
             the Microsoft Surface software might briefly lose and re-acquire the tag. For example, 
             the user might actually pick 
             up the object and set it down again, or the object might be moving too fast 
             for the Microsoft Surface Vision System to track properly.</para>
        <para>In such cases, you can preserve the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong> object. That is, 
             your application can recognize that a single object was lost and then 
             regained, instead of losing one object and gaining another. There are situations 
             where this distinction can be important. For example, if the 
             <strong>TagVisualization</strong> implementation is expensive 
             to instantiate, there is a performance overhead if a new 
             <strong>TagVisualization</strong> is created every time that a tag is lost and 
             regained. For another example, the <strong>TagVisualization</strong> object might
             contain some state information that should not be lost, such as controls that a user might have interacted with 
             before the tag was momentarily lost.</para>
        <para>The <strong>LostTagTimeout</strong> property is designed to assist with 
             this problem. The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong> object guarantees that 
             the lifetime of a <strong>TagVisualization</strong> control extends at least 
             <strong>LostTagTimeout</strong> milliseconds beyond the time when the tag is 
             lost. If a tag with the same value is regained within that interval, the Microsoft Surface software moves the
             previous <strong>TagVisualization</strong> control to that 
             location, instead of discarding the old <strong>TagVisualization</strong> control and 
             creating a new one. If you set <strong>LostTagTimeout</strong> to 0, you 
             disable this "lost tag" protection.</para>
        <para>If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object creates the 
             <strong>TagVisualization</strong> control, then during the <strong>LostTagTimeout</strong>
             interval, the visualization is still included in the 
             <strong>TagVisualizationDefinition.Count</strong> property and still counts
             against its <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.MaxCount">MaxCount</see></strong> 
             limit, even though (depending on 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehavior" /></strong>) the visualization might no longer be visible.</para>
        <note type="caution">
             The actual behavior of a <strong>TagVisualization</strong> control
             when its tag is lost depends on its <strong>TagRemovedBehavior</strong> property. 
             The default value for <strong>LostTagTimeout</strong> is <strong>double.NaN</strong>, which indicates that the 
             actual time-out value is determined by <strong>TagRemovedBehavior</strong>.
             </note>
        <para>
              When a <strong>TagVisualizer</strong> object needs to create a <strong>TagVisualization</strong> object, the 
              <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout">TagVisualization.LostTagTimeout</see></strong> 
              property of the new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong> 
              object is set to the value established here.
             </para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.VisualizationCreated">
      <summary>
            Occurs when the definition creates a visualization.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.ValueProperty">
      <summary>
            Identifies a dependency property that stores the value of a 
            <a href="/Development/TaggedObjects/TaggedObjects.htm">byte tag</a>
            that this definition corresponds to.
            </summary>
      <remarks>
            The <strong>ValueProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.Value" /></strong> dependency property.
            </remarks>
      <seealso cref="P:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.Value" />
      <seealso cref="P:Microsoft.Surface.Core.ByteTag.Value" />
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.Matches(Microsoft.Surface.Presentation.TagData)">
      <summary>
            Gets a value that indicates whether this definition matches the specified tag.
            </summary>
      <param name="tag">The tag data to check for match.</param>
      <returns>
        <strong>true</strong> if this definition matches the tag; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.CreateInstanceCore">
      <summary>
            Freezable implementation.
            </summary>
      <returns>A new object instance.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Overrides the 
            <strong><see cref="T:System.Windows.Freezable" /></strong>
            implementation of the <strong>OnPropertyChanged</strong>
            method to call the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OnMatchingChanged" /></strong>
            method when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.Value" /></strong>
            property changes. 
            </summary>
      <param name="e">The arguments that describe the property change.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.Value">
      <summary>
            Gets or sets the byte value of tags that this definition applies to.
            </summary>
      <remarks>
        <para>The <strong>Value</strong> property is used to determine whether the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition" /></strong> object matches a particular 
            <a href="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a> 
            that is placed on the Microsoft Surface screen. The tag is considered to match 
            if it is a byte tag whose value is equal to the 
            <strong>ByteTagVisualizationDefinition</strong> object's <strong>Value</strong> property.</para>
        <para>The <strong>Value</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition.ValueProperty" /></strong> field.</para>
        <para>For more information about how 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            objects are generated from tagged objects, see 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>.</para>
        <para>The default byte value is 0x00.</para>
      </remarks>
      <seealso cref="P:Microsoft.Surface.Core.ByteTag.Value" />
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceButtonContactVisualizerAdapter">
      <summary>
            Specializes the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong>
            class for a button.
            </summary>
      <remarks>
            The <strong>SurfaceButtonContactVisualizerAdapter</strong> adapter makes sure that tethers are shown only if a contact or mouse is currently
            constraining the button functionality. This adapter also adds the logic to make a tether animate
            from the control to the contact or mouse.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter">
      <summary>
            Defines an adapter that enables your application to set an inner adapter, allowing the
            composition of behavior from two adapters into one.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.InnerAdapterProperty">
      <summary>
            Identifies a dependency property that represents an inner adapter that is used for contact visualization
            operations.
            </summary>
      <remarks>
            The <strong>InnerAdapterProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.InnerAdapter" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.ShowsVisualization(System.Windows.Input.InputDevice)">
      <summary>
             Gets a value that indicates whether visualizations should be displayed
             for the specified device.
            </summary>
      <remarks>
            If the <see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.InnerAdapter" /> property is set, the <strong>ShowsVisualization</strong> method defers to it.
            </remarks>
      <param name="device">The device to check.</param>
      <returns>
        <strong>true</strong> if visualizations should be displayed for the specified device;
             otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.GetAnchorPosition(System.Windows.Input.InputDevice)">
      <summary>
            Gets an anchor point for the contact visualization that is relative to the captured device.
            </summary>
      <remarks>
            If the <see cref="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.InnerAdapter" /> property is set, the <strong>GetAnchorPosition</strong> method defers to it.
            </remarks>
      <param name="device">The device that the visualization is associated with.</param>
      <returns>The anchor position for <i>device</i> or <strong>null</strong>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.InnerAdapter">
      <summary>
            Gets or sets an inner adapter that is used for contact visualization operations. 
            </summary>
      <remarks>
        <para>
             The <strong>InnerAdapter</strong> property is a dependency property that is
             identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.CompoundContactVisualizerAdapter.InnerAdapterProperty" /></strong> field.
             The default value for this property is <strong>null</strong>.
            </para>
        <para>
             When this property is set to a non-null value, all overrideable methods 
             call the corresponding method on the inner adapter.
            </para>
        <para>
             Your application cannot use self-referential loops (that is, setting an <strong>InnerAdapter</strong> property 
             that points to itself
             or to another adapter whose <strong>InnerAdapter</strong> property points to self, and so on).
             These types of loops cause an 
             <strong><see cref="T:System.ArgumentException" /></strong> exception.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceButtonContactVisualizerAdapter.GetAnchorPosition(System.Windows.Input.InputDevice)">
      <summary>
            Gets an anchor position for the contact visualization that is relative to the captured element.
            </summary>
      <param name="device">The device that the visualization is created for.</param>
      <returns>The anchor position for <i>device</i> or <strong>null</strong>.</returns>
      <remarks>
             The <strong>GetAnchorPosition</strong> method returns <strong>null</strong> if the tether should not be shown for the contact.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceButtonContactVisualizerAdapter.CreateInstanceCore">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceButtonContactVisualizerAdapter" /></strong> class.
            </summary>
      <returns>A new <strong>SurfaceButtonContactVisualizerAdapter</strong> object.</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationAnchor">
      <summary>
            Represents an anchor that is returned from the 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter.GetAnchorPosition" /></strong>
            method.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationAnchor.#ctor(System.Windows.Point)">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationAnchor" /></strong> class.
            </summary>
      <param name="position">The position to use for the anchor.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationAnchor.Position">
      <summary>
            Gets the position of the anchor.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.IManipulator">
      <summary>
            Defines an interface for objects whose position that a
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor" /></strong> processor can track.
            </summary>
      <remarks>
        <para>
             The <strong>IManipulator</strong> interface is implemented by the following classes:
            </para>
        <list type="bullet">
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" />
            </strong>
          </item>
        </list>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.IManipulator.GetPosition(System.Windows.UIElement)">
      <summary>
            Gets the position of the manipulator, relative to the
            specified element.
            </summary>
      <param name="relativeTo">The element to get the manipulator's position relative to.
            If this parameter is null, the returned point is in the manipulator's container's coordinates.</param>
      <returns>The position of the manipulator relative to the specified element.</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer">
      <summary>
            Shows contact and mouse visualizations.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.#ctor">
      <summary>
            Initializes a new instances of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer" /></strong>
            class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.ShowsVisualizationsProperty">
      <summary>
            Identifies an attached dependency property that specifies if the 
            contact visualizations are enabled for an element and its subtree. 
            </summary>
      <remarks>
            The attached property has <strong><see cref="P:System.Windows.FrameworkPropertyMetadataOptions.Inherits">System.Windows.FrameworkPropertyMetadataOptions.Inherits</see></strong> set. 
            The value that is set on an element propagates to its subtree. 
            For example, setting <strong>ContactVisualizer.ShowsVisualizations=false</strong> on a window 
            disables contact visualizations for the whole window.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.VisualizationColor1Property">
      <summary>
            Identifies an attached dependency property for visualization color1.
            </summary>
      <remarks>
        <para>The property defines one of the colors that are used to draw contact visualizations 
            for contacts or a mouse that is placed over the given element and its subtree.</para>
        <para>The attached property has <strong><see cref="P:System.Windows.FrameworkPropertyMetadataOptions.Inherits">System.Windows.FrameworkPropertyMetadataOptions.Inherits</see></strong> set. 
            The value that is set on an element propagates to its subtree. 
            For example, setting <strong>ContactVisualizer.VisualizationColor1Property</strong> on a window 
            affects visualization colors for the whole window.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.VisualizationColor2Property">
      <summary>
            Identifies an attached dependency property for visualization color2.
            </summary>
      <remarks>
        <para>The property defines one of the colors that are used to draw contact visualizations 
            for contacts or a mouse that are placed over the given element and its subtree.</para>
        <para>The attached property has <strong><see cref="P:System.Windows.FrameworkPropertyMetadataOptions.Inherits">System.Windows.FrameworkPropertyMetadataOptions.Inherits</see></strong> set. 
            The value that is set on an element propagates to its subtree. 
            For example, setting <strong>ContactVisualizer.VisualizationColor2Property</strong> on a window 
            affects visualization colors for the whole window.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.VisualizationColor3Property">
      <summary>
            Identifies an attached dependency property for visualization color3.
            </summary>
      <remarks>
        <para>The property defines one of the colors that are used to draw contact visualizations 
            for contacts or a mouse that are placed over the given element and its subtree.</para>
        <para>The attached property has <strong><see cref="P:System.Windows.FrameworkPropertyMetadataOptions.Inherits">System.Windows.FrameworkPropertyMetadataOptions.Inherits</see></strong> set. 
            The value that is set on an element propagates to its subtree. 
            For example, setting <strong>ContactVisualizer.VisualizationColor3Property</strong> on a window 
            affects visualization colors for the whole window.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.AdapterProperty">
      <summary>
            Identifies an attached dependency property that gives an access to 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong>.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.SetShowsVisualizations(System.Windows.DependencyObject,System.Boolean)">
      <summary>
            Specifies if contact visualizations are enabled over the specified element.
            </summary>
      <param name="element">The element to enable or disable contact visualizations over.</param>
      <param name="value">
        <strong>true</strong> to enable contact visualizations on <i>element</i>; <strong>false</strong> to disable.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetShowsVisualizations(System.Windows.DependencyObject)">
      <summary>
            Gets a value that indicates whether contact visualizations are enabled over the specified element and its subtree.
            </summary>
      <param name="element">The element to check.</param>
      <returns>
        <strong>true</strong> if contact visualizations are enabled on <i>element</i>; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.SetVisualizationColor1(System.Windows.DependencyObject,System.Windows.Media.Color)">
      <summary>
            Sets the first user-defined color.
            </summary>
      <param name="element">The element to set the color.</param>
      <param name="color">The user-defined color to use.</param>
      <remarks>
            Each element has three visualization colors that it can specify. 
            These three colors, taken together, form a <em>color set</em>.
            Each color set occupies some video memory. If multiple elements have the same color sets, 
            they can share the video memory for that set.  
            You should limit the number of different color sets across the elements within a window to conserve video memory.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.SetVisualizationColor2(System.Windows.DependencyObject,System.Windows.Media.Color)">
      <summary>
            Sets the second user-defined color.
            </summary>
      <param name="element">The element to set the color.</param>
      <param name="color">The user-defined color to use.</param>
      <remarks>
            Each element has three visualization colors that it can specify. 
            These three colors, taken together, form a <em>color set</em>.
            Each color set occupies some video memory. If multiple elements have the same color sets, 
            they can share the video memory for that set.  
            You should limit the number of different color sets across the elements within a window to conserve video memory.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.SetVisualizationColor3(System.Windows.DependencyObject,System.Windows.Media.Color)">
      <summary>
            Sets the third user-defined color.
            </summary>
      <param name="element">The element to set the color.</param>
      <param name="color">The user-defined color to use.</param>
      <remarks>
            Each element has three visualization colors that it can specify. 
            These three colors, taken together, form a <em>color set</em>.
            Each color set occupies some video memory. If multiple elements have the same color sets, 
            they can share the video memory for that set.  
            You should limit the number of different color sets across the elements within a window to conserve video memory.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetVisualizationColor1(System.Windows.DependencyObject)">
      <summary>
            Gets the first user-defined color.
            </summary>
      <remarks>
            The property defines one of the colors that are used to draw contact visualizations for contacts or mouse events 
            that are placed over the specified element and its subtree.
            </remarks>
      <param name="element">The element to get the visualization color.</param>
      <returns>The first user-defined color for <i>element</i>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetVisualizationColor2(System.Windows.DependencyObject)">
      <summary>
            Gets the second user-defined color.
            </summary>
      <remarks>
            The property defines one of the colors that are used to draw contact visualizations for contacts or mouse events 
            that are placed over the specified element and its subtree.
            </remarks>
      <param name="element">The element to get the visualization color.</param>
      <returns>The second user-defined color for <i>element</i>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetVisualizationColor3(System.Windows.DependencyObject)">
      <summary>
            Gets the third user-defined color.
            </summary>
      <remarks>
            The property defines one of the colors that are used to draw contact visualizations for contacts or mouse events 
            that are placed over the specified element and  its subtree.
            </remarks>
      <param name="element">The element to get the visualization color.</param>
      <returns>The third user-defined color for <i>element</i>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetAdapter(System.Windows.DependencyObject)">
      <summary>
            Gets the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong>
            object for the specified element.
            </summary>
      <param name="element">The element to get the adapter for.</param>
      <returns>The <strong>ContactVisualizerAdapter</strong> object for <i>element</i>.</returns>
      <remarks>
            When a contact or mouse event is captured, the visualization consists of a glow under the contact 
            and an optional tether that connects the glow with an anchor. 
            The visibility of the visualization and the anchor position is defined by a <strong>ContactVisualizerAdapter</strong> 
            set on the capturing element.
            <strong>GetAdapter</strong> returns an adapter for the given element. 
            By default, the method returns <strong>null</strong>, which means that a visualization is 
            visible, assuming <strong>ContactVisualizer.ShowsVisualizations</strong> is <strong>true</strong> and no tether is drawn.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.SetAdapter(System.Windows.DependencyObject,Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter)">
      <summary>
            Sets the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong>
            adapter for the specified element.
            </summary>
      <param name="element">The element to set the adapter for.</param>
      <param name="provider">The <strong>ContactVisualizerAdapter</strong> object.</param>
      <remarks>
            When you set <i>provider</i> to <strong>null</strong>, 
            <i>element</i> uses a default adapter.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetContactVisualizer(System.Windows.DependencyObject)">
      <summary>
            Returns the first <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer" /></strong> object in the visual tree above the 
            specified visual element.
            </summary>
      <param name="element">The visual element to find a <strong>ContactVisualizer</strong> object for.</param>
      <returns>A <strong>ContactVisualizer</strong> object for the specified visual, or null 
            if no <strong>ContactVisualizer</strong> object can be found.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.InvalidateVisualizations(System.Windows.IInputElement)">
      <summary>
            Invalidates the visibility and anchor position for all visualizations that are 
            shown for the contacts and mouse that
            the specified element captured.
            </summary>
      <param name="element">The element to invalidate captured contacts and mouse for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.ArrangeOverride(System.Windows.Size)">
      <summary>
            Overridden. Positions the child element.
            </summary>
      <param name="arrangeSize">Size that ContactVisualizer will assume to position the child.</param>
      <returns>The actual size needed by the element. This return value is typically the same as the value passed to finalSize.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.GetVisualChild(System.Int32)">
      <summary>
            Overridden. Gets a Visual child at the specified index position.
            </summary>
      <param name="index">The index position of the wanted Visual child.</param>
      <returns>A Visual child of the ContactVisualizer.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizer.VisualChildrenCount">
      <summary>
            Gets the number of child Visual elements in this instance of ContactVisualizer.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.DeviceData`1">
      <summary>
            Simple utility class that manages associated data with contacts.
            Behaves much the same as a Dictionary.
            </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.DeviceData`1.TryGetValue(Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationDevice,`0@)">
      <summary>
            Gets the data associated with a device.
            </summary>
      <param name="device">The device to get data for.</param>
      <param name="result">Receives the data associated with the device.</param>
      <returns>
            returns true if it gets the value. false if no value is associated with the device.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.DeviceData`1.Remove(Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationDevice)">
      <summary>
            Removes the data associated with a device. It does nothing if there is no value associated with the device.
            </summary>
      <param name="device">The device to remove data for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.DeviceData`1.ContainsKey(Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationDevice)">
      <summary>
            Checks whether data is present for the specified device.
            </summary>
      <param name="device">The device to associate this data with.</param>
      <returns>True if present, false if not.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.DeviceData`1.Add(Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationDevice,`0)">
      <summary>
            Adds a new element to the InputDeviceData.
            </summary>
      <param name="device">The device to associate this data with.</param>
      <param name="value">The value to associate with the device.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ContactVisualizations.DeviceData`1.Item(Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizationDevice)">
      <summary>
            Gets or sets data associated with a device.
            </summary>
      <remarks>
            Like Dictionary, will throw KeyNotFound exception if you try to get
            a key that's not present.
            </remarks>
      <param name="device"></param>
      <returns></returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceScrollViewerContactVisualizerAdapter">
      <summary>
            Specializes the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong> 
            class for a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong> control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceScrollViewerContactVisualizerAdapter.GetAnchorPosition(System.Windows.Input.InputDevice)">
      <summary>
            Gets an anchor point for the contact visualization that is relative to the captured device.
            </summary>
      <param name="device">The device that the visualization is associated with.</param>
      <returns>The anchor position for <i>device</i> or <strong>null</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceScrollViewerContactVisualizerAdapter.CreateInstanceCore">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.SurfaceScrollViewerContactVisualizerAdapter" /></strong> class.
            </summary>
      <returns>A new <strong>SurfaceScrollViewerContactVisualizerAdapter</strong> object.</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.TagVisualizerContactVisualizerAdapter">
      <summary>
            Specializes the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.ContactVisualizerAdapter" /></strong>
            class for the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.TagVisualizerContactVisualizerAdapter.ShowsVisualization(System.Windows.Input.InputDevice)">
      <summary>
             Gets a value that indicates whether visualizations should be displayed
             for the specified device.
            </summary>
      <param name="device">The device to check.</param>
      <returns>
        <strong>true</strong> if visualizations should displayed for the specified device;
             otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ContactVisualizations.TagVisualizerContactVisualizerAdapter.CreateInstanceCore">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ContactVisualizations.TagVisualizerContactVisualizerAdapter" /></strong> class.
            </summary>
      <returns>A new <strong>TagVisualizerContactVisualizerAdapter</strong> object.</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ElementMenuActivationMode">
      <summary>
            Represents how an 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong> control
            is activated.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuActivationMode.HostInteraction">
      <summary>
             The menu becomes active when the host element is touched. 
             This mode requires that the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHost" /></strong>
             property of the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong> control
             be set. This mode is the default activation mode.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuActivationMode.AlwaysActive">
      <summary>
             The menu is always active. When a menu is active, it displays a small glowing circle. 
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ElementMenu">
      <summary>
            Represents a control that implements a collection of items in a tree hierarchy that users can select.
            </summary>
      <remarks>
        <para>An <see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu">ElementMenu</see> consists of a collection of 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem">ElementMenuItem</see></strong> objects.</para>
        <para>For more information about how to use this class, see 
            <a href="/ProgrammersGuide/OtherSurfaceSpecificControls/UsingElementMenuControl.htm">Using the Element Menu Control</a>.</para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl">
      <summary>
            Represents a control that you can use to present a collection of items.
            
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.IContactInputElement">
      <summary>
            Defines the common events, event-related properties, and methods for processing contacts on a Microsoft Surface screen.
            </summary>
      <example>
        <para>
            The following example demonstrates how to implement the 
            <strong><see cref="T:Microsoft.Surface.Presentation.IContactInputElement">IContactInputElement</see></strong> 
            interface.
            </para>
        <code source="Presentation\IContactInputElementImplementation\SurfacePanel.cs" region="IContactInputElementImpl" title="Example implementation of IContactInputElement interface" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IContactInputElement.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">The
            <strong><see cref="T:Microsoft.Surface.Presentation.Contact">Contact</see></strong> object
            to capture.</param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled, and the implementing control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IContactInputElement.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">The
            <strong><see cref="T:Microsoft.Surface.Presentation.Contact">Contact</see></strong>
            object to release.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IContactInputElement.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that this element captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactCaptured">
      <summary>
            Determines whether this element has captured a contact.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactCapturedWithin">
      <summary>
            Determines whether this element or its subtree have captured a contact.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactDirectlyOver">
      <summary>
            Determines whether there is a contact directly over this element.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactOver">
      <summary>
            Determines whether there is a contact over this element or its subtree.
            </summary>
      <remarks>
            This property returns <strong>true</strong> if 
            any contact is over the element (including its visual child elements),
            or if any contact is captured to the element, regardless of the location of the captured contact.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.ContactsCaptured">
      <summary>
            Gets the collection of contacts that this element has captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.ContactsCapturedWithin">
      <summary>
            Gets the collection of contacts that this element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.ContactsDirectlyOver">
      <summary>
            Gets the collection of contacts over this element.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IContactInputElement.ContactsOver">
      <summary>
            Gets the collection of contacts over this element or its subtree.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactDown">
      <summary>
            Occurs when a contact touches this element.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactUp">
      <summary>
            Occurs when a contact over this element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong>ContactUp</strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactChanged">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactEnter">
      <summary>
            Occurs when a contact enters the element.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactLeave">
      <summary>
            Occurs when a contact leaves the element boundary.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.PreviewContactDown">
      <summary>
            Occurs when a contact touches the element.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.PreviewContactUp">
      <summary>
            Occurs when a contact leaves the element.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.PreviewContactChanged">
      <summary>
            Occurs when a contact is about to change any of its attributes, including orientation and position. 
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.GotContactCapture">
      <summary>
            Occurs when an element gets capture.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.LostContactCapture">
      <summary>
            Occurs when an element loses a capture.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.PreviewContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture on the Microsoft Surface screen.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.PreviewContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture on the 
            Microsoft Surface screen. 
            <note type="caution">A user must touch the Microsoft Surface screen for at
            least 2 seconds to trigger this event.</note></summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture on the Microsoft Surface screen.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture on the Microsoft Surface screen.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactDirectlyOverChanged">
      <summary>Occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactDirectlyOver">IsAnyContactDirectlyOver</see></strong>
            property changes.</summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactCapturedChanged">
      <summary>Occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactCaptured">IsAnyContactCaptured</see></strong>
            property changes.</summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactCapturedWithinChanged">
      <summary>Occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactCapturedWithin">IsAnyContactCapturedWithin</see></strong>
            property changes.</summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationModeProperty">
      <summary>
            Identifies a dependency property that represents how the menu is activated. 
            </summary>
      <remarks>
            The <strong>ActivationModeProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationMode" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHostProperty">
      <summary>
            Identifies a dependency property that represents the host that activates the menu. 
            </summary>
      <remarks>
            The <strong>ActivationHostProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHost" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.OrientationProperty">
      <summary>
            Identifies a dependency property that represents the value in degrees 
            that controls the direction in which the menu opens.
            </summary>
      <remarks>
            The <strong>OrientationProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.Orientation" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.IsPressedProperty">
      <summary>
            Identifies a dependency property that represents whether or not the menu is pressed.
            </summary>
      <remarks>
            The <strong>IsPressedProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.IsPressed" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.IsSubmenuOpenProperty">
      <summary>
            Identifies a dependency property that represents whether  
            the child menu (if any) of this menu is expanded.
            </summary>
      <remarks>
            The <strong>IsSubmenuOpenProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.IsSubmenuOpen" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuOpenedEvent">
      <summary>
            Identifies an event that occurs when a submenu is opened.
            </summary>
      <remarks>
            The <strong>SubmenuOpenedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuOpened" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuClosedEvent">
      <summary>
            Identifies an event that occurs when a submenu is closed.
            </summary>
      <remarks>
            The <strong>SubmenuClosedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuClosed" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenu.IsActiveProperty">
      <summary>
            Identifies a dependency property that represents whether this menu is visible.
            </summary>
      <remarks>
            The <strong>IsActiveProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.IsActive" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactChanged" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseMoveEvent">MouseMove</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactDown" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactUp" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactEnter" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceItemsControl.ContactLeave" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseDownEvent">MouseDown</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseUpEvent">MouseUp</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseEnterEvent">MouseEnter</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseLeaveEvent">MouseLeave</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.GetContainerForItemOverride">
      <summary>
            Creates an <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> control for the item container.
            </summary>
      <returns>A new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> object.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines whether the candidate container is an <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> object.
            </summary>
      <param name="item">The object to check.</param>
      <returns>
        <strong>true</strong> if <em>item</em> is an <strong>ElementMenuItem</strong> object;
            otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares the specified element to display the specified item. 
            </summary>
      <param name="element">The element that is used to display the specified item.</param>
      <param name="item">The specified item.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Items changed override.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenu.GetLayoutClip(System.Windows.Size)">
      <summary>
            Gets a geometry for a clipping mask.
            </summary>
      <remarks>The mask applies if the layout system tries to arrange an element that is larger than the available display space.</remarks>
      <param name="layoutSlotSize">The size of the part of the element that does visual presentation.</param>
      <returns>The clipping geometry.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationMode">
      <summary>
            Gets or sets a value that specifies how the menu is activated.
            </summary>
      <remarks>
        <para>The <strong>ActivationMode</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationModeProperty" /></strong> field.</para>
        <note type="caution"> If <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHost" /></strong> is not 
            set, the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong> 
            control is never activated if <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationMode" /></strong> is set to 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuActivationMode.HostInteraction" /></strong>.</note>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHost">
      <summary>
            Gets or sets a value that specifies the host that activates the menu.
            </summary>
      <remarks>
        <para>The <strong>ActivationHost</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHostProperty" /></strong> 
            field.</para>
        <note type="caution"> If your application does not set <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationHost" /></strong>, 
            the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong> 
            control is never activated if <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenu.ActivationMode" /></strong> is set to 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuActivationMode.HostInteraction" /></strong>. 
            </note>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenu.Orientation">
      <summary>
            Gets or sets the value in degrees that controls the direction in which the menu opens.
            </summary>
      <remarks>
            The <strong>Orientation</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.OrientationProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenu.IsPressed">
      <summary>
            Gets or (from a derived class) sets a value that indicates whether the menu is pressed.
            </summary>
      <remarks>
            The <strong>IsPressed</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.IsPressedProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenu.IsSubmenuOpen">
      <summary>
            Gets or sets a value that indicates whether the child menu (if any) 
            of this menu is expanded.
            </summary>
      <remarks>
            The <strong>IsSubmenuOpen</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.IsSubmenuOpenProperty" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuOpened">
      <summary>
            Occurs when a submenu is opened.
            </summary>
      <remarks>
            The <strong>SubmenuOpened</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuOpenedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuClosed">
      <summary>
            Occurs when a submenu is closed.
            </summary>
      <remarks>
            The <strong>SubmenuClosed</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.SubmenuClosedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenu.IsActive">
      <summary>
            Gets a value that indicates whether this menu is visible. 
            </summary>
      <remarks>
        <para>
            The <strong>IsActive</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenu.IsActiveProperty" /></strong> field.
            </para>
        <para>
            In contrast to the <strong><see cref="P:System.Windows.UIElement.Visibility">UIElement.Visibility</see></strong> 
            property, <strong>IsActive</strong> enables menu items to fade in and out instead of 
            instantly showing or hiding. To override the default fade animations, you can trigger 
            off the <strong>IsActive</strong> property in your own 
            <strong>ElementMenu</strong> styles.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ElementMenuItemRole">
      <summary>
            Represents the role of a menu item.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItemRole.Item">
      <summary>
            A leaf node, typically associated with an executable action.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItemRole.Header">
      <summary>
            A node with child items.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem">
      <summary>
            Represents an item that users can select inside an 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong> 
            control.
            </summary>
      <remarks>
        <note type="caution">
            You should not set the 
            <strong><see cref="P:System.Windows.FrameworkElement.Margin" /></strong>
            property of an <strong>ElementMenuItem</strong> object. The layout logic for
            multiple and nested <strong>ElementMenuItem</strong> objects is handled
            internally by 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong>.
            If you set the <strong>Margin</strong> property, the layout of the menu items is unpredictable.
            </note>
        <para>For an overview of how to use this class, please see 
            <a href="/ProgrammersGuide/OtherSurfaceSpecificControls/UsingElementMenuControl.htm">Using the Element Menu Control</a>.</para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl">
      <summary>
            Represents a control that has a header that you can use to present a collection of items. 
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OrientationProperty">
      <summary>
            Identifies a dependency property that represents the value in degrees 
            that controls the direction in which the menu item opens.
            </summary>
      <remarks>
            The <strong>OrientationProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Orientation" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsPressedProperty">
      <summary>
            Identifies a dependency property that represents whether this menu item is pressed.
            </summary>
      <remarks>
            The <strong>IsPressedProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsPressed" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsActiveProperty">
      <summary>
            Identifies a dependency property that represents whether this menu item is visible.
            </summary>
      <remarks>
            The <strong>IsActiveProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsActive" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsSubmenuOpenProperty">
      <summary>
            Identifies a dependency property that represents whether 
            the child menu (if any) of this menu item is expanded.
            </summary>
      <remarks>
            The <strong>IsSubmenuOpenProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsSubmenuOpen" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuOpenedEvent">
      <summary>
            Identifies an event that occurs when a submenu is opened.
            </summary>
      <remarks>
            The <strong>SubmenuOpenedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuOpened" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuClosedEvent">
      <summary>
            Identifies an event that occurs when a submenu is closed.
            </summary>
      <remarks>
            The <strong>SubmenuClosedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuClosed" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandProperty">
      <summary>
            Identifies a dependency property that represents the command that i 
            run when the command source is called. 
            </summary>
      <remarks>
            The <strong>CommandProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Command" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandParameterProperty">
      <summary>
            Identifies a dependency property that represents a user-defined data value 
            that can be passed to the command when it is run. 
            </summary>
      <remarks>
            The <strong>CommandParameterProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandParameter" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandTargetProperty">
      <summary>
            Identifies a dependency property that represents the object that the command is being run on. 
            </summary>
      <remarks>
            The <strong>CommandTargetProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandTarget" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IconProperty">
      <summary>
            Identifies a dependency property that represents the icon of the menu item. 
            </summary>
      <remarks>
            The <strong>IconProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Icon" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.RoleProperty">
      <summary>
            Identifies a dependency property that represents the role of the menu item.
            </summary>
      <remarks>
            The <strong>RoleProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Role" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnInitialized(System.EventArgs)">
      <summary>
            Called when the <strong><see cref="P:System.Windows.FrameworkElement.IsInitialized" /></strong>
            property is set to true internally.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Called when the <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong>
            property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.ClickEvent">
      <summary>
            Identifies an event that occurs when a contact is released on an executable item.
            </summary>
      <remarks>
            The <strong>ClickEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Click" /></strong> event.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.GetContainerForItemOverride">
      <summary>
            Creates an <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> object for the item container.
            </summary>
      <returns>A new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> object.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines whether the candidate container is an <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> object.
            </summary>
      <param name="item">The object to check.</param>
      <returns>
        <strong>true</strong> if <em>item</em> is an <strong>ElementMenuItem</strong> object;
            otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares the specified element to display the specified item. 
            </summary>
      <param name="element">The element that is used to display the specified item.</param>
      <param name="item">The specified item.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactDown" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactUp" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactEnter" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceHeaderedItemsControl.ContactLeave" /></strong> event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseDownEvent">MouseDown</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseUpEvent">MouseUp</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseEnterEvent">MouseEnter</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseLeaveEvent">MouseLeave</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OnClick">
      <summary>
            An <strong>ElementMenuItem</strong> is clicked, raising a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Click" /></strong> event.
            </summary>
      <remarks>
            If you override this method, call <strong>base.OnClick()</strong> to get the default behavior for an 
            <strong>ElementMenuItem</strong> object, which should raise a click event, 
            call a command if there is one, and close the menu. 
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ElementMenuItem.GetLayoutClip(System.Windows.Size)">
      <summary>
            Gets a geometry for a clipping mask. 
            </summary>
      <remarks>The mask applies if the layout system tries to arrange an element that is larger than the available display space.</remarks>
      <param name="layoutSlotSize">The size of the part of the element that does visual presentation.</param>
      <returns>The clipping geometry.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.MenuRoot">
      <summary>
            Gets the root <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenu" /></strong>
            object that contains this <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItem" /></strong> object.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.ItemStyleKey">
      <summary>
            Gets the style <strong><see cref="T:System.Windows.ResourceKey">ResourceKey</see></strong> 
            for a menu item that has an 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItemRole">Item</see></strong> 
            role.
            </summary>
      <example>
        <code source="Presentation\Class_ElementMenu\SurfaceWindow1.xaml" title="To change the Style on an ElementMenuItem" lang="xml" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.HeaderStyleKey">
      <summary>
            Gets the style <strong><see cref="T:System.Windows.ResourceKey">ResourceKey</see></strong> 
            for a menu item that has a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ElementMenuItemRole">Header</see></strong> 
            role.
            </summary>
      <example>
        <code source="Presentation\Class_ElementMenu\SurfaceWindow1.xaml" title="To change the Style on an ElementMenuItem" lang="xml" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Orientation">
      <summary>
            Gets or sets the value in degrees that controls the direction in which the menu item opens.
            </summary>
      <remarks>
            The <strong>Orientation</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.OrientationProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsPressed">
      <summary>
            Gets a value that indicates whether this menu item is pressed.
            </summary>
      <remarks>
            The <strong>IsPressed</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsPressedProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsActive">
      <summary>
            Gets a value that indicates whether this menu item is visible. 
            </summary>
      <remarks>
        <para>
            The <strong>IsActive</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsActiveProperty" /></strong> field.
            </para>
        <para>
            In contrast to the <strong><see cref="P:System.Windows.UIElement.Visibility">UIElement.Visibility</see></strong> 
            property, <strong>IsActive</strong> enables menu items to fade in and out instead of 
            instantly showing or hiding. To override the default fade animations, you can trigger off the
            <strong>IsActive</strong> property in your own 
            <strong>ElementMenuItem</strong> styles.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsSubmenuOpen">
      <summary>
            Gets or sets a value that indicates whether the child menu (if any) 
            of this menu item is expanded.
            </summary>
      <remarks>
            The <strong>IsSubmenuOpen</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsSubmenuOpenProperty" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuOpened">
      <summary>
            Occurs when a submenu is opened.
            </summary>
      <remarks>
            The <strong>SubmenuOpened</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuOpenedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuClosed">
      <summary>
            Occurs when a submenu is closed.
            </summary>
      <remarks>
            The <strong>SubmenuClosed</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.SubmenuClosedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Command">
      <summary>
            Gets or sets the command that is run when the command source is called. 
            </summary>
      <remarks>
            The <strong>Command</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandParameter">
      <summary>
            Gets or sets a user-defined data value that can be passed to the command when it is run. 
            </summary>
      <remarks>
            The <strong>CommandParameter</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandParameterProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandTarget">
      <summary>
            Gets or sets the object that the command is being run on. 
            </summary>
      <remarks>
            The <strong>CommandTarget</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.CommandTargetProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IsEnabledCore">
      <summary> 
                Gets the value of the <strong><see cref="P:System.Windows.UIElement.IsEnabled" /></strong> property.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Icon">
      <summary>
            Gets or sets the icon of the menu item.
            </summary>
      <remarks>
            The <strong>Icon</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.IconProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Role">
      <summary>
            Gets the role of the menu item.
            </summary>
      <remarks>
            The <strong>Role</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.RoleProperty" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ElementMenuItem.Click">
      <summary>
            Occurs when a contact is released on an executable item.
            </summary>
      <remarks>
            The <strong>Click</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ElementMenuItem.ClickEvent" /></strong> field.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector">
      <summary>
            Represents a control that enables a user to select items from among its child elements.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceSelector.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryBar">
      <summary>
            Represents a control that places items in a horizontal bar.
            </summary>
      <remarks>
        <para>
            The <strong>LibraryBar</strong> class is an 
            <strong><see cref="T:System.Windows.Controls.ItemsControl" /></strong> control
            that arranges items in a horizontal bar. <strong>LibraryBar</strong> provides the following features: 
            </para>
        <list type="bullet">
          <item>
            Arrange items in one or more rows by setting the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBar.Rows" /></strong> property.
            </item>
          <item>
            Group items by using properties and methods of the 
            <strong><see cref="T:System.Windows.Data.CollectionView" /></strong>
            and 
            <strong><see cref="T:System.Windows.Data.CollectionViewSource" /></strong>
            classes and of the 
            <strong><see cref="T:System.ComponentModel.ICollectionView" /></strong>
            interface. <strong>LibraryBar</strong> supports a single group description only.
            </item>
          <item>
            Customize the style that is applied to groups or use the default 
            group style that is built into <strong>LibraryBar</strong>.
            </item>
          <item>
            By default, <strong>LibraryBar</strong> supports drag-and-drop operations.
            </item>
          <item>
            By default, when an item is dragged from the <strong>LibraryBar</strong> control, it remains 
            visible but it is dimmed to indicate that it has been placed into another control.
            </item>
        </list>
        <para>
            For more information see
            <a href="/ProgrammersGuide/OtherSurfaceSpecificControls/UsingLibraryBarControl.htm">Using the LibraryBar Control</a>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBar.RowsProperty">
      <summary>
            Identifies a dependency property that represents the number of rows in each column. 
            </summary>
      <remarks>
            The <strong>RowsProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBar.Rows" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupProperty">
      <summary>
            Identifies a dependency property that represents the currently selected group.
            </summary>
      <remarks>
            The <strong>SelectedGroupProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroup" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBar.DragCursorStyleProperty">
      <summary>
            Identifies a dependency property that represents the style of the dragging cursor. 
            </summary>
      <remarks>
            The <strong>DragCursorStyleProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBar.DragCursorStyle" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBar.IsActiveProperty">
      <summary>
            Identifies a dependency property that specifies the active state of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar">LibraryBar</see></strong> control.
            </summary>
      <remarks>The default value is <strong>false</strong>.
            <para>The <strong>IsActiveProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBar.IsActive" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupChangedEvent">
      <summary>
            Identifies an event that occurs when the selected group changes.
            </summary>
      <remarks>
            The <strong>SelectedGroupChangedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupChanged" /></strong> event.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnApplyTemplate">
      <summary>
            Called whenever your application or internal processes call the
            <strong><see cref="M:System.Windows.FrameworkElement.ApplyTemplate">ApplyTemplate</see></strong>
            method.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.SetIsItemDataEnabled(System.Object,System.Boolean)">
      <summary>
            Sets the enabled status for a specified object.
            </summary>
      <param name="data">The object to set the enabled status on.</param>
      <param name="isItemDataEnabled">The enabled status.</param>
      <remarks>
        <para>When an item is dragged out of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar">LibraryBar</see></strong> control, 
            the <em>data</em> object is disabled. When this item is dragged into the 
            <strong>LibraryBar</strong> control, the <em>data</em> object is enabled.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.GetIsItemDataEnabled(System.Object)">
      <summary>
            Get the enabled status for a specified object.
            </summary>
      <param name="data">The object to get the enabled status from.</param>
      <returns>
        <strong>true</strong> if data is enabled; otherwise, <strong>false</strong>.</returns>
      <remarks>
        <para>When an item is dragged out of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar">LibraryBar</see></strong> control, 
            the <em>data</em> object is disabled. When this item is dragged 
            into the <strong>LibraryBar</strong> control, 
            the <em>data</em> object is enabled.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.MeasureOverride(System.Windows.Size)">
      <summary>
            Remeasures a control.
            </summary>
      <param name="constraint">Measurement constraints. A control cannot return a size larger than the constraint.</param>
      <returns>The size of the control.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnSelectedGroupChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>
            Raises the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupChanged" /></strong> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.GetContainerForItemOverride">
      <summary>
            Creates or identifies the element that is used to display the given item. 
            </summary>
      <returns>
            A new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBarItem" /></strong> object.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines if the specified item is (or is eligible to be) its own container. 
            </summary>
      <param name="item">The item to check.</param>
      <returns>
        <strong>true</strong> if <em>item</em> is of type 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBarItem" /></strong>;
            otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnCreateAutomationPeer">
      <summary>
            Returns a class-specific 
            <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /></strong>
            object.
            </summary>
      <returns>
            A new
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer" /></strong>
            object.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /></strong>
            property changes. 
            </summary>
      <param name="oldValue">The previous value of the <strong>ItemsSource</strong> property.</param>
      <param name="newValue">The new value of the <strong>ItemsSource</strong> property.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Updates the current selection when an item in the 
            <strong><see cref="T:System.Windows.Controls.Primitives.Selector" /></strong>
            object has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares the specified element to display the specified item.
            </summary>
      <param name="element"> The element that is used to display the specified item. </param>
      <param name="item"> The item to display. </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the parent of the visual object changes.
            </summary>
      <param name="oldParent">
            The previous
            parent of the <strong><see cref="T:System.Windows.Media.Visual">Visual</see></strong>
            object. If the <strong>Visual</strong>
            object did not have a previous parent, the value of the parameter is null.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel">ItemsPanel</see></strong>
            property changes.
            </summary>
      <param name="oldItemsPanel"> The previous value of the <strong>ItemsPanel</strong> property. </param>
      <param name="newItemsPanel"> The new value of the <strong>ItemsPanel</strong> property.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate">ItemTemplate</see></strong>
            property changes.
            </summary>
      <param name="oldItemTemplate"> The previous value of the <strong>ItemTemplate</strong> property. </param>
      <param name="newItemTemplate"> The previous value of the <strong>ItemTemplate</strong> property. </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
      <summary>
            Called when 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector">ItemTemplateSelector</see></strong>
            property changes.
            </summary>
      <param name="oldItemTemplateSelector"> The previous value of the <strong>ItemTemplateSelector</strong> property. </param>
      <param name="newItemTemplateSelector"> The new value of the <strong>ItemTemplateSelector</strong> property. </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle">ItemContainerStyle</see></strong>
            property changes.
            </summary>
      <param name="oldItemContainerStyle"> The previous value of the <strong>ItemContainerStyle</strong> property. </param>
      <param name="newItemContainerStyle"> The new value of the <strong>ItemContainerStyle</strong> property. </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector">ItemContainerStyleSelector</see></strong>
            property changes.
            </summary>
      <param name="oldItemContainerStyleSelector"> The previous value of the <strong>ItemContainerStyleSelector</strong> property. </param>
      <param name="newItemContainerStyleSelector"> The new value of the <strong>ItemContainerStyleSelector</strong> property. </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.Microsoft#Surface#Presentation#Controls#IItemsTransitionClient#GetTransitionElement(System.Object)">
      <summary>
            Returns an actual FrameworkElement for the data.
            </summary>
      <param name="item">Data of the element to retrieve.</param>
      <returns>FrameworkElement to transfer.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBar.Microsoft#Surface#Presentation#Controls#IItemsTransitionClient#OnItemsTransitionCompleted(System.Object,System.EventArgs)">
      <summary>
            Called when a transition animation completed.
            </summary>
      <param name="sender">Owner who runs the animation.</param>
      <param name="args">EventArgs(currently not used).</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBar.Rows">
      <summary>
            Gets or sets the number of rows in each column.
            </summary>
      <remarks>
            This is a dependency property as identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBar.RowsProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroup">
      <summary>
            Get or sets the currently selected group.
            </summary>
      <remarks>
            The <strong>SelectedGroup</strong> property is a dependency property that is 
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBar.DragCursorStyle">
      <summary>
            Gets or sets the style of the dragging cursor.
            </summary>
      <remarks>
            The <strong>DragCursorStyle</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBar.DragCursorStyleProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBar.IsActive">
      <summary>
            Gets or sets a Boolean value that determines whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar">LibraryBar</see></strong> control is active.
            </summary>
      <remarks>
        <para>
            The <strong>IsActive</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBar.IsActiveProperty" /></strong> field.
            </para>
        <para>
            When the <strong>IsActive</strong> property is set to <strong>true</strong>, the <strong>LibraryBar</strong> 
            control displays a brief animation and highlights the border of the control.
            When this property is set to <strong>false</strong>, the border is darkened.
            Users can interact with the <strong>LibraryBar</strong> control in either state.
            </para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupChanged">
      <summary>
            Occurs when the selected group changes.
            </summary>
      <remarks>
            The <strong>SelectedGroupChanged</strong> event is a routed event 
            that is identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBar.SelectedGroupChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBar.Microsoft#Surface#Presentation#Controls#IItemsTransitionClient#TransitionItems">
      <summary>
            Returns data contexts for the items to be transferred.
            </summary>
      <returns>IList of the data contexts to be transferred</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryBarItem">
      <summary>
            Represents an item that is used in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar" /></strong>
            control.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceContentControl">
      <summary>
            Represents a control with one piece of content.
            
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedChangedEvent">
      <summary>
            Identifies an event that occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressed" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>IsPressedChangedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedChanged" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedProperty">
      <summary>
            Identifies a dependency property that represents whether or not this item is being pressed. 
            </summary>
      <remarks>
            The <strong>IsPressedProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressed" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsItemDataEnabledProperty">
      <summary>
            Identifies a dependency property that represents the enabled state of the item.
            </summary>
      <remarks>
            The <strong>IsItemDataEnabledProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsItemDataEnabled" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the parent of this element in the visual tree changes.
            </summary>
      <param name="oldParent">
            The previous parent element. This parameter can be <strong>null</strong> to indicate that the 
            element did not have a visual parent previously. 
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnIsPressedChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
      <summary>
            Raises the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedChanged" /></strong> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.MouseMoveEvent">MouseMove</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Event handler for the <strong><see cref="F:System.Windows.Input.Mouse.LostMouseCaptureEvent">LostMouseCapture</see></strong> attached event.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactChanged" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactUp" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryBarItem.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.LostContactCapture" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedChanged">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressed" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>IsPressedChanged</strong> event is a routed event that is identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressed">
      <summary>
            Gets a value that indicates whether this item is being pressed.
            </summary>
      <remarks>
            The <strong>IsPressed</strong> property returns a value that indicates whether a mouse device, keyboard, 
            or contact device is pressing the item.
            <strong>IsPressed</strong> is a dependency property that is identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsPressedProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsItemDataEnabled">
      <summary>
            Gets a value that indicates the enabled state of the item.
            </summary>
      <remarks>
        <para>The <strong>IsItemDataEnabled</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryBarItem.IsItemDataEnabledProperty" /></strong> field.</para>
        <para>
          <strong>IsItemDataEnabled</strong> is a read-only property. Use 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.LibraryBar.SetIsItemDataEnabled">SetIsItemDataEnabled</see></strong> 
            to change the value of this property.</para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode">
      <summary>
            Represents the view mode of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode.Stack">
      <summary>
            Items are organized into a vertical stack.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode.Bar">
      <summary>
            Items are organized into a horizontal bar.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryStack">
      <summary>
            Represents a control that displays items in a stack arrangement and enables users
            to shift the top item among its child elements.
            </summary>
      <remarks>
        <para>By default, <strong>LibraryStack</strong> supports drag-and-drop operations. 
            For more information, see 
            <a href="/ProgrammersGuide/OtherSurfaceSpecificControls/UsingLibraryStackControl.htm">Using the LibraryStack Control</a>.</para>
        <para>
            The 
            <strong><see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex" /></strong>
            property of a <strong>LibraryStack</strong> control is inherited from
            the <strong><see cref="T:System.Windows.Controls.Primitives.Selector" /></strong> class
            but it is handled differently by <strong>LibraryStack</strong> than the ancestor class. 
            Because a <strong>LibraryStack</strong> control always has a selected item 
            (unless the
            <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong>
            collection is empty), the <strong>SelectedIndex</strong> property 
            of a non-empty <strong>LibraryStack</strong> object is initialized to zero.
            </para>
        <para>
            Similarly, the 
            <strong><see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem" /></strong>
            property is always non-null unless the <strong>Items</strong> collection is empty.
            </para>
            The 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /></strong>
            property for <strong>LibraryStack</strong> has restrictions on what can be assigned to it.
            For more information, see
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.LibraryStack.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">OnItemsSourceChanged</see></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryStack.DisplayItemsCountProperty">
      <summary>
            Identifies a dependency property that represents the count of the displayed items.
            </summary>
      <remarks>
            The <strong>DisplayItemsCountProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStack.DisplayItemsCount" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryStack.DragCursorStyleProperty">
      <summary>
            Identifies a dependency property that represents the style of the dragging cursor. 
            </summary>
      <remarks>
            The <strong>DragCursorStyleProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStack.DragCursorStyle" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryStack.IsActiveProperty">
      <summary>
            Identifies a dependency property that specifies the active state of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack">LibraryStack</see></strong> object.
            </summary>
      <remarks>The default value is <strong>false</strong>.
            <para>The <strong>IsActiveProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStack.IsActive" /></strong> property.</para></remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong> 
            property changes.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /></strong>
            property changes.
            </summary>
      <param name="oldValue">The previous <strong>ItemsSource</strong> value.</param>
      <param name="newValue">The new <strong>ItemsSource</strong> value.</param>
      <remarks>
        <para>
            An object that is assigned to the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /></strong>
            property of a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.StackView" /></strong> control must meet
            the following requirements:
            </para>
        <list type="bullet">
          <item>It must implement the <strong><see cref="T:System.Collections.Specialized.INotifyCollectionChanged" /></strong> interface.</item>
          <item>It must implement the <strong><see cref="T:System.Collections.IList" /></strong> interface.</item>
          <item>
            <strong>
              <see cref="P:System.Collections.IList.IsReadOnly">IList.IsReadOnly</see>
            </strong> must equal <strong>false</strong>.</item>
          <item>
            <strong>
              <see cref="P:System.Collections.IList.IsFixedSize">IList.IsFixedSize</see>
            </strong> must equal <strong>false</strong>.</item>
        </list>
        <para>
            If the object does not meet one of the preceding conditions, <strong>OnItemsSourceChanged</strong> throws an
            <strong><see cref="T:System.ArgumentException" /></strong> exception.
            Instead, consider using an
            <a href="http://msdn.microsoft.com/en-us/library/ms668604.aspx" target="_blank"><strong>ObservableCollection</strong></a>
            object for the <strong>ItemsSource</strong> property. This collection satisfies all of the requirements.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
            Called when the selection changes.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.GetContainerForItemOverride">
      <summary>
            Creates or identifies the element that is used to display the given item. 
            </summary>
      <returns>
            A new <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem" /></strong> object.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines if the specified item is (or is eligible to be) its own container. 
            </summary>
      <param name="item">The item to check.</param>
      <returns>
        <strong>true</strong> if <em>item</em> is of type 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem" /></strong>;
            otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStack.OnCreateAutomationPeer">
      <summary>
            Returns a class-specific 
            <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /></strong>
            object.
            </summary>
      <returns>
            A new
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer" /></strong>
            object.
            </returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryStack.DisplayItemsCount">
      <summary>
            Gets the count of displayed items.
            </summary>
      <remarks>
            The <strong>DisplayItemsCount</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryStack.DisplayItemsCountProperty" /></strong> field.
            The default value for this property is six (6).
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryStack.DragCursorStyle">
      <summary>
            Gets or sets the style of the dragging cursor.
            </summary>
      <remarks>
            The <strong>DragCursorStyle</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryStack.DragCursorStyleProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryStack.IsActive">
      <summary>
            Gets or sets a value that indicates whether or not a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack">LibraryStack</see></strong> 
            object is in the active state.
            </summary>
      <remarks>
        <para>
            The <strong>IsActive</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryStack.IsActiveProperty" /></strong> field.
            </para>
        <para>
            When the <strong>IsActive</strong> property is set to <strong>true</strong>, the <strong>LibraryStack</strong> 
            control displays a brief animation and highlights the border of the control.
            When this property is set to <strong>false</strong>, the border is darkened.
            Users can interact with the <strong>LibraryStack</strong> control in either state.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem">
      <summary>
            Represents an item that is used in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryStackItem.SelectedEvent">
      <summary>
            Identifies an event that occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelected" /></strong> property becomes <strong>true</strong>.
            </summary>
      <remarks>
            The <strong>SelectedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryStackItem.Selected" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryStackItem.UnselectedEvent">
      <summary>
            Identifies an event that occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelected" /></strong> property becomes <strong>false</strong>.
            </summary>
      <remarks>
            The <strong>UnselectedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryStackItem.Unselected" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelectedProperty">
      <summary>
            Identifies a dependency property that represents the selected state of the item. 
            </summary>
      <remarks>
            The <strong>IsSelectedProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelected" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnSelected(System.Windows.RoutedEventArgs)">
      <summary>
            Called when the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem" /></strong> object is selected in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong>
            control.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnUnselected(System.Windows.RoutedEventArgs)">
      <summary>
            Called when the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem" /></strong> object is unselected in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong>
            control.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactDown" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContentControl.ContactTapGesture" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Event handler for the 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /></strong>
            event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryStackItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the parent of this element in the visual tree changes.
            </summary>
      <param name="oldParent">
            The previous parent element. This parameter can be <strong>null</strong> to indicate that the 
            element did not have a visual parent previously. 
            </param>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryStackItem.Selected">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelected" /></strong> property becomes <strong>true</strong>.
            </summary>
      <remarks>
            The <strong>Selected</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryStackItem.SelectedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryStackItem.Unselected">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelected" /></strong> property becomes <strong>false</strong>.
            </summary>
      <remarks>
            The <strong>Unselected</strong> event is a routed event that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryStackItem.UnselectedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelected">
      <summary>
            Gets or sets a value that indicates whether or not this item is selected.
            </summary>
      <remarks>
        <para>
            The <strong>IsSelected</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryStackItem.IsSelectedProperty" /></strong> field.
            </para>
        <para>
            Setting <strong>IsSelected</strong> to <strong>false</strong> on the currently selected item has no effect
            because the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack">LibraryStack</see></strong> 
            control must have a selected item.
            </para>
        <para>
            To select an item, set <strong>IsSelected</strong> to <strong>true</strong> on the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem">LibraryStackItem</see></strong> that you want to become 
            the topmost item in the <strong>LibraryStack</strong> control. This setting causes the previously selected 
            item to be unselected and its <strong>IsSelected</strong> property to be set to 
            <strong>false</strong>.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.GroupKeyValueConvertCallback">
      <summary>
            Callback to be used to get a formatted string value that corresponds to a group key.
            </summary>
      <param name="value">A group key value.</param>
      <returns>A formatted group key to display.</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer">
      <summary>
            Provides automation support for the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer" /></strong> class.
            </summary>
      <param name="owner">The owner of this automation peer.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer.GetAutomationIdCore">
      <summary>
            Gets the automation identifier.
            </summary>
      <returns>The automation id.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer.GetClassNameCore">
      <summary>
            Gets the automation class name.
            </summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer.GetAutomationControlTypeCore">
      <summary>
            Gets the automation control type.
            </summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer.IsKeyboardFocusableCore">
      <summary>
            Gets a value that indicates whether or not the keyboard is focusable.
            </summary>
      <returns>This method always returns <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>
            Creates an automation peer.
            </summary>
      <param name="item">Object on which to create the automation peer.</param>
      <returns>
             A new 
             <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer" /></strong>
             object.
            </returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer">
      <summary>
            Provides automation support for the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBarItem" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer" /></strong> class.
            </summary>
      <param name="item">The corresponding item.</param>
      <param name="itemsControlAutomationPeer">
            The automation peer of the corresponding
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar" /></strong>
            control.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>
            Gets the automation control type.
            </summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer.GetClassNameCore">
      <summary>
            Gets the automation class name.
            </summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>
            Gets a value that indicates whether or not the keyboard is focusable.
            </summary>
      <returns>This method always returns <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryBarItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
            Gets the control pattern that is associated with the specified 
            <strong><see cref="T:System.Windows.Automation.Peers.PatternInterface" /></strong>.
            </summary>
      <param name="patternInterface">The pattern interface to be queried.</param>
      <returns>
            The object that implements the pattern interface; 
            <strong>null</strong> if this peer does not support this interface. 
            </returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer">
      <summary>
            Provides automation support for the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer.#ctor(Microsoft.Surface.Presentation.Controls.LibraryContainer)">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer" /></strong> class.
            </summary>
      <param name="owner">
            The
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control that owns this automation peer.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer.GetAutomationIdCore">
      <summary>
            Gets the automation identifier.
            </summary>
      <returns>The automation id.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer.GetClassNameCore">
      <summary>
            Gets the automation class name.
            </summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer.GetAutomationControlTypeCore">
      <summary>
            Gets the automation control type.
            </summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
            Gets the control pattern that is associated with the specified 
            <strong><see cref="T:System.Windows.Automation.Peers.PatternInterface" /></strong>.
            </summary>
      <param name="patternInterface">The pattern interface to be queried.</param>
      <returns>
            The object that implements the pattern interface; 
            <strong>null</strong> if this peer does not support this interface. 
            </returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer">
      <summary>
            Provides automation support for the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer.#ctor(Microsoft.Surface.Presentation.Controls.LibraryStack)">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer" /></strong> class.
            </summary>
      <param name="owner">
            The
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong>
            control that owns this automation peer.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
            Gets the control pattern that is associated with the specified 
            <strong><see cref="T:System.Windows.Automation.Peers.PatternInterface" /></strong>.
            </summary>
      <param name="patternInterface">The pattern interface to be queried.</param>
      <returns>
            The object that implements the pattern interface; 
            <strong>null</strong> if this peer does not support this interface. 
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer.GetClassNameCore">
      <summary>
            Gets the automation class name.
            </summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer.IsKeyboardFocusableCore">
      <summary>
            Gets a value that indicates whether or not the keyboard is focusable.
            </summary>
      <returns>This method always returns <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer.GetAutomationControlTypeCore">
      <summary>
            Gets the automation control type.
            </summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer.CreateItemAutomationPeer(System.Object)">
      <summary>
            Creates an automation peer.
            </summary>
      <param name="item">Object on which to create the automation peer.</param>
      <returns>
             A new 
             <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer" /></strong>
             object.
            </returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer">
      <summary>
            Provides automation support for the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStackItem" /></strong>
            control.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.#ctor(System.Object,Microsoft.Surface.Presentation.Automation.Peers.LibraryStackAutomationPeer)">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer" /></strong> class.
            </summary>
      <param name="item">The corresponding item.</param>
      <param name="stackAutomationPeer">
            The automation peer of the corresponding 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" /></strong>
            control.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.GetProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
      <summary>
            Gets the provider from the specified peer.
            </summary>
      <param name="peer">The automation peer.</param>
      <returns>The proxy.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
      <summary>
            Gets the control pattern that is associated with the specified 
            <strong><see cref="T:System.Windows.Automation.Peers.PatternInterface" /></strong>.
            </summary>
      <param name="patternInterface">The pattern interface to be queried.</param>
      <returns>
            The object that implements the pattern interface; 
            <strong>null</strong> if this peer does not support this interface. 
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.GetAutomationControlTypeCore">
      <summary>
            Gets the automation control type.
            </summary>
      <returns>The control type.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.GetClassNameCore">
      <summary>
            Gets the automation class name.
            </summary>
      <returns>The class name.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.IsKeyboardFocusableCore">
      <summary>
            Gets a value that indicates whether or not the keyboard is focusable.
            </summary>
      <returns>This method always returns <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
      <summary>
            Adds current element to selection.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
      <summary>
            Removes current element from selection.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Automation.Peers.LibraryStackItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
      <summary>
            Sets the current element as the selection
            This clears the selection from other elements in the container.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryViewBase">
      <summary>
            Represents the base class definition that the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.StackView" /></strong>
            and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.BarView" /></strong>
            classes use. 
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyleProperty">
      <summary>
            Identifies a dependency property that represents the style 
            that is applied to the container element that is generated for each item.
            </summary>
      <remarks>
            The <strong>ItemContainerStyleProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyle" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyleSelectorProperty">
      <summary>
            Identifies a dependency property that represents the selector style 
            that is applied to the container element that is generated for each item.
            </summary>
      <remarks>
            The <strong>ItemContainerStyleSelectorProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyleSelector" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplateProperty">
      <summary>
            Identifies a dependency property that represents the data template that is used to display each item.
            </summary>
      <remarks>
            The <strong>ItemTemplateProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplate" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplateSelectorProperty">
      <summary>
            Identifies a dependency property that represents the object that is used to provide
            custom logic when determining the data template that is used to display each item.
            </summary>
      <remarks>
            The <strong>ItemTemplateSelectorProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplateSelector" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemsPanelProperty">
      <summary>
            Identifies a dependency property that represents the object that is used
            to create the panel that controls the layout of items.
            </summary>
      <remarks>
            The <strong>ItemsPanelProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemsPanel" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.DragCursorStyleProperty">
      <summary>
            Identifies a dependency property that represents the style for the dragging cursor.
            </summary>
      <remarks>
            The <strong>DragCursorStyleProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.DragCursorStyle" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.NormalizedTransitionSizeProperty">
      <summary>
            Identifies a dependency property that represents the normalized size during a transition.
            </summary>
      <remarks>
            The <strong>NormalizedTransitionSizeProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.NormalizedTransitionSize" /></strong>
            property.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyle">
      <summary>
            Gets or sets the <strong><see cref="T:System.Windows.Style" /></strong>
            object that is applied to the container element that is generated for each item. 
            </summary>
      <remarks>
            The <strong>ItemContainerStyle</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyleProperty" /></strong>
            field. The default value for this property is <strong>null</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyleSelector">
      <summary>
            Gets or sets the  <strong><see cref="T:System.Windows.Controls.StyleSelector" /></strong>
            object that is applied to the container element that is generated for each item.
            </summary>
      <remarks>
            The <strong>ItemContainerStyleSelector</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemContainerStyleSelectorProperty" /></strong>
            field. The default value for this property is <strong>null</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplate">
      <summary>
            Gets or sets the <strong><see cref="T:System.Windows.DataTemplate" /></strong>
            object that is used to display each item. 
            </summary>
      <remarks>
            The <strong>ItemTemplate</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplateProperty" /></strong>
            field. The default value for this property is <strong>null</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplateSelector">
      <summary>
            Gets or sets the <strong><see cref="T:System.Windows.Controls.DataTemplateSelector" /></strong>
            object that enables an application to provide custom logic
            for choosing the template that is used to display each item.
            </summary>
      <remarks>
        <para>
            The <strong>ItemTemplateSelector</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplateSelectorProperty" /></strong>
            field. The default value for this property is <strong>null</strong>.
            </para>
        <para>
            This property provides a way to choose a <strong><see cref="T:System.Windows.DataTemplate" /></strong>
            object based on the data object and the data-bound element.
            This property is ignored if the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemTemplate" /></strong>
            property is set.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemsPanel">
      <summary>
            Gets or sets the <strong><see cref="T:System.Windows.Controls.ItemsPanelTemplate" /></strong>
            object that is used to create the panel that controls the layout of items.
            </summary>
      <remarks>
            The <strong>ItemsPanel</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.ItemsPanelProperty" /></strong>
            field. The default value for this property is <strong>null</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.DragCursorStyle">
      <summary>
            Gets or sets the <strong><see cref="T:System.Windows.Style" /></strong>
            object for the dragging cursor.
            </summary>
      <remarks>
            The <strong>DragCursorStyle</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.DragCursorStyleProperty" /></strong>
            field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryViewBase.NormalizedTransitionSize">
      <summary>
            Gets or sets the <strong><see cref="T:System.Windows.Size" /></strong>
            object for the normalized transition size.
            </summary>
      <remarks>
        <para>
            The <strong>NormalizedTransitionSize</strong> property affects how the height and width of each view is calculated
            when transitioning from 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.StackView" /></strong>
            to
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.BarView" /></strong>
            and back. 
            The default value for this property in <strong>BarView</strong> is (2.15, 0.625); 
            the default value in <strong>StackView</strong> is (1, 1). 
            </para>
        <para>
            You can set this property in markup. The following code example shows a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control with the <strong>NormalizedTransitionSize</strong> property set for both views.
            </para>
        <para>
          <code source="Presentation\LibraryControls\LibraryContainer\Controls\LibraryContainerControl2.xaml" region="LibraryContainer" lang="xaml" />
        </para>
        <para>
            When the container transitions to
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode">LibraryContainerViewingMode.Bar</see></strong>,
            the dimensions of the <strong>BarView</strong> view for the container are calculated as follows:
            </para>
        <para>
          <code source="Presentation\LibraryControls\LibraryContainer\Controls\LibraryContainerControl2.xaml.cs" region="TransitionToBar" lang="cs" />
        </para>
        <para>
            When the container transitions to
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode">LibraryContainerViewingMode.Stack</see></strong>,
            the dimensions of the <strong>StackView</strong> view for the container are calculated as follows:
            </para>
        <para>
          <code source="Presentation\LibraryControls\LibraryContainer\Controls\LibraryContainerControl2.xaml.cs" region="TransitionToStack" lang="cs" />
        </para>
        <para>
          <strong>NormalizedTransitionSize</strong> is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryViewBase.NormalizedTransitionSizeProperty" /></strong>
            field.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.StackView">
      <summary>
            Represents a built-in view of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control that places items in a vertical stack.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.StackView.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.StackView" /></strong> class.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.BarView">
      <summary>
            Represents a built-in view of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control that places items in a horizontal bar.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.BarView.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.BarView" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.BarView.RowsProperty">
      <summary>
            Identifies a dependency property that represents the number of rows that are contained in each column.
            </summary>
      <remarks>
            The <strong>RowsProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.BarView.Rows" /></strong>
            property.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.BarView.Rows">
      <summary>
            Gets or sets the number of rows that are contained contained in each column.
            </summary>
      <remarks>
            The <strong>Rows</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.BarView.RowsProperty" /></strong>
            field. 
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement">
      <summary>
            Provides a Microsoft Windows Presentation Foundation (WPF) framework-level set of properties, events, and methods for WPF elements.
            
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceFrameworkElement.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition">
      <summary>
            Specializes the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>
            class to deal with <a src="../Development/TaggedObjects/TaggedObjects.htm">identity tags</a>.
            </summary>
      <remarks>
        <para>
             An <em>identity tag</em> is a physical object marker that represents a 128-bit value 
             (a composite of two 64-bit values). An application can use identity tags to recognize an object 
             or distinguish among a collection of objects. 
            </para>
        <para>
             For example, a marketing promotion might issue identity tags with a customer ID 
             (the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Value" /></strong> property) and a unique offer code 
             (the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series" /></strong> property) that the tag represents.
             At the venue, the customer can redeem the offer by placing the identity tag on the Microsoft Surface screen.
            </para>
        <para>
             For more information about how visualization definitions are used, see 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>.
            </para>
        <para>
             For more information about how to use tagged physical objects, see
             <a href="/Development/TaggedObjects/TaggedObjects.htm">Tagged Objects</a>.
            </para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.IdentityTag" />
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.SeriesProperty">
      <summary>
            Identifies a dependency property that stores the series of an identity tag
            that this definition corresponds to.
            </summary>
      <remarks>
            The <strong>SeriesProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.ValueProperty">
      <summary>
            Identifies a dependency property that stores the value of an identity tag
            that this definition corresponds to.
            </summary>
      <remarks>
            The <strong>ValueProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Value" /></strong> dependency property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Matches(Microsoft.Surface.Presentation.TagData)">
      <summary>
            Gets a value that indicates whether this definition matches the specified tag.
            </summary>
      <param name="tag">The tag data to check for match.</param>
      <returns>
        <strong>true</strong> if this definition matches the tag; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Overrides the 
            <strong><see cref="T:System.Windows.Freezable" /></strong>
            implementation of the <strong>OnPropertyChanged</strong>
            method to call the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OnMatchingChanged" /></strong>
            method when either the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series" /></strong>
            property, or the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Value" /></strong>
            property changes. 
            </summary>
      <param name="e">The arguments that describe the property change.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.CreateInstanceCore">
      <summary>
            Freezable implementation.
            </summary>
      <returns>A new object instance.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series">
      <summary>
            Gets or sets the series value to watch for. </summary>
      <remarks>
        <para>The <strong>Series</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.SeriesProperty" /></strong> field.</para>
        <para>
             The composite identifier that the <strong>Series</strong> property and the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Value" /></strong> property define is used to determine whether the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition" /></strong> object matches a particular 
             <a href="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a> 
             that is placed on the Microsoft Surface screen. The tag is considered to match 
             if it is an identity tag that is coded with the same series and value as the
             <strong>IdentityTagVisualizationDefinition</strong> object.
            </para>
        <note type="caution">
             The default value for the <strong>Value</strong> property is 0.
             If an application does not change the <strong>Value</strong> property 
             from the default value, only the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series" /></strong> property
             is considered when determining whether a tagged physical object
             matches this definition.
            </note>
        <para>
             The default value for the <strong>Series</strong> property is 0.
            </para>
        <note type="caution">
             Your application should establish a value for <strong>Series</strong> property
             by using the
             <a href="/Development/TaggedObjects/TaggedObjects.htm#IdentityTagPrintingTool">identity tag printing tool</a>
             instead of selecting an arbitrary value. By using the tool, you can avoid collisions in the <strong>Series</strong>
             value.
            </note>
        <para>
             For more information about how 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
             objects are generated from tagged objects, see 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Value">
      <summary>
            Gets or sets the value for which 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> 
            should watch. 
            </summary>
      <remarks>
        <para>The <strong>Value</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.ValueProperty" /></strong> field.</para>
        <para>
             The composite identifier that the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series" /></strong> property and the 
             <strong>Value</strong> property define is used to determine whether the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition" /></strong> object matches a particular 
             <a href="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a> 
             that is placed on the Microsoft Surface screen. The tag is considered to match 
             if it is an identity tag that is coded with the same series and value as the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition" /></strong> object.
            </para>
        <note type="caution">
             The default value for the <strong>Value</strong> property is 0.
             If an application does not change the <strong>Value</strong> property 
             from the default value, only the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.IdentityTagVisualizationDefinition.Series" /></strong> property
             is considered when determining whether a tagged physical object
             matches this definition.
            </note>
        <para>
          <strong>TagVisualizer</strong> treats zero as a special case. If 
            <strong>IdentityTagVisualizationDefinition.Value</strong> is zero, it will match any 
            identity tag that has a matching <strong>Series</strong>. 
            Therefore, if you want to have an actual tag with a zero value, you cannot use 
            <strong>IdentityTagVisualizationDefinition</strong> to uniquely identify it.
            </para>
        <para>
             For more information about how 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
             objects are generated from tagged objects, see 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ITagVisualizationHost">
      <summary>
            Interface for classes that support hosting of 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects.
            </summary>
      <remarks>
        <para>
            The visualizations of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control can be hosted within any control that derives from 
            <strong><see cref="T:System.Windows.UIElement" /></strong>, and implements the 
            <strong>ITagVisualizationHost</strong> interface. 
            </para>
        <para>
             The <strong>ITagVisualizationHost</strong> interface is implemented by the following classes:
            </para>
        <list type="bullet">
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas" />
            </strong>
          </item>
        </list>
        <para>
            For more information, see
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty">TagVisualizer.IsTagVisualizationHostProperty</see></strong>
            and
            <a href="/ProgrammersGuide/TagVisualization/CustomHostControl/CustomHostControl.htm">Hosting Tag Visualizations in a Custom Host Control</a>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ITagVisualizationHost.TagVisualizationHostAdapter">
      <summary>
            Gets the adapter to use for hosting 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">
      <summary>
            Represents a control that has a stack view and a bar view.
            </summary>
      <remarks>
        <para>
            The <strong>LibraryContainer</strong> control is a dual-view control that arranges 
            items in a horizontal bar or in a vertical stack 
            and enables users to switch back and forth between the two views. The <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackView" /></strong>
            property controls how the stack view appears, while the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarView" /></strong> property
            controls how the bar view appears. 
            <strong>LibraryContainer</strong> provides the following features: 
            </para>
        <list type="bullet">
          <item>
            In bar view, arrange items in one or more rows by setting the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.BarView.Rows">BarView.Rows</see></strong>
            property.
            </item>
          <item>
            In bar view, group items by using properties and methods of the 
            <strong><see cref="T:System.Windows.Data.CollectionView" /></strong>
            and 
            <strong><see cref="T:System.Windows.Data.CollectionViewSource" /></strong>
            classes and of the 
            <strong><see cref="T:System.ComponentModel.ICollectionView" /></strong>
            interface. <strong>LibraryContainer</strong> supports a single group description only.
            </item>
          <item>
            If data is grouped, a default group style is provided for the container in bar view mode.
            You can customize the style that is applied to groups or use the default 
            group style that is built into <strong>LibraryContainer</strong>.
            </item>
          <item>
            By default, <strong>LibraryContainer</strong> supports drag-and-drop operations.
            </item>
          <item>
            By default, when an item is dragged from the bar view of the 
            <strong>LibraryContainer</strong> control, it remains visible but it is dimmed to 
            indicate that it has been placed into another control.
            </item>
          <item>
            By default, when an item is dragged out of stack view, the item disappears. If all 
            items of one group have been dragged out, the group name in the selector control is 
            dimmed.
            </item>
        </list>
        <para>
            For more information, see the following topics:
            </para>
        <list type="bullet">
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.BarView" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.StackView" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.LibraryBar" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="T:Microsoft.Surface.Presentation.Controls.LibraryStack" />
            </strong>
          </item>
        </list>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceControl">
      <summary>
            Represents the base class for contact-enabled elements.
            </summary>
      <remarks>
            The <strong>SurfaceControl</strong> class is used as the base class for Microsoft Surface controls.
            Derive from this class to create your own Microsoft Surface controls that support multitouch interaction. 
            You can also derive from 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceUserControl" /></strong> 
            to create your own contact-enabled user controls.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceControl.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceControl.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceControl.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong> class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackViewProperty">
      <summary>
            Identifies a dependency property that represents the view of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong> in the stack view.
            </summary>
      <remarks>
        <para>
            The <strong>StackViewProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackView" /></strong> property.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarViewProperty">
      <summary>
            Identifies a dependency property that represents the view of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong> in the bar view.
            </summary>
      <remarks>
        <para>
            The <strong>BarViewProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarView" /></strong> property.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeProperty">
      <summary>
            Identifies a dependency property that represents the viewing mode of the container.
            </summary>
      <remarks>
            The <strong>ViewingModeProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingMode" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.CanSwitchViewingModeProperty">
      <summary>
            Identifies a dependency property that represents whether the viewing mode of the container
            can be switched from one mode to another.
            </summary>
      <remarks>
            The <strong>CanSwitchViewingModeProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.CanSwitchViewingMode" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsSelectorExpandedProperty">
      <summary>
            Identifies a dependency property that represents whether the selector of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> is expanded.
            </summary>
      <remarks>
            The <strong>IsSelectorExpandedProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsSelectorExpanded" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsTransitioningProperty">
      <summary>
            Identifies a dependency property that represents whether the container is transitioning between 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackView" /></strong> and <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarView" /></strong>.
            </summary>
      <remarks>
            The <strong>IsTransitioningProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsTransitioning" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.ItemsSourceProperty">
      <summary>
            Identifies a dependency property that represents the source of items for this container.
            </summary>
      <remarks>
            The <strong>ItemsSourceProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.ItemsSource" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupProperty">
      <summary>
            Identifies a dependency property that represents the currently selected group.
            </summary>
      <remarks>
            The <strong>SelectedGroupProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroup" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackIndexProperty">
      <summary>
            Identifies a dependency property that represents the index of the currently selected item.
            </summary>
      <remarks>
            The <strong>SelectedStackIndexProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackIndex" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackItemProperty">
      <summary>
            Identifies a dependency property that represents the currently selected item in the StackView.
            </summary>
      <remarks>
            The <strong>SelectedStackItemProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackItem" /></strong>
            property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsActiveProperty">
      <summary>
            Identifies a dependency property that specifies the activation state of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> control.
            </summary>
      <remarks>
            The <strong>IsActiveProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsActive" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SwitchViewingModeCommand">
      <summary>
            Identifies a routed UI command to switch the viewing mode.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackSelectionChangedEvent">
      <summary>
            Identifies a routed event that occurs 
            when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackItem" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>StackSelectionChangedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackSelectionChanged" /></strong>
            event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeChangedEvent">
      <summary>
            Identifies a routed event that occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingMode" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>ViewingModeChangedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeChanged" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupChangedEvent">
      <summary>
            Identifies a routed event that occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroup" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>SelectedGroupChangedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupChanged" /></strong> event.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnApplyTemplate">
      <summary>
            Called whenever your application or internal processes call the
            <strong><see cref="M:System.Windows.FrameworkElement.ApplyTemplate">ApplyTemplate</see></strong>
            method.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.SetIsItemDataEnabled(System.Object,System.Boolean)">
      <summary>
            Sets the enabled status for a specified object.
            </summary>
      <param name="data"> The object to set the enabled status on. </param>
      <param name="isItemDataEnabled"> The enabled status. </param>
      <remarks>
        <para>When an item is dragged out of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> control, 
            the <em>data</em> object is disabled. When this item is dragged into the 
            <strong>LibraryContainer</strong> control, the 
            <em>data</em> object is enabled.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.GetIsItemDataEnabled(System.Object)">
      <summary>
            Get the enabled status for a specified object.
            </summary>
      <param name="data"> The object to get the enabled status of. </param>
      <returns>
        <strong>true</strong> if data is enabled; otherwise, <strong>false</strong>. </returns>
      <remarks>
        <para>When an item is dragged out of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> control, 
            the <em>data</em> object is disabled. When this item is dragged into the 
            <strong>LibraryContainer</strong> control, the 
            <em>data</em> object is enabled.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the parent of this element in the visual tree changes.
            </summary>
      <param name="oldParent">
            The previous parent element. This parameter can be <strong>null</strong> to indicate that the element did not 
            have a visual parent previously. 
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnCreateAutomationPeer">
      <summary>
            Returns a class-specific 
            <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /></strong>
            object.
            </summary>
      <returns>
            A new
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.LibraryContainerAutomationPeer" /></strong>
            object.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnViewingModeChanged(System.Windows.RoutedPropertyChangedEventArgs{Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode})">
      <summary>
            Raises the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeChanged" /></strong> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnSelectedGroupChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
      <summary>
            Raises the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupChanged" /></strong> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnStackSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>
            Raises the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackSelectionChanged" /></strong> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.LibraryContainer.OnInitialized(System.EventArgs)">
      <summary>
            Raises the 
            <strong><see cref="E:System.Windows.FrameworkElement.Initialized">Initialized</see></strong>
            event. 
            </summary>
      <remarks>The <strong>OnInitialized</strong> method
            is called whenever 
            <strong><see cref="P:System.Windows.FrameworkElement.IsInitialized">IsInitialized</see></strong>
            is set
            to <strong>true</strong> internally.</remarks>
      <param name="e"> The 
            <strong><see cref="T:System.Windows.RoutedEventArgs">RoutedEventArgs</see></strong>
            object that contains the event data. </param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackView">
      <summary>
            Gets or sets the view of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong> in the stack view.
            </summary>
      <remarks>
        <para>
            The <strong>StackView</strong> property is a dependency property that is 
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackViewProperty" /></strong> field.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarView">
      <summary>
            Gets or sets the view of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong> in 
            the bar view.
            </summary>
      <remarks>
        <para>
            The <strong>BarView</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarViewProperty" /></strong> field.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingMode">
      <summary>
            Gets or sets the viewing mode of the container.
            </summary>
      <remarks>
        <para>
            You can use this property to programmatically set the viewing mode. 
            However, unlike using the switch view button that is built in to the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong>
            control, setting this property does not cause transition animation to occur.
            </para>
        <para>
            The <strong>ViewingMode</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeProperty" /></strong> field.
            The default value for this property is 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainerViewingMode">LibraryContainerViewingMode.Stack</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.CanSwitchViewingMode">
      <summary>
            Gets or sets a value that indicates whether the viewing mode of the container
            can be switched from one mode to another.
            </summary>
      <remarks>
            The <strong>CanSwitchViewingMode</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.CanSwitchViewingModeProperty" /></strong> field.
            The default value for this property is <strong>true</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsSelectorExpanded">
      <summary>
            Gets or sets a value that indicates whether the selector control
            of this container is expanded.
            </summary>
      <remarks>
        <para>The default value for this property is <strong>false</strong>.</para>
        <para>The <strong>IsSelectorExpanded</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsSelectorExpandedProperty" /></strong> field.</para>
        <para>If a user taps the selector in the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> control, 
            or if <strong>IsSelectorExpanded</strong> is set to <strong>true</strong>, the selector control is expanded. 
            When the selector is expanded, the user can change the selected group in the <strong>LibraryContainer</strong> control.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsTransitioning">
      <summary>
            Gets a value that indicates whether the container is transitioning between 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackView" /></strong> and <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.BarView" /></strong>.
            </summary>
      <remarks>
            The <strong>IsTransitioning</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsTransitioningProperty" /></strong> field.
            The default value for this property is <strong>false</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.ItemsSource">
      <summary>
            Gets or sets the source of items for this container.
            </summary>
      <remarks>
        <para>
            The <strong>ItemsSource</strong> property specifies a collection that is used to generate the content of 
            this container. This implementation provides a simple way to use exactly one collection
            as the source of content. 
            </para>
        <para>
            The <strong>ItemsSource</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.ItemsSourceProperty" /></strong> field.
            The default value for this property is <strong>null</strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroup">
      <summary>
            Gets or sets the currently selected group.
            </summary>
      <remarks>
            The <strong>SelectedGroup</strong> property is a dependency property that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupProperty" /></strong> field. 
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackIndex">
      <summary>
            Gets or sets the index of the currently selected item in the <strong>Stack</strong> mode of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> control.
            </summary>
      <remarks>
        <para>
          <strong>SelectedStackIndex</strong> is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackIndexProperty" /></strong>
            field.</para>
        <para>The currently selected item in the <strong>Stack</strong> mode of the 
            <strong>LibraryContainer</strong> is the item that displays on the top of the stack. 
            If the <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong> 
            collection is empty, this property returns -1. </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackItem">
      <summary>
            Gets or sets the currently selected item in the <strong>Stack</strong> mode of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer">LibraryContainer</see></strong> control.
            </summary>
      <remarks>
        <para>
          <strong>SelectedStackItem</strong> is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackItemProperty" /></strong>
            field.
            </para>
        <para>
            The currently selected item for the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.StackView" /></strong>
            of the container is the item that displays on the top of the stack.
            If the current selection is empty, the <strong>SelectedStackItem</strong> property returns <strong>null</strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsActive">
      <summary>
            Gets or sets a value that indicates whether the container is active.
            </summary>
      <remarks>
        <para>
            The <strong>IsActive</strong> property is a dependency property that is
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.IsActiveProperty" /></strong> field.
            The default value for this property is <strong>false</strong>.
            </para>
        <para>
            When the <strong>IsActive</strong> property is set to <strong>true</strong>, the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.LibraryContainer" /></strong> 
            control displays a brief animation and highlights the border of the control.
            When this property is set to <strong>false</strong>, the border is darkened.
            Users can interact with the <strong>LibraryContainer</strong> control in either state.
            </para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackSelectionChanged">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedStackItem" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>StackSelectionChanged</strong> event is a routed event that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.StackSelectionChangedEvent" /></strong>
            field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeChanged">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingMode" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>ViewingModeChanged</strong> event is a routed event that is 
            identified by the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.ViewingModeChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupChanged">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroup" /></strong> property changes.
            </summary>
      <remarks>
            The <strong>SelectedGroupChanged</strong> event is a routed event that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.LibraryContainer.SelectedGroupChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup">
      <summary>
            Represents a control that creates a separate pop-up window that has content.
            </summary>
      <remarks>
        <para>
             When the 
             <strong><see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /></strong> property of a 
             <strong>SurfacePopup</strong> control is set to <strong>true</strong>, the control behaves in the 
             same manner as its Microsoft Windows Presentation Foundation (WPF) counterpart, from which it derives. 
             After it is displayed, the <strong>SurfacePopup</strong> control remains visible until its 
             <strong><see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /></strong>
             property is set to <strong>false</strong>.
            </para>
        <para>
             However, when the <strong>StaysOpen</strong> property is set to <strong>false</strong>,
             a <strong>SurfacePopup</strong> control considers the time in which the control has been 
             idle to determine when to hide itself.
            </para>
        <para>
             If the contact on the <strong>SurfacePopup</strong> control stops moving, moves off the control, 
             or is removed from the Microsoft Surface screen, the <strong>SurfacePopup</strong> control begins an idle countdown.
            </para>
        <para>
             When the countdown has expired, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.Idle" /></strong>
             event occurs, and the <strong>SurfacePopup</strong> control begins to fade from the screen.
            </para>
        <para>
             If contact is re-initiated on the <strong>SurfacePopup</strong> control before it disappears, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleReset" /></strong>
             event occurs, the countdown timer is reset, and the control returns to its original opacity.
            </para>
        <para>
             The 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleTimeout" /></strong> 
             property controls the duration of the idle countdown. Your application can change the value of this property. The default value is 2 seconds.
            </para>
        <para>
             Your application can reset the idle countdown by calling the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ResetIdle" /></strong>
             method. If your application calls <strong>ResetIdle</strong> before the <strong>SurfacePopup</strong> control
             has disappeared, the <strong>IdleReset</strong> event occurs, the countdown timer is reset, 
             and the control returns to its original opacity. If your application calls <strong>ResetIdle</strong> after the
             <strong>SurfacePopup</strong> control has disappeared, the method has no effect.
            </para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" />
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleTimeoutProperty">
      <summary>
            Identifies a dependency property that specifies the amount of
            time that should pass before a pop-up window is treated as idle.
            </summary>
      <remarks>
            The <strong>IdleTimeoutProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleTimeout" /></strong> property, which resets with each user interaction.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleEvent">
      <summary>
            Occurs when there is no interaction with a pop-up window during
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleTimeout" /></strong> interval.
            </summary>
      <remarks>
            The <strong>IdleEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.Idle" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleResetEvent">
      <summary>
            Occurs when the idle state is reset because of interaction with the pop-up window or
            an explicit call to the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ResetIdle" /></strong> method.
            </summary>
      <remarks>The <strong>IdleResetEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleReset" /></strong> event.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled <strong><see cref="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" /></strong>
            routed event reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled <strong><see cref="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" /></strong>
            routed event reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnOpened(System.EventArgs)">
      <summary>
            Overridden. Called when the 
            <strong><see cref="F:system.windows.controls.primitives.popup.IsOpenProperty" /></strong> field becomes <strong>true</strong>.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ResetIdle">
      <summary>
            Resets the timer that determines when a pop-up window should be treated as idle.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnIdle">
      <summary>
            Reports that a pop-up window is idle.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnIdleReset">
      <summary>
            Reports that users have interacted with the pop-up window or the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ResetIdle" /></strong>
            method has been called.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfacePopup</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleTimeout">
      <summary>
            Gets or sets the amount of time that should pass until a pop-up window is treated as idle.
            </summary>
      <remarks>
        <para>The <strong>IdleTimeout</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleTimeoutProperty" /></strong> field.</para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.Idle">
      <summary>
            Occurs when a pop-up window is idle. </summary>
      <remarks>
        <para>The <strong>Idle</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleEvent" /></strong> field.
            </para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleReset">
      <summary>
            Occurs when the idle state is reset because of interaction with the pop-up window or
            an explicit call to the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ResetIdle" /></strong> method.
            </summary>
      <remarks>
        <para>The <strong>IdleReset</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IdleResetEvent" /></strong> field.
            </para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton">
      <summary>
            Represents a control that raises its 
            <strong><see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /></strong>
            event repeatedly from the time it is pressed until it is released. 
            </summary>
      <remarks>
            The <strong>SurfaceRepeatButton</strong> class represents a control that is similar to a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceButton" /></strong> control.
            However, <strong>SurfaceRepeatButton</strong> objects give you control over when and how the <strong>Click</strong> event occurs. 
            The <strong>SurfaceRepeatButton</strong> object raises the <strong>Click</strong> event repeatedly 
            from the time it is pressed until it is released. The 
            <strong><see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay" /></strong>
            property determines when the event begins. You can also control the interval of the repetitions with the 
            <strong><see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval" /></strong>
            property.
            </remarks>
      <example>
            The following code example shows how to create a <strong>SurfaceRepeatButton</strong> control.
            <code source="Presentation\Classes_SurfaceControls\SurfaceRepeatButton1.xaml" title="" lang="xml" /></example>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown">MouseLeftButtonDown</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp">MouseLeftButtonUp</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when a <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when the mouse is no longer captured to this control.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceRepeatButton</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar">
      <summary>
            Represents a control that enables users to view content that is outside of the current viewing area by sliding a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb">SurfaceThumb</see></strong> 
            control to make the content visible.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.FlickCommand">
      <summary>
            Flicks the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar" /></strong> object.
            </summary>
      <remarks>
            The parameter for the <strong>FlickCommand</strong> command is a 
            <strong><see cref="T:System.Windows.Vector" /></strong> object
            that specifies the initial flick velocity, in device independent units per millisecond.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceScrollBar</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceScrollBar.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb">
      <summary>
            Represents a control that enables users to drag and resize controls.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.FlickedEvent">
      <summary>
            Occurs when the Microsoft Surface software recognizes a flick manipulation.
            </summary>
      <remarks>The <strong>FlickedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.Flicked" /></strong> event.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewFlickedEvent">
      <summary>
            Occurs when the Microsoft Surface software recognizes a flick manipulation.
            </summary>
      <remarks>The <strong>PreviewFlickedEvent</strong> field is the identifier for 
            the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewFlicked" /></strong> event.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.CancelDrag">
      <summary>
            Cancels a dragging operation, whether it started with a mouse or contact.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseDown">MouseDown</see></strong>
            attached event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            attached event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled <strong><see cref="E:System.Windows.UIElement.MouseUp">MouseUp</see></strong>
            attached event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.LostMouseCapture">LostMouseCapture</see></strong>
            attached event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the visual parent changes.
            </summary>
      <param name="oldParent">The previous parent, or null if there was no previous parent.</param>
      <remarks>
            The <strong>OnVisualParentChanged</strong> method is called whenever the
            <strong><see cref="P:System.Windows.Media.Visual.VisualParent">VisualParent</see></strong> property changes.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceThumb</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.Flicked">
      <summary>
            Occurs when a user flicks the thumb.
            </summary>
      <remarks>The <strong>Flicked</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.FlickedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewFlicked">
      <summary>
            Occurs when a user flicks the thumb.
            </summary>
      <remarks>The <strong>PreviewFlicked</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewFlickedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton">
      <summary>
            Represents a base class for controls that can switch states, such as 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox">SurfaceCheckBox</see></strong>.
            
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnToggle">
      <summary>
            Overridden. Called when a button is toggled.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown">MouseLeftButtonDown</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp">MouseLeftButtonUp</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when a <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when the mouse is no longer captured to this control.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceToggleButton</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceToggleButton.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack">
      <summary>
            Represents a control that handles the position and size of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb">SurfaceThumb</see></strong> control 
            and two 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceRepeatButton">SurfaceRepeatButton</see></strong>
            controls that are used to set a value.
            
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter">
      <summary>
            Specifies an adapter class that enables a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
            control to function as a host for
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects within a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control.
            </summary>
      <remarks>
        <para>
             By default, <strong>ScatterView</strong> uses this class to control the hosting behavior
             when it is used by a <strong>TagVisualizer</strong> control to host visualizations.
            </para>
        <para>
             To customize the hosting behavior of a <strong>ScatterView</strong> control,
             do the following: 
            </para>
        <list type="bullet">
          <item>
             Subclass <strong>ScatterViewTagVisualizationHostAdapter</strong>, overriding the virtual methods as you want.
            </item>
          <item>
             Subclass <strong>ScatterView</strong>, and override the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterView.TagVisualizationHostAdapter" /></strong>
             property so that it returns the custom adapter instead of a default one.
            </item>
        </list>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter">
      <summary>
            Represents an object that can host 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects
            under the control of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong> control.
            </summary>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ITagVisualizationHost" /></strong>
            and
            <a href="/ProgrammersGuide/TagVisualization/CustomHostControl/CustomHostControl.htm">Hosting Tag Visualizations in a Custom Host Control</a>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.NotifyVisualizationAdded(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the visualization host when it has added a visualization.
            </summary>
      <remarks>
            When a host adds a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object independently (not in response to the 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.Add(Microsoft.Surface.Presentation.Controls.TagVisualization)">Add</see></strong> 
            method), it must call this method. This call enables the visualizer to raise the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded" /></strong>
            event.
            </remarks>
      <param name="visualization">The newly added visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.NotifyVisualizationRemoved(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the visualization host when it has removed a visualization.
            </summary>
      <remarks>
            When a host removes a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object independently (not in response to the 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.Remove(Microsoft.Surface.Presentation.Controls.TagVisualization)">Remove</see></strong> 
            method), it must call the <strong>NotifyVisualizationRemoved</strong> method. This call enables the visualizer to raise the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved" /></strong>
            event.
            </remarks>
      <param name="visualization">The removed visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.NotifyVisualizationMoved(Microsoft.Surface.Presentation.Controls.TagVisualization,System.Windows.Point,System.Double,System.Windows.UIElement)">
      <summary>
            Called by the visualization host when it has moved a visualization.
            </summary>
      <remarks>
            When a host moves a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object independently (not in response to the 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.MoveVisualization(Microsoft.Surface.Presentation.Controls.TagVisualization)">MoveVisualization</see></strong> 
            method), it must call the <strong>NotifyVisualizationMoved</strong> method. This call enables the visualizer to update the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center" /></strong>
            and
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong>
            properties of the visualization and raise the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved" /></strong>
            event.
            </remarks>
      <param name="visualization">The moved visualization.</param>
      <param name="center">The new center of the visualization, in host coordinates.</param>
      <param name="orientation">The new orientation of the visualization, in host coordinates.</param>
      <param name="relativeTo">The <strong>UIElement</strong> object in whose coordinates the center and orientation are expressed.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.GetPosition(Microsoft.Surface.Presentation.Controls.TagVisualization,System.Windows.UIElement)">
      <summary>
            Gets the center position of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            control, relative to the specified 
            <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <param name="visualization">The visualization.</param>
      <param name="relativeTo">The element that the returned position is relative to.</param>
      <returns>The center point of the visualization, relative to the specified element.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.GetOrientation(Microsoft.Surface.Presentation.Controls.TagVisualization,System.Windows.UIElement)">
      <summary>
            Gets the orientation of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            control, relative to the specified 
            <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <param name="visualization">The visualization.</param>
      <param name="relativeTo">The element that the returned orientation is relative to.</param>
      <returns>The orientation in degrees.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.#ctor(Microsoft.Surface.Presentation.Controls.ITagVisualizationHost)">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter" /></strong> class.
            </summary>
      <param name="host">The <strong>ITagVisualizationHost</strong> object that is associated with this adapter.</param>
      <remarks>
            The <i>host</i> parameter must derive from 
            <strong><see cref="T:System.Windows.UIElement" /></strong> or  an exception is thrown.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.Add(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            when it needs to add a new visualization to the host.
            </summary>
      <param name="visualization">The visualization to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.Remove(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            when it needs to remove a visualization from the host.
            </summary>
      <param name="visualization">The visualization to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.MoveVisualization(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            when it has updated the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center" /></strong>
            or
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong>
            property of a visualization.
            </summary>
      <param name="visualization">The updated visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.OnVisualizationGotTag(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called when a visualization has begun tracking via a tagged contact
            placed on it.
            </summary>
      <remarks>
        <para>
             Derived classes can override the <strong>OnVisualizationGotTag</strong> method to 
             enable different behavior when a visualization 
             is associated with a tagged object versus when it is not.
            </para>
        <para>
             For example, when a visualization is not associated with a tagged object, an adapter 
             might permit manipulation of the visualization by direct touch. In this scenario, 
             the adapter would typically override the 
             <strong>OnVisualizationGotTag</strong> 
             method to prevent touch manipulation and override the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.OnVisualizationLostTag(Microsoft.Surface.Presentation.Controls.TagVisualization)">OnVisualizationLostTag</see></strong>
             method to enable touch manipulation.
            </para>
      </remarks>
      <param name="visualization">The visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.OnVisualizationLostTag(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called when a visualization has stopped tracking via a tagged contact
            that is placed on it.
            </summary>
      <remarks>
        <para>
             Derived classes can override the <strong>OnVisualizationLostTag</strong> method to enable different behavior when a visualization 
             is associated with a tagged object versus when it is not.
            </para>
        <para>
             For example, when a visualization is not associated with a tagged object, an adapter 
             might permit manipulation of the visualization by direct touch. In this scenario, 
             the adapter would typically override the
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.OnVisualizationGotTag(Microsoft.Surface.Presentation.Controls.TagVisualization)">OnVisualizationGotTag</see></strong>
             method to prevent touch manipulation and  override the 
             <strong>OnVisualizationLostTag</strong>
             method to enable touch manipulation.
            </para>
      </remarks>
      <param name="visualization">The visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.GetContainer(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Gets the container for the specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            control.
            </summary>
      <remarks>
            The
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control uses the container to set visibility, opacity, and other properties
            when it needs to alter the appearance of a <strong>TagVisualization</strong> object.
            The default implementation of the <strong>GetContainer</strong> method returns <strong>null</strong>. 
            Hosts that wrap the visualization in some other
            container (such as items controls) must override this method.
            </remarks>
      <param name="visualization">The visualization to get the container for.</param>
      <returns>The element that is the container for the specified visualization.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.GetVisualizationForContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control when it needs to find an existing
            visualization that matches the specified tagged contact.
            </summary>
      <remarks>
            The default implementation examines the visualizations in the host,
            searching for one with a
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.VisualizedTag" /></strong>
            property that precisely matches the
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.Tag" /></strong>
            property of the specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object.
            If more than one visualization matches, the one nearest to the contact is selected.
            </remarks>
      <param name="contact">The contact to get the visualization for.</param>
      <returns>
            The matching 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object, or <strong>null</strong> if no match.
            </returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationHostAdapter.Host">
      <summary>
            Gets the host for this adapter.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.#ctor(Microsoft.Surface.Presentation.Controls.ScatterView)">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter" /></strong> class.
            </summary>
      <param name="owner">The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
            control that owns this adapter.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.Add(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            when it needs to add a new visualization to the host.
            </summary>
      <param name="visualization">The visualization to add.</param>
      <remarks>
            The <strong>Add</strong> method wraps the specified visualization in a new 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            object and adds the <strong>ScatterViewItem</strong> item to the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong>
            collection of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
            control that owns this instance.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.Remove(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            when it needs to remove a visualization from the host.
            </summary>
      <param name="visualization">The visualization to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.MoveVisualization(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called by the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            when it has updated the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center" /></strong>
            or
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong>
            property of a visualization.
            </summary>
      <param name="visualization">The updated visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.GetContainer(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Gets the container for the specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            control.
            </summary>
      <param name="visualization">The visualization to get the container for.</param>
      <returns>The element that is the container for the specified visualization.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.OnVisualizationGotTag(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called when a visualization has begun tracking through a tagged contact
            that is placed on it.
            </summary>
      <param name="visualization">The visualization.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter.OnVisualizationLostTag(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Called when a visualization has stopped tracking through a tagged contact
            that is placed on it.
            </summary>
      <param name="visualization">The visualization.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceButton">
      <summary>
            Represents a standard button that inherently reacts to click events.
            </summary>
      <remarks>
        <para>
            To provide functionality to a <strong>SurfaceButton</strong> control, you must attach an event handler to the 
            <strong><see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click">ButtonBase.Click</see></strong> event.
            </para>
      </remarks>
      <example>
        <para>
            The following code example demonstrates how to attach an event handler to a 
            <strong>SurfaceButton</strong> control.
            </para>
        <code source="Presentation\Classes_SurfaceControls\Window1.xaml.cs" region="SurfaceButton1" title="To provide functionality to a SurfaceButton control" lang="cs" />
        <para>
            You can define a <strong>SurfaceButton</strong> control to use the 
            built-in <strong>AccessButton</strong> styling, which renders the button as a small circle. 
            For more information, see
            <a href="/Samples/HowDoIExamples/OverridingControlStyles.htm">Overriding Control Styles</a>.
            </para>
      </example>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown">MouseLeftButtonDown</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp">MouseLeftButtonUp</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when a <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when the mouse is no longer captured to this control.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceButton</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceButton.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceButton.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceButton.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox">
      <summary>
            Represents a control that users can select and clear.
            
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnToggle">
      <summary>
            Overridden. Called when a button is toggled.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown">MouseLeftButtonDown</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp">MouseLeftButtonUp</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when a <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when the mouse is no longer captured to this control.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceCheckBox</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceCheckBox.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu">
      <summary>
            Represents a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu">SurfaceMenu</see></strong> 
            control that contains a pop-up menu. The <strong>SurfaceContextMenu</strong> control enables 
            you to expose functionality through a <strong>SurfaceMenu</strong> control that is specific to the context of the control.
            </summary>
      <remarks>
        <para>
             By default, when a <strong>SurfaceContextMenu</strong> control is displayed, it does not stay on the 
             screen indefinitely.
            </para>
        <para>
             If a contact on the <strong>SurfaceContextMenu</strong> control stops moving, 
             moves off the control, or is removed from the Microsoft Surface screen,  
             the <strong>SurfaceContextMenu</strong> control begins an idle countdown.
             When the countdown expires, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.Idle" /></strong>
             event occurs, and the <strong>SurfaceContextMenu</strong> control begins to fade from the screen.
            </para>
        <para>
             If contact is re-initiated on the <strong>SurfaceContextMenu</strong> control before it disappears, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleReset" /></strong>
             event occurs, the countdown timer is reset, and the control returns to its original opacity.
            </para>
        <para>
             The 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleTimeout" /></strong>
             property controls the duration of the idle countdown. Your application can change the value of this property. The default is 2 seconds.
            </para>
        <para>
             Your application can reset the idle countdown by calling the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ResetIdle" /></strong>
             method. If your application calls <strong>ResetIdle</strong> before the <strong>SurfaceContextMenu</strong> control 
             has disappeared, the <strong>IdleReset</strong> event occurs, the countdown timer is reset, 
             and the control returns to its original opacity. If your application calls <strong>ResetIdle</strong> 
             after the <strong>SurfaceContextMenu</strong> control has disappeared, the method has no effect.
            </para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" />
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleTimeoutProperty">
      <summary>
            Identifies a dependency property that indicates how much time should pass since the last
            user interaction before a pop-up window is treated as idle.
            </summary>
      <remarks>The <strong>IdleTimeoutProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleTimeout" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleEvent">
      <summary>
            Occurs when there is no interaction with a pop-up window during
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleTimeout" /></strong> interval.
            </summary>
      <remarks>The <strong>IdleEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.Idle" /></strong> event.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleResetEvent">
      <summary>
            Occurs when the idle state is reset because of an interaction with the pop-up window or
            an explicit call to the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ResetIdle" /></strong> method.
            </summary>
      <remarks>The <strong>IdleResetEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleReset" /></strong> event.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ResetIdle">
      <summary>
            Resets the timer that determines when a pop-up window should be treated as idle.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnIdle">
      <summary>
            Reports that a pop-up window is idle.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnIdleReset">
      <summary>
            Reports that users have interacted with the pop-up window or the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ResetIdle" /></strong>
            method has been called.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines whether a specified item is, or is eligible to be, its own container.
            </summary>
      <param name="item">The item to check.</param>
      <returns>
        <strong>true</strong> if the item is eligible to be
            its own container; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GetContainerForItemOverride">
      <summary>
            Creates or identifies an element that displays the given item.
            </summary>
      <returns>
            A <strong><see cref="T:System.Windows.DependencyObject">DependencyObject</see></strong> object. This object is
            the element that displays the given item.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Occurs when an unhandled <strong><see cref="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" /></strong>
            routed event reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Occurs when an unhandled <strong><see cref="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" /></strong>
            routed event reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceContextMenu</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleTimeout">
      <summary>
            Gets or sets the amount of time that should pass until a pop-up window is treated as idle.
            </summary>
      <remarks>
        <para>The <strong>IdleTimeout</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleTimeoutProperty" /></strong> field.</para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.Idle">
      <summary>
            Occurs when a pop-up window is idle. </summary>
      <remarks>
        <para>The <strong>Idle</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleEvent" /></strong> field.
            </para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleReset">
      <summary>
            Occurs when the idle state is reset because of interaction with the pop-up window or
            an explicit call to the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ResetIdle" /></strong> method.
            </summary>
      <remarks>
        <para>The <strong>IdleReset</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IdleResetEvent" /></strong> field.
            </para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvasStrokeErasingEventArgs">
      <summary>
            Provides additional information about the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing">StrokeErasing</see></strong>
            event.
            </summary>
      <example>
        <para>
            In this code example, an event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing">SurfaceInkCanvas.StrokeErasing</see></strong> 
            event prohibits the blue strokes from being erased.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="StrokeErasing" title="" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvasStrokeErasingEventArgs.Stroke">
      <summary>
            Gets the stroke that is about to be erased.
            </summary>
      <example>
        <para>
            In this code example, an event handler for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing">SurfaceInkCanvas.StrokeErasing</see></strong> 
            event prohibits the blue strokes from being erased.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="StrokeErasing" title="" lang="cs" />
      </example>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceInkEditingMode">
      <summary>
            Defines the type of changes that might occur from input.
            </summary>
      <remarks>
            A <strong>SurfaceInkEditingMode</strong> value is assigned to the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingMode">SurfaceInkCanvas.EditingMode</see></strong>
            property to change the behavior of a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> control.
            </remarks>
      <example>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="SetEditingMode" title="To change the EditingMode property of a SurfaceInkCanvas control in response to a button click" lang="cs" />
      </example>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkEditingMode.EraseByStroke">
      <summary>
            Whole strokes are erased from the canvas.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkEditingMode.EraseByPoint">
      <summary>
            Points are erased from the canvas. Strokes that are broken by an 
            <strong>EraseByPoint</strong> value are separated into two smaller strokes.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkEditingMode.Ink">
      <summary>
            New strokes are created on the canvas.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkEditingMode.None">
      <summary>
            No operation is performed.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">
      <summary>
             Represents a control that users draw on when they move their fingers over the control.
            </summary>
      <remarks>
        <para>
             A <strong>SurfaceInkCanvas</strong> control provides functionality similar to an
             <strong><see cref="T:System.Windows.Controls.InkCanvas">InkCanvas</see></strong> control. 
             A <strong>SurfaceInkCanvas</strong> control receives and displays ink input as the user 
             moves a contact or contacts over the control. During contact movement, the Microsoft Surface 
             input system creates strokes, which are represented as 
             <strong><see cref="T:System.Windows.Ink.Stroke">Stroke</see></strong>
             objects and which can be manipulated either programmatically or based on user input. 
             After a <strong>Stroke</strong> object is created, the <strong>SurfaceInkCanvas</strong> control enables users to 
             modify or delete it.
            </para>
        <para>
             The <a href="/Samples/SampleApplications/PhotoPaint.htm">Photo Paint</a> sample application
             demonstrates the use of the <strong>SurfaceInkCanvas</strong> control.
            </para>
      </remarks>
      <example>
        <para>
             In the following code example, a <strong>SurfaceInkCanvas</strong> control is declared.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas0.xaml" title="" lang="xml" />
      </example>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.UsesContactShapeProperty">
      <summary>
            Identifies a dependency property that specifies if the default settings or the shape of a contact
            should determine the shape of the strokes on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong> object.
            </summary>
      <remarks>
            The <strong>UsesContactShapeProperty</strong> property is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.UsesContactShape" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeProperty">
      <summary>
            Identifies a dependency property that specifies how a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong>
            object reacts to input.
            </summary>
      <remarks>The <strong>EditingModeProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingMode" /></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributesProperty">
      <summary>
            Identifies a dependency property that specifies the drawing attributes 
            that are applied to new ink strokes on 
            a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <remarks>
        <para>
             The <strong>DefaultDrawingAttributesProperty</strong> field is the identifier 
             for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributes" /></strong> property.
             You can use the <strong>DefaultDrawingAttributes</strong> property to establish
             the color, size, and other aspects of the rendered stroke.
            </para>
        <para>
             When
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.UsesContactShape" /></strong>
             is <strong>true</strong>, modifying the
             <strong><see cref="P:system.windows.ink.drawingattributes.height">Height</see></strong>
             and <strong><see cref="P:system.windows.ink.drawingattributes.Width">Width</see></strong> of the
             <strong>DefaultDrawingAttributes</strong>
             property has no effect. When you want to change the size of the rendered stroke by modifying the
             <strong>DefaultDrawingAttributes</strong> property, you must also set 
             <strong>UsesContactShape</strong> to <strong>false</strong>. 
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.BackgroundProperty">
      <summary>
            Identifies a dependency property that specifies the background of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong> object.
            </summary>
      <remarks>The <strong>BackgroundProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Background" /></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokesProperty">
      <summary>
            Identifies a dependency property that describes the strokes that a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong>
            object collects.
            </summary>
      <remarks>The <strong>StrokesProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Strokes" /></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErased" /></strong> event.
            </summary>
      <remarks>The <strong>StrokeErasedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErased" /></strong> event.
            The <strong>StrokeErased</strong> event occurs when a stroke is erased.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeCollectedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeCollected" /></strong> event.
            </summary>
      <remarks>The <strong>StrokeCollectedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeCollected" /></strong> event.
            <para>The <strong>StrokeCollected</strong> event occurs when a stroke is completed.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeChanged" /></strong> event.
            </summary>
      <remarks>The <strong>EditingModeChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeChanged" /></strong> event.
            <para>The <strong>EditingModeChanged</strong> event occurs when the editing mode is changed.</para></remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.#ctor">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnInitialized(System.EventArgs)">
      <summary>
            Override of the <strong>OnInitialized</strong> method.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.GetVisualChild(System.Int32)">
      <summary>
            Gets the specified visual child of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <param name="index">The index of the requested visual child to return.</param>
      <returns>The specified visual child.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.ArrangeOverride(System.Windows.Size)">
      <summary>
            Arranges the content of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong> 
            element.
            </summary>
      <param name="finalSize">The size that this <strong>SurfaceInkCanvas</strong> 
            element should use to arrange its child elements.</param>
      <returns>A <strong><see cref="T:System.Windows.Size">Size</see></strong> object that represents the arranged size of this 
            <strong>SurfaceInkCanvas</strong> element and its descendants.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.MeasureOverride(System.Windows.Size)">
      <summary>
            Measures the child elements of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong> 
            object to prepare to arrange them during a 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.ArrangeOverride(System.Windows.Size)">ArrangeOverride</see></strong> 
            call.
            </summary>
      <param name="availableSize">An upper limit size that should not be exceeded.</param>
      <returns>A <strong><see cref="T:System.Windows.Size">Size</see></strong> object that represents the size that is required to arrange the child content.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over the element is placed on the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over the element changes position or its orientation relative to the element.  
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over the element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
      <summary>
            Called when a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokesReplaced" /></strong> event occurs from an
            internal <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
      <summary>
            Called when a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeCollected" /></strong> event occurs from an
            internal <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <param name="args">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnStrokeErasing(Microsoft.Surface.Presentation.Controls.SurfaceInkCanvasStrokeErasingEventArgs)">
      <summary>
            Called when a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing" /></strong> event occurs from an 
            internal <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called after a dependency property is changed on a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas">SurfaceInkCanvas</see></strong> object.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
      <summary>
            Called when a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributesReplaced" /></strong> event occurs from an internal 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
      <summary>
            Called when the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingMode">EditingMode</see></strong> 
            property for the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object is changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.GetTemplateChild(System.String)">
      <summary>
            Gets the child element in the 
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /></strong> 
            of the element that corresponds to  
            the specified <em>childName</em> parameter.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributesReplaced">
      <summary>
            Occurs when the default drawing attributes are changed.
            </summary>
      <example>
        <para>
            In this example, a handler for the <strong>DefaultDrawingAttributesReplaced</strong>
            event prevents the 
            <strong><see cref="P:System.Windows.Ink.DrawingAttributes.Width" /></strong> property
            from exceeding 32.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas4.cs" region="DefaultDrawingAttributesReplaced" title="To handle the DefaultDrawingAttributesReplaced event" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing">
      <summary>
            Occurs when a stroke is starting to be erased.
            </summary>
      <example>
        <para>
            In this code example, an event handler for the 
            <strong>StrokeErasing</strong> event prohibits the blue strokes from being erased.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="StrokeErasing" title="" lang="cs" />
        <para>
             The following code examples implement a simple undo system to undo erased strokes. 
             During application initialization, a generic
             <strong><see cref="T:System.Collections.Generic.Stack" /></strong> collection
             is instantiated. This collection will hold the erased 
             <strong><see cref="T:System.Windows.Ink.Stroke" /></strong>
             objects until the user accesses the undo operation.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas2.cs" region="DeclareUndoStack" title="To declare a generic stack collection" lang="cs" />
        <para>
            When the <strong>StrokeErasing</strong> event is raised, the event handler checks to see if
            another handler has canceled the event. If not, the <strong>Stroke</strong> object
            is pushed on the stack.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas2.cs" region="StrokeErasing" title="" lang="cs" />
        <para>
             When the user clicks the undo button, the stack is checked to see if it is empty. If not,
             a <strong>Stroke</strong> object is removed from the stack and added to the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Strokes" /></strong>
             collection of the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong>
             control.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas2.cs" region="SurfaceButtonUndo" title="To restore a stroke" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokesReplaced">
      <summary>
            Occurs when a collection of strokes is replaced.
            </summary>
      <example>
        <para>
             In the following code examples, two 
             <strong><see cref="T:System.Windows.Ink.StrokeCollection" /></strong>
             objects are maintained for a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong>
             control. The active collection displays existing strokes and collects new 
             <strong><see cref="T:System.Windows.Ink.Stroke" /></strong>
             objects as they are created. When a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceButton" /></strong>
             control is clicked, the active collection is changed, and the 
             <strong><see cref="T:System.Windows.Controls.Grid" /></strong>
             control that hosts the <strong>SurfaceInkCanvas</strong> control is rotated 180 degrees.
            </para>
        <para>
             During application initialization, an array is created to hold the two 
             <strong>StrokeCollection</strong> objects. The first index of the array is set to 
             <strong>null</strong> because it is replaced with the active 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Strokes" /></strong>
             property of the <strong>SurfaceInkCanvas</strong> control the first time the button is clicked.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas4.cs" region="StrokeCollectionArray" title="To declare the StrokeCollection array" lang="cs" />
        <para>
             When the <strong>SurfaceButton</strong> is clicked, the <strong>Strokes</strong> property of the 
             <strong>SurfaceInkCanvas</strong> control is saved in the array. The property is then replaced by the 
             <strong>StrokeCollection</strong> object that is held in the other array position.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas4.cs" region="SurfaceButtonSwap" title="To swap the active StrokeCollection" lang="cs" />
        <para>
             When the <strong>Strokes</strong> property is replaced, the 
             <strong>StrokesReplaced</strong> event is raised. The handler for the event rotates the 
             <strong>Grid</strong> control that is hosting the <strong>SurfaceInkCanvas</strong> either 180 degrees, 
             or zero degrees, depending on which <strong>StrokeCollection</strong> is active.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas4.cs" region="StrokesReplaced" title="To handle the StrokesReplaced event" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErased">
      <summary>
            Occurs when a stroke is erased.
            </summary>
      <remarks>The <strong>StrokeErased</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeCollected">
      <summary>
            Occurs when a stroke is completed.
            </summary>
      <remarks>The <strong>StrokeCollected</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeCollectedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
            In this code example, an event handler for the <strong>StrokeCollected</strong> event
            sets the color of every other stroke to blue.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="StrokeCollected" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeChanged">
      <summary>
            Occurs when the editing mode is changed.
            </summary>
      <remarks>The <strong>EditingModeChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.UsesContactShape">
      <summary>
            Gets or sets a Boolean value that specifies whether a contact ellipse or the
            default stroke settings determine the size and shape of new strokes. 
            </summary>
      <value>
            The default value is <strong>true</strong>.
            </value>
      <remarks>
        <para>The <strong>UsesContactShape</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.UsesContactShapeProperty" /></strong> field.
            </para>
            When <strong>UsesContactShape</strong> is <strong>true</strong>, modifying the
            <strong><see cref="P:system.windows.ink.drawingattributes.height" /></strong> and
            <strong><see cref="P:system.windows.ink.drawingattributes.width" /></strong> of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributes" /></strong>
            property has no effect. When you want to change the size of the rendered stroke by modifying the
            <strong>DefaultDrawingAttributes</strong> property, you must also set 
            <strong>UsesContactShape</strong> to <strong>false</strong>. 
            </remarks>
      <example>
        <para>
             In the following code example, the <strong>DefaultDrawingAttributes</strong> property is modified
             to produce red strokes of the specified height and width.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="DefaultDrawingAttributes" title="To establish new default drawing attributes" lang="cs" />
        <para>
            Ink-related classes are located within the <strong><see cref="N:System.Windows.Ink">System.Windows.Ink</see></strong>
            namespace.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="UsingSystemWindowsInk" title="" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.InkPresenter">
      <summary>
            Gets the ink presenter that displays the ink on a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributes">
      <summary>
            Gets or sets the drawing attributes that are applied to new ink strokes on 
            a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <remarks>
        <para>The <strong>DefaultDrawingAttributes</strong> property is a dependency property that is
            identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.DefaultDrawingAttributesProperty" /></strong> field.
            </para>
        <para>
             You can use the <strong>DefaultDrawingAttributes</strong> property to establish the
             color, size, and other aspects of the rendered stroke. 
            </para>
        <para>
             When
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.UsesContactShape" /></strong>
             is <strong>true</strong>, modifying the
             <strong><see cref="P:system.windows.ink.drawingattributes.height" /></strong> and
             <strong><see cref="P:system.windows.ink.drawingattributes.width" /></strong> of the
             <strong>DefaultDrawingAttributes</strong>
             property has no effect. When you want to change the size of the rendered stroke by modifying the
             <strong>DefaultDrawingAttributes</strong> property, you must also set 
             <strong>UsesContactShape</strong> to <strong>false</strong>. 
            </para>
      </remarks>
      <example>
        <para>
             In the following code example, the <strong>DefaultDrawingAttributes</strong> property is modified
             to produce red strokes of the specified height and width.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="DefaultDrawingAttributes" title="To establish new default drawing attributes" lang="cs" />
        <para>
            Ink-related classes are located within the <strong><see cref="N:System.Windows.Ink">System.Windows.Ink</see></strong>
            namespace.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="UsingSystemWindowsInk" title="" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingMode">
      <summary>
            Gets or sets the user editing mode that is used when a contact is active.
            </summary>
      <remarks>The <strong>EditingMode</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EditingModeProperty" /></strong> field.
            </remarks>
      <example>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas1.xaml.cs" region="SetEditingMode" title="To change the EditingMode property of a SurfaceInkCanvas control in response to a button click" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Strokes">
      <summary>
            Gets or sets the collection of ink strokes that a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object collects.
            </summary>
      <remarks>The <strong>Strokes</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokesProperty" /></strong> field.
            </remarks>
      <example>
        <para>
             The following code examples implement a simple undo system to undo erased strokes. 
             During application initialization, a generic
             <strong><see cref="T:System.Collections.Generic.Stack" /></strong> collection
             is instantiated. This collection holds the erased 
             <strong><see cref="T:System.Windows.Ink.Stroke" /></strong>
             objects until the user accesses the undo operation.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas2.cs" region="DeclareUndoStack" title="To declare a generic stack collection" lang="cs" />
        <para>
             When the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing">StrokeErasing</see></strong> event is raised, the event handler checks to see if
             another handler has canceled the event. If not, the <strong>Stroke</strong> object
             is pushed on the stack.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas2.cs" region="StrokeErasing" title="" lang="cs" />
        <para>
             When the user clicks the undo button, the stack is checked to see if it is empty. If not,
             a <strong>Stroke</strong> object is removed from the stack and added to the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Strokes" /></strong>
             collection of the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong>
             control.
            </para>
        <code source="Presentation\Class_SurfaceInkCanvas\Controls\SurfaceInkCanvas2.cs" region="SurfaceButtonUndo" title="To restore a stroke" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.Background">
      <summary>
            Gets or sets a <strong><see cref="T:System.Windows.Media.Brush">Brush</see></strong> object that is used to fill the area 
            between the borders of a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <remarks>The <strong>Background</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.BackgroundProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.EraserShape">
      <summary>
            Gets or sets the stylus shape that is used to erase ink from a canvas.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.VisualChildrenCount">
      <summary>
            Gets the number of visual children of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas" /></strong> object.
            </summary>
      <value>Always 1.</value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo">
      <summary>
            Extends the
            <strong><see cref="T:System.Windows.Controls.Primitives.IScrollInfo">IScrollInfo</see></strong>
            interface with extra methods for panning.
            </summary>
      <remarks>
        <para>
             The <strong>ISurfaceScrollInfo</strong> interface is used by the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer">SurfaceScrollViewer</see></strong> control to 
             support <em>panning</em>. Panning is the ability to manipulate the content of a 
             <strong>SurfaceScrollViewer</strong> control by direct contact with the content itself.
            </para>
        <para>
             For more information, see
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo.ConvertToViewportUnits(System.Windows.Point,System.Windows.Vector)">
      <summary>
            Converts horizontal and vertical offsets to viewport units, given an offset in
            device-independent units that are relative to the given origin in viewport units.
            </summary>
      <param name="origin">The viewport offset when panning started, in viewport units.</param>
      <param name="offset">The offset, in device-independent units.</param>
      <returns>The offset, in viewport units.</returns>
      <remarks>
        <para>If a panel does not implement the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo">ISurfaceScrollInfo</see></strong>
            interface, a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer">SurfaceScrollViewer</see></strong>
             object uses the following conversion:</para>
        <para>
          <list type="bullet">
            <item>
              <description>result.X = IsFinitePositive(content.ActualWidth) ? offset.X * ViewportWidth / content.ActualWidth : 0</description>
            </item>
            <item>
              <description>result.Y = IsFinitePositive(content.ActualHeight) ? offset.Y * ViewportHeight / content.ActualHeight : 0</description>
            </item>
          </list>
        </para>
        <para>A <strong>SurfaceScrollViewer</strong> object calls the <strong>ConvertToViewportUnits</strong>
            method when users pan the content. The offset that this method returns
            is passed to the
            <strong><see cref="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">SurfaceScrollViewer.ScrollToHorizontalOffset(result.X)</see></strong>
            and
            <strong><see cref="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">SurfaceScrollViewer.ScrollToVerticalOffset(result.Y)</see></strong>
            methods.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo.ConvertToViewportUnitsForFlick(System.Windows.Point,System.Windows.Vector)">
      <summary>
             Converts horizontal and vertical offsets to viewport units, given an offset in
             device-independent units that are relative to the given origin in viewport units.
             </summary>
      <param name="origin">The viewport offset when panning started, in viewport units.</param>
      <param name="offset">The offset, in device-independent units.</param>
      <returns>The offset, in viewPort units.</returns>
      <remarks>
        <para>The <strong>ConvertToViewportUnitsForFlick</strong> method can calculate an offset in a way so
             that the content snaps to the boundary of the visible top or bottom item when the flick manipulation stops.</para>
        <para>The returned offset, when converted back to device-independent units, does not have to match the given offset.
             If the difference between the returned offset and the given offset is less than 0, the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer">SurfaceScrollViewer</see></strong>
             object scrolls content to the given offset position and then bounces back to the returned offset.</para>
        <para>If a panel does not implement the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo">ISurfaceScrollInfo</see></strong>
             interface, <strong>SurfaceScrollViewer</strong> calculates the offset in the same way as the
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo.ConvertToViewportUnits(System.Windows.Point,System.Windows.Vector)">ConvertToViewportUnits</see></strong>
             method.</para>
        <para>A <strong>SurfaceScrollViewer</strong> object calls the <strong>ConvertToViewportUnitsForFlick</strong>
             method after users flick the content. The offset that this method returns is passed to
             the 
             <strong><see cref="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">SurfaceScrollViewer.ScrollToHorizontalOffset(offset)</see></strong>
             and
             <strong><see cref="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">SurfaceScrollViewer.ScrollToVerticalOffset(offset)</see></strong>
             methods.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo.ConvertFromViewportUnits(System.Windows.Point,System.Windows.Vector)">
      <summary>
            Converts horizontal and vertical offsets, in viewport units, to device-independent units
            that are relative to the given origin in viewport units.
            </summary>
      <param name="origin">The viewport offset when panning started, in viewport units.</param>
      <param name="offset">The offset in viewport units.</param>
      <returns>The offset in device-independent units.</returns>
      <remarks>The <strong>ConvertFromViewportUnits</strong> method is the reverse operation of the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo.ConvertToViewportUnits(System.Windows.Point,System.Windows.Vector)">ConvertToViewportUnits</see></strong>
            and
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo.ConvertToViewportUnitsForFlick(System.Windows.Point,System.Windows.Vector)">ConvertToViewportUnitsForFlick</see></strong>
            methods.</remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.FlickEventArgs">
      <summary>
            Contains information about a
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.Flicked">Flicked</see></strong>
            event.
            </summary>
      <remarks>
            The  
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb" /></strong>
            control raises a <strong>Flicked</strong> event when a user flicks the thumb.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.Primitives.FlickEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.FlickEventHandler">FlickEventHandler</see></strong>
            delegate.
            </summary>
      <param name="genericHandler">The <strong>FlickEventHandler</strong> method.</param>
      <param name="genericTarget">The target object.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.Primitives.FlickEventArgs.Velocity">
      <summary>
            Gets the velocity of a flick manipulation, in device-independent units per millisecond.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.Primitives.FlickEventHandler">
      <summary>
            Represents the method that will handle
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb.Flicked">Flicked</see></strong>
            events.
            </summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.KeyboardLayout">
      <summary>
            Specifies the supported keyboard layouts for the Microsoft Surface on-screen
            keyboard.
            </summary>
      <remarks>
             The <strong>KeyboardLayout</strong> enumeration is used when assigning a value to the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardLayout">SurfaceTextBox.KeyboardLayout</see></strong>
             and
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardLayout">SurfacePasswordBox.KeyboardLayout</see></strong>
             properties. These properties determine which keyboard layout will be displayed when the control is activated.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.KeyboardLayout.Alphanumeric">
      <summary>
            A typical QWERTY layout with common alphanumeric keys and
            symbols.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.KeyboardLayout.Numeric">
      <summary>
            A typical numeric keypad layout for numbers and associated symbols.
            This layout is useful when your application requires only numbers.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler">
      <summary>
            Represents the method that is called to handle the <strong>KeyboardPositioning</strong> 
            event for <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceTextBox" /></strong> and <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox" /></strong> controls.
            </summary>
      <param name="sender">The control that fired the event, typically 
            <strong>SurfaceTextBox</strong> or <strong>SurfacePasswordBox</strong>.</param>
      <param name="e">The event arguments.</param>
      <remarks>The <strong>KeyboardPositioning</strong> event enables your
            application to override the default location of the keyboard by 
            modifying the properties in the event arguments.</remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs">
      <summary>
            Defines event arguments to a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler" /></strong> delegate.
            </summary>
      <remarks>
            The <strong>KeyboardPositioningEventArgs</strong> type is one of the parameters of a 
            <strong>KeyboardPositioningEventHandler</strong> delegate.
            <strong>KeyboardPositioningEventHandler</strong> enables your application 
            to examine and set properties of the 
            <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong> control when it is prepared for display.
            The 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioning">SurfaceTextBox.KeyboardPositioning</see></strong>
            and
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardPositioning">SurfacePasswordBox.KeyboardPositioning</see></strong>
            events are both a <strong>KeyboardPositioningEventHandler</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.IsVisible">
      <summary>
            Gets a Boolean value that specifies whether the on-screen keyboard is currently visible to users.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.Width">
      <summary>
            Gets the width of the on-screen keyboard, in pixels.
            </summary>
      <remarks>
            When your application uses a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler" /></strong>
            delegate to handle a <strong>KeyboardPositioning</strong> event,
            the current width of the
            <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong> control
            is exposed through the read-only <strong>Width</strong> property so that you can use it
            to make positioning calculations for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.CenterX" /></strong>
            and
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.CenterY" /></strong>
            properties.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.Height">
      <summary>
            Gets the height of the on-screen keyboard, in pixels.
            </summary>
      <remarks>
            When your application uses a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler" /></strong>
            delegate to handle a <strong>KeyboardPositioning</strong> event,
            the current height of the
            <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong> control
            is exposed through the read-only <strong>Height</strong> property so that you can use it
            to make positioning calculations for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.CenterX" /></strong>
            and
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.CenterY" /></strong>
            properties.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.CenterX">
      <summary>
            Gets or sets the x-coordinate of the center of the on-screen keyboard,
            in screen coordinates.
            </summary>
      <remarks>
        <para>
             When your application uses a
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler" /></strong>
             delegate to handle a <strong>KeyboardPositioning</strong> event,
             you can modify the x-coordinate of the center of the
             <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong>
             control by setting the <strong>CenterX</strong> property. The value for
             <strong>CenterX</strong> must be greater than zero, and less than the width of the Microsoft Surface screen.
             You can obtain the dimensions of the Microsoft Surface screen by inspecting the
             <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.Bounds">InteractiveSurface.PrimarySurfaceDevice.Bounds</see></strong>
             property.
            </para>
        <code source="Core\Class_SurfaceKeyboard\SurfaceWindow1.xaml.cs" region="GetSurfaceBounds" lang="cs" />
        <para>
             The Microsoft Surface software sets the initial value for <strong>CenterX</strong>. 
             The Microsoft Surface software considers the visibility and position of other controls 
             in its calculations.
            </para>
        <para>
             Not all legal values that are applied to this property will be honored.
             The <strong>SurfaceKeyboard</strong> control applies internal constraints to ensure 
             that critical components of its display such as the grab bar and the dismiss button remain on the screen. 
             If your application tries to set this property to a value that violates the internal constraints, 
             the <strong>SurfaceKeyboard</strong> control silently adjusts the value.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value that was set is less than or equal to 0, or greater than or equal to the width of the Microsoft Surface screen.
            </exception>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.CenterY">
      <summary>
            Gets or sets the y-coordinate of the center of the on-screen keyboard,
            in screen coordinates.
            </summary>
      <remarks>
        <para>
             When your application uses a
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler" /></strong>
             delegate to handle a <strong>KeyboardPositioning</strong> event,
             you can modify the y-coordinate of the center of the
             <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong>
             control by setting the <strong>CenterY</strong> property. The value for
             <strong>CenterY</strong> must be greater than zero, and less than the height of the Microsoft Surface screen.
             You can obtain the dimensions of the Microsoft Surface screen by inspecting the
             <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.Bounds">InteractiveSurface.PrimarySurfaceDevice.Bounds</see></strong>
             property.
            </para>
        <code source="Core\Class_SurfaceKeyboard\SurfaceWindow1.xaml.cs" region="GetSurfaceBounds" lang="cs" />
        <para>
             The Microsoft Surface software sets the initial value for <strong>CenterY</strong>. 
             The Microsoft Surface software considers the visibility and position of other controls 
             in its calculations.
            </para>
        <para>
             Not all legal values that are applied to this property will be honored.
             The <strong>SurfaceKeyboard</strong> control applies internal constraints to ensure 
             that critical components of its display such as the grab bar and the dismiss button remain on the screen. 
             If your application tries to set this property to a value that violates the internal constraints, 
             the <strong>SurfaceKeyboard</strong> control silently adjusts the value.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value that was set is less than or equal to 0, or greater than or equal to the height of the Microsoft Surface screen.
            </exception>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs.Rotation">
      <summary>
            Gets or sets the rotation of the on-screen keyboard, in degrees.
            </summary>
      <remarks>
        <para>
             When your application uses a
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventHandler" /></strong>
             delegate to handle a <strong>KeyboardPositioning</strong> event,
             you can modify the rotation of the
             <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong> control
             by setting the <strong>Rotation</strong> property.
             The value for <strong>Rotation</strong> must be finite; it cannot be NaN or infinity.
            </para>
        <para>
             The Microsoft Surface software sets the initial value for <strong>Rotation</strong>.
            </para>
        <para>
             Not all legal values that are applied to this property will be honored.
             The <strong>SurfaceKeyboard</strong> control applies internal constraints to ensure 
             that critical components of its display such as the grab bar and the dismiss button remain on the screen. 
             If your application tries to set this property to a value that violates the internal constraints, 
             the <strong>SurfaceKeyboard</strong> control silently adjusts the value.
            </para>
      </remarks>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value that was set is NaN or infinity.
            </exception>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceTextBox">
      <summary>
            Represents a control that implements a text field that users can edit.
            </summary>
      <remarks>
        <para>
             A <strong>SurfaceTextBox</strong> control enables a user to enter text by using the 
             <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong>
             control. 
            </para>
        <para>
             When a <strong>SurfaceTextBox</strong> control is activated, it automatically displays and positions the 
             <strong>SurfaceKeyboard</strong> object. Your application can control the positioning of the <strong>SurfaceKeyboard</strong> 
             object by handling the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioning" /></strong> event.
            </para>
        <para>
          <strong>SurfaceKeyboard</strong> supports two layouts: an alphanumeric layout and a numeric-only layout. 
             You can select which layout the <strong>SurfaceKeyboard</strong> object uses by setting the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardLayout" /></strong> property. 
            </para>
        <para>
             When a user dismisses (hides) the <strong>SurfaceKeyboard</strong> object, the associated <strong>SurfaceTextBox</strong> control 
             is automatically deactivated.
            </para>
        <para>
             With key differences, the behavior of a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox" /></strong>
             control is similar to that of a <strong>SurfaceTextBox</strong> control.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceTextBox</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioningEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioning" /></strong> event.
            </summary>
      <remarks>The <strong>KeyboardPositioningEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioning" /></strong> event.
            The <strong>KeyboardPositioning</strong> event occurs when a text box decides
            how to display the Microsoft Surface on-screen keyboard when the text box receives focus.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.SelectsAllOnFocusProperty">
      <summary>
            Identifies a dependency property that specifies whether a text box selects all
            of its contents when it receives focus.
            </summary>
      <remarks>
            The <strong>SelectsAllOnFocusProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.SelectsAllOnFocus" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardLayoutProperty">
      <summary>
            Identifies a dependency property that specifies what keyboard layout
            a text box uses.
            </summary>
      <remarks>
            The <strong>KeyboardLayoutProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardLayout" /></strong> dependency property.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioning">
      <summary>
            Occurs when a text box is deciding how to display the Microsoft Surface on-screen keyboard
            when the text box receives focus.
            </summary>
      <remarks>
        <para>The <strong>KeyboardPositioning</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardPositioningEvent" /></strong> field.
            </para>
        <para>
             When a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceTextBox" /></strong>
             control is activated, it displays the 
             <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong>
             control if it is not already visible. <strong>SurfaceKeyboard</strong> automatically 
             calculates a display position and orientation, based on the position and orientation of the 
             <strong>SurfaceTextBox</strong> control.
            </para>
        <para>
             When the keyboard is positioned, it raises the <strong>KeyboardPositioning</strong> event.
             The 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs" /></strong>
             object that is passed to this event contains the calculated position. Your application can modify the 
             keyboard position by setting properties of this object.
            </para>
      </remarks>
      <example>
        <para>
             In this code example, the handler for the <strong>KeyboardPositioning</strong> event
             positions the <strong>SurfaceKeyboard</strong> control directly beneath the control that activated it.
            </para>
        <code source="Core\Class_SurfaceKeyboard\SurfaceWindow1.xaml.cs" region="SurfaceBox_KeyboardPositioning" title="To handle the KeyboardPositioning event" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.SelectsAllOnFocus">
      <summary>
            Gets or sets a Boolean value that indicates whether a text box selects its
            entire contents when it receives focus.
            </summary>
      <remarks>The <strong>SelectsAllOnFocus</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.SelectsAllOnFocusProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if the text box selects its entire contents; otherwise,
            <strong>false </strong>. The default value is <strong>true</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardLayout">
      <summary>
            Gets or sets the keyboard layout that a text box uses.
            </summary>
      <remarks>The <strong>KeyboardLayout</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceTextBox.KeyboardLayoutProperty" /></strong> field.
            </remarks>
      <value>
            A
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardLayout">KeyboardLayout</see></strong>
            value that specifies the keyboard layout. The default value is
            <strong>KeyboardLayout.Alphanumeric</strong>.
            </value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceUserControl">
      <summary>
            Represents the base class for user-interactive elements.
            </summary>
      <remarks>
            If you want to create a custom Microsoft Surface control, you can derive from this class.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceUserControl.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceWindow">
      <summary>
            Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.
            </summary>
      <remarks>
        <para>
            The <strong>SurfaceWindow</strong> class derives from the <strong><see cref="T:System.Windows.Window" /></strong> class
            and provides several enhancements that are required for the Microsoft Surface environment.
            </para>
        <para>
            A <strong>SurfaceWindow</strong> control provides and activates the necessary event handlers to make sure that it gets contact events. 
            This control automatically handles Surface Shell interactions, such as signaling when it has finished loading and rotating 
            content to match the Surface Shell orientation. A <strong>SurfaceWindow</strong> control provides appropriate Microsoft Surface styling, 
            such as maximizing to the monitor and hiding the title bar.
            </para>
        <para>
            On systems with multiple monitors, a <strong>SurfaceWindow</strong> control automatically recognizes which monitor is the 
            touch-sensitive surface and displays there.
            </para>
        <para>
            Although we recommend that you use the <strong>SurfaceWindow</strong> control, it is not required. 
            You can write a Microsoft Surface application that is hosted in a standard <strong><see cref="T:System.Windows.Window" /></strong> object instead. 
            If you do, your application must provide the necessary functionality to operate in a Microsoft Surface environment.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.#ctor">
      <summary>
            Initializes a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceWindow">SurfaceWindow</see></strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnInitialized(System.EventArgs)">
      <summary>
            Called when the <strong><see cref="P:System.Windows.FrameworkElement.IsInitialized">IsInitialized</see></strong> 
            property is set to <strong>true</strong>
            and it raises an 
            <strong><see cref="E:System.Windows.FrameworkElement.Initialized">Initialized</see></strong> event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.AutoSignalLoadComplete">
      <summary>
            Gets or sets a Boolean value that indicates if Launcher must be notified when a window load completes.
            </summary>
      <remarks>
            The default value is <strong>true</strong>.
            For more information, see <strong><see cref="M:Microsoft.Surface.ApplicationLauncher.SignalApplicationLoadComplete">SignalApplicationLoadComplete</see></strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceWindow.AutoOrientsOnStartup">
      <summary>
            Gets or sets a Boolean value that indicates if a window must be oriented according to Launcher's orientation.
            </summary>
      <remarks>
            The default value is <strong>true</strong>. 
            For more information, see <strong><see cref="P:Microsoft.Surface.ApplicationLauncher.Orientation">Orientation</see></strong>.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs">
      <summary>
            Provides additional information about the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted">ScatterManipulationCompleted</see></strong>
            event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.ManipulationOrigin">
      <summary>
            Gets the center point of the final manipulation.
            </summary>
      <value>The center <strong>Point</strong> of the final manipulation.</value>
      <remarks>
        <para>
             The <strong>ManipulationOrigin</strong> point represents a point on the Microsoft Surface screen relative to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" />ScatterView</strong> 
             control that is the composite center of all contacts that are currently participating in the 
             manipulation. This point moves if any one of the other contacts move or when a contact is added or removed 
             from the manipulation.
             </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.HorizontalChange">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the center of the control has changed since the 
            start of the manipulation.
            </summary>
      <value>A <strong>double</strong> value that specifies how much 
            the center of the control changed.</value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.VerticalChange">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the center of the control has changed since the 
            start of the manipulation.
            </summary>
      <value>A <strong>double</strong> value that specifies how much
            the center of the control changed.</value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.RotationalChange">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the orientation has changed since the start of the manipulation.
            </summary>
      <value>
            A <strong>double</strong> value that specifies how much the 
            orientation changed. This value is measured clockwise, in degrees, 
            and will be from -180 through 180.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.ScaleFactor">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the width and height scaled compared to the size at the start 
            of the manipulation.
            </summary>
      <value>A <strong>double</strong> value that specifies how much
            the width and height scaled. This value is a scale ratio of 
            the original size. A value of <strong>1.0</strong> indicates no change.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.Canceled">
      <summary>
            Gets a Boolean value that indicates whether the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted">ScatterManipulationCompleted</see></strong>
            event occurred because of a call to the 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CancelManipulation">CancelManipulation</see></strong>
            method.
            </summary>
      <value>
        <strong>true</strong> if the event occurred because of a call to
            <strong>CancelManipulation</strong>; otherwise, <strong>false</strong>.
            </value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventHandler">
      <summary>Represents the method that will handle 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted">ScatterManipulationCompleted</see></strong>
            events.</summary>
      <param name="sender">The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> object that raised the <strong>ScatterManipulationCompleted</strong> event.</param>
      <param name="e">A 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs">ScatterManipulationCompletedEventArgs</see></strong>
            object.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs">
      <summary>Provides additional information about the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDelta">ScatterManipulationDelta</see></strong>
            event.</summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.ManipulationOrigin">
      <summary>
            Gets the current center point of the manipulation.
            </summary>
      <value>A <strong>Point</strong> object.</value>
      <remarks>
        <para>
             The <strong>ManipulationOrigin</strong> point represents a point on the Microsoft Surface screen that is relative to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" />ScatterView</strong> control 
             that is the composite center of all contacts that are currently participating in the 
             manipulation. This point moves if any one of the other contacts move or when a contact is added or removed 
             from the manipulation.
             </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.HorizontalChange">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the center of the control has changed since the 
            previous manipulation.
            </summary>
      <value>A <strong>double</strong> value that specifies how much
            the center of the control has changed.</value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.VerticalChange">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the center of the control has changed since the previous manipulation.
            </summary>
      <remarks>A <strong>double</strong> value that specifies how much
            the center of the control has changed.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.RotationalChange">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the orientation has changed since the previous manipulation.
            </summary>
      <value>
            A <strong>double</strong> value that specifies how much the 
            orientation changed. This value is measured clockwise, in degrees, 
            and will be from -180 through 180.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.ScaleFactor">
      <summary>
            Gets a <strong>double</strong> value that specifies how much
            the width and height scaled compared
            to the previous manipulation.
            </summary>
      <value>
            A <strong>double</strong> value that specifies how much
            the width and height scaled. This value is a percentage of 
            the previous size. A value of <strong>1.0</strong> indicates no change.</value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventHandler">
      <summary>Represents the method that will handle 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDelta">ScatterManipulationDelta</see></strong>
            events.</summary>
      <param name="sender">The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> object that raised the <strong>ScatterManipulationDelta</strong> event.</param>
      <param name="e">A 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs">ScatterManipulationDeltaEventArgs</see></strong>
            object.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationStartedEventArgs">
      <summary>
            Provides additional information about the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted">ScatterManipulationStarted</see></strong>
            event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationStartedEventArgs.ManipulationOrigin">
      <summary>
            Gets the initial center point of the manipulation.
            </summary>
      <value>A <strong>Point</strong> object.</value>
      <remarks>
        <para>
             The <strong>ManipulationOrigin</strong> point represents a point on the Microsoft Surface screen 
             that is relative to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" />ScatterView</strong> control 
             that is the composite center of all contacts currently participating in the 
             manipulation. This point moves if any one of the other contacts move or when a contact is added or removed 
             from the manipulation.
             </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu">
      <summary>
            Represents a Microsoft Windows menu control that enables you to hierarchically 
            organize elements that are associated with commands and event handlers.
            </summary>
      <remarks>
        <para>
             In some areas, a <strong>SurfaceMenu</strong> control behaves in the same way as its 
             Microsoft Windows Presentation Foundation (WPF) counterpart. When a contact moves from one menu item to another, 
             one set of child menu items is displayed at a time.
            </para>
        <para>
             However, unlike a WPF <strong><see cref="T:System.Windows.Controls.Menu" /></strong> control, a 
             <strong>SurfaceMenu</strong> control considers the time in which a control has been idle to 
             determine when to hide a set of child menu items.
            </para>
        <para>
             Consider the following <strong>SurfaceMenu</strong> control.
            </para>
        <para>
          <img src="/Resources/Images/SurfaceMenu.png" alt="SurfaceMenu control" />
        </para>
        <para>
             If a contact is initiated on the <strong>File</strong> menu item, and then moved to the <strong>Edit</strong> menu item, 
             each set of child menu items displays in turn. If the contact then stops moving, moves off the 
             <strong>SurfaceMenu</strong> control, or is removed from the Microsoft Surface screen, the 
             <strong>SurfaceMenu</strong> control begins an idle countdown.
            </para>
        <para>
             When the countdown expires, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.Idle" /></strong>
             event occurs, and the child menu items begin to fade from the screen.
            </para>
        <para>
             If contact is re-initiated on the <strong>SurfaceMenu</strong> control before 
             the child menu items have disappeared, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleReset" /></strong>
             event occurs, the countdown timer is reset, and the child menu items are displayed in their 
             original opacity.
            </para>
        <para>
             The 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleTimeout" /></strong>
             property controls the duration of the idle countdown. Your application can change the value of this property. The default value is 2 seconds.
            </para>
        <para>
             Your application can reset the idle countdown by calling the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ResetIdle" /></strong>
             method. If your application calls <strong>ResetIdle</strong> before the child menu items have disappeared, 
             the <strong>IdleReset</strong> event occurs, the countdown timer is reset, and the child menu 
             items are displayed in their original opacity. If your application calls <strong>ResetIdle</strong>
             after the child menu items have disappeared, the method has no effect.
            </para>
      </remarks>
      <example>
        <code source="Presentation\Classes_SurfaceControls\Window1.xaml.cs" region="SurfaceMenu1" title="To change the idle timeout" lang="cs" />
        <para>
              In the following code example, the <strong>ResetIdle</strong> method is called during the <strong>Idle</strong>
              event. This example prevents the child menu items from disappearing from the screen until they are
              manually dismissed.
             </para>
        <code source="Presentation\Classes_SurfaceControls\Window1.xaml.cs" region="SurfaceMenu2" title="To handle the Idle event, and reset the idle countdown" lang="cs" />
      </example>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" />
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ResetIdle">
      <summary>
            Resets the timer that determines when a pop-up window should be treated as idle.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnIdle">
      <summary>
            Reports that a pop-up window is idle.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnIdleReset">
      <summary>
            Reports that users have interacted with the pop-up window or the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ResetIdle" /></strong>
            method has been called.
            </summary>
      <remarks>
            Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines whether a specified item is, or is eligible to be, its own container.
            </summary>
      <param name="item">The item to check.</param>
      <returns>
        <strong>true</strong> if the item is eligible to be
            its own container; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GetContainerForItemOverride">
      <summary>
            Creates or identifies an element that displays the given item.
            </summary>
      <returns>
            A <strong><see cref="T:System.Windows.DependencyObject">DependencyObject</see></strong> object. This object is
            the element that displays the given item.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Occurs when an unhandled <strong><see cref="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" /></strong>
            routed event reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Occurs when an unhandled <strong><see cref="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" /></strong>
            routed event reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceMenu</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleTimeoutProperty">
      <summary>
            Identifies a dependency property that indicates how much time should pass since the last
            user interaction before a pop-up window is treated as idle.
            </summary>
      <remarks>The <strong>IdleTimeoutProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleTimeout" /></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleEvent">
      <summary>
            Occurs when there is no interaction with a pop-up window during
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleTimeout" /></strong> interval.
            </summary>
      <remarks>The <strong>IdleEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.Idle" /></strong> event.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleResetEvent">
      <summary>
            Occurs when the idle state is reset because of an interaction with the pop-up window or
            an explicit call to the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ResetIdle" /></strong> method.
            </summary>
      <remarks>The <strong>IdleResetEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleReset" /></strong> event.</remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleTimeout">
      <summary>
            Gets or sets the amount of time that should pass until a pop-up window is treated as idle.
            </summary>
      <remarks>
        <para>The <strong>IdleTimeout</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleTimeoutProperty" /></strong> field.</para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.Idle">
      <summary>
            Occurs when a pop-up window is idle. </summary>
      <remarks>
        <para>The <strong>Idle</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleEvent" /></strong> field.
            </para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleReset">
      <summary>
            Occurs when the idle state is reset because of interaction with the pop-up window or
            an explicit call to the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ResetIdle" /></strong> method.
            </summary>
      <remarks>
        <para>The <strong>IdleReset</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IdleResetEvent" /></strong> field.
            </para>
        <para>Menu and pop-up controls in a Microsoft Surface environment behave differently than their
            Microsoft Windows Presentation Foundation (WPF) counterparts. For more information, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceContextMenu" /></strong> and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfacePopup" /></strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenu.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenu.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem">
      <summary>
            Represents a selectable item inside a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenu">SurfaceMenu</see></strong> control.
            
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceMenuItem</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.OnClick">
      <summary>
            Overridden. Called when a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem" /></strong> object is clicked
            and raises a <strong><a target="_blank" src="http://msdn.microsoft.com/en-us/library/system.windows.controls.menuitem.click.aspx">Click</a></strong> event.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines whether an item is (or is eligible to be) its own ItemUI.
            </summary>
      <param name="item">The item to check.</param>
      <returns>
        <strong>true</strong> if the item is eligible to be
            its own ItemUI object; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GetContainerForItemOverride">
      <summary>
            Creates or identifies an element that displays the given item.
            </summary>
      <returns>
            A <strong><see cref="T:System.Windows.DependencyObject">DependencyObject</see></strong> object. This object is
            the element that displays the given item.
            </returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceMenuItem.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceSlider">
      <summary>
            Represents a control that enables users to select from a range of values by moving a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceThumb">SurfaceThumb</see></strong> 
            control along a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.SurfaceTrack">SurfaceTrack</see></strong> control.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceSlider</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.MoveToPointDurationProperty">
      <summary>
            Identifies a dependency property that specifies the duration, in milliseconds,
            of the animation that occurs when the slider is moving to a point.
            </summary>
      <remarks>
            The <strong>MoveToPointDurationProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.MoveToPointDuration" /></strong> dependency property. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueProperty">
      <summary>
            Identifies an attached property that specifies the snapped value of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceSlider" /></strong> control.
            </summary>
      <remarks>The <strong>SnappedValueProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValue">SnappedValue</see></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueChangedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueChanged">SnappedValueEvent</see></strong>
            event.
            </summary>
      <remarks>The <strong>SnappedValueChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueChanged" /></strong> event.
            The <strong>SnappedValueChanged</strong> event occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValue">SnappedValue</see></strong>
            property of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceSlider">SurfaceSlider</see></strong> 
            object has changed.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnSnappedValueChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Double})">
      <summary>
            Called when a slider's 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValue" /></strong>
            property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnIncreaseLarge">
      <summary>
            Called when the 
            <strong><see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /></strong>
            command is called.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnDecreaseLarge">
      <summary>
            Called when 
            <strong><see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /></strong>
            command is called.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnValueChanged(System.Double,System.Double)">
      <summary>
            Called when the value changes.
            </summary>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
      <summary>
            Called when the user starts dragging the thumb.
            </summary>
      <param name="e">The event arguments that contain the event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
      <summary>
            Called when the user drags the thumb.
            </summary>
      <param name="e">The event arguments that contain the event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceSlider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
      <summary>
            Called when the user finishes dragging the thumb.
            </summary>
      <param name="e">The event arguments that contain the event data.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.MoveToPointDuration">
      <summary>
            Gets or sets the duration, in milliseconds, of the animation that
            occurs when a slider is moving to the point that received a contact.
            </summary>
      <remarks>
        <para>The <strong>MoveToPointDuration</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.MoveToPointDurationProperty" /></strong> field.
            </para>
        <para>The default value for <strong>MoveToPointDuration</strong> is 250. 
             Set this property to 0 to disable the animation.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValue">
      <summary>
            Gets the snapped value of the slider, regardless of whether 
            <strong><see cref="P:system.windows.controls.slider.IsSnapToTickEnabled" /></strong>
            is true or an animation is occurring.
            </summary>
      <remarks>The <strong>SnappedValue</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueProperty" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueChanged">
      <summary>
            Occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValue">SnappedValue</see></strong>
            property of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceSlider">SurfaceSlider</see></strong> 
            object has changed. </summary>
      <remarks>The <strong>SnappedValueChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceSlider.SnappedValueChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex">
      <summary>Defines possible relative z-order positions for 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            objects.</summary>
      <remarks>
            The <strong>RelativeScatterViewZIndex</strong> is used as a parameter of the
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SetRelativeZIndex(Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex)">ScatterViewItem.SetRelativeZIndex</see></strong>
            method.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex.Topmost">
      <summary>
            The <strong>ScatterViewItem</strong> object is above all other items.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex.AboveInactiveItems">
      <summary>
            The <strong>ScatterViewItem</strong> object is below all active items but is
            above all inactive items.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex.Bottommost">
      <summary>
            The <strong>ScatterViewItem</strong> object is below all other items.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationStartedEventHandler">
      <summary>Represents the method that will handle
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted">ScatterManipulationStarted</see></strong>
            events.</summary>
      <param name="sender">The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> object that raised the <strong>ScatterManipulationStarted</strong> event.</param>
      <param name="e">A 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationStartedEventArgs">ScatterManipulationStartedEventArgs</see></strong>
            object.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterView">
      <summary>
            Defines a control that implements a surface for the freeform manipulation of
            items on the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>
             A <strong>ScatterView</strong> control is a container for other controls or objects of any type. 
             It provides the framework for moving and manipulating objects on the Microsoft Surface screen. 
             When you add an object to the 
             <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong>
             property of a <strong>ScatterView</strong> control, the event handlers 
             required to move and manipulate the object are established automatically.
            </para>
        <para>
             The 
             <strong><a target="_blank" src="http://msdn.microsoft.com/en-us/system.windows.controls.itemscontrol.items.aspx">Items</a></strong> 
             property is a collection of 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             controls, even if your application does not explicitly create <strong>ScatterViewItem</strong>
             controls when it adds to the <strong>Items</strong> collection.
             When you add an object that is not of type <strong>ScatterViewItem</strong>, 
             the <strong>ScatterView</strong> control first wraps your object in a 
             <strong>ScatterViewItem</strong> control before adding it to the collection.
             The following code example illustrates this behavior.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl1.xaml" lang="xml" />
        <para>
             After a <strong>ScatterViewItem</strong> control has been added to the 
             <strong>Items</strong> collection, users can manipulate it on the Microsoft Surface screen in a variety of ways. 
             By using simple gestures, users can move, rotate, and scale the <strong>ScatterViewItem</strong> control. 
             These manipulations can occur simultaneously.
            </para>
        <para>
             When contacts that are captured by the <strong>ScatterViewItem</strong> control are released, 
             inertia processing is used to gradually slow the movement and rotation. 
             You can control the speed at which the inertia processing occurs through the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRate">ScatterViewItem.DecelerationRate</see></strong>
             and
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRate">ScatterViewItem.AngularDecelerationRate</see></strong>
             properties. 
            </para>
        <para>
             As an item is decelerating, if it encounters the bounds of the 
             <strong>ScatterView</strong> control, it bounces and decelerates more rapidly. 
            </para>
        <para>
             When you use a <strong>ScatterView</strong> control, multiple objects can simultaneously 
             be the target of user interaction. Active items move to the top of the z-order.
            </para>
        <h1 class="heading">Activation and Deactivation</h1>
        <para>
             A <strong>ScatterView</strong> control activates a <strong>ScatterViewItem</strong> control 
             when a user starts manipulating the item. By default, when a <strong>ScatterViewItem</strong> 
             object is activated, it grows slightly larger and displays a shadow beneath it. To disable these effects, set the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShowsActivationEffects">ScatterViewItem.ShowsActivationEffects</see></strong>
             property to <strong>false</strong>.
            </para>
        <para>
             You can change the activation state of a <strong>ScatterViewItem</strong> control programmatically. 
             The 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterView.Activate(System.Object)">Activate</see></strong> and
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterView.Deactivate(System.Object)">Deactivate</see></strong>
             methods and the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">ScatterViewItem.IsActive</see></strong> and
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActive">ScatterViewItem.StaysActive</see></strong>
             properties enable you to control the activation state in the manner that your application requires.
            </para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" />
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.Activate(System.Object)">
      <summary>
            Activates the specified item within a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <param name="item">The item to activate on the <strong>ScatterView</strong> control.</param>
      <example>
        <para>
             In the following example, a randomly selected item contained within a specified 
             <strong>ScatterView</strong> control is activated. 
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl1.xaml.cs" region="ActivateScatterViewItem" title="To activate a ScatterViewItem control" lang="cs" />
        <para>
             You can also change the activation state of an item contained within a 
             <strong>ScatterView</strong> control by setting the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">ScatterViewItem.IsActive</see></strong>
             property.
            </para>
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.Deactivate(System.Object)">
      <summary>
            Deactivates the specified item within a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <param name="item">The item to deactivate on the <strong>ScatterView</strong> control.</param>
      <example>
        <para>
             In the following example, a randomly selected item contained within a specified 
             <strong>ScatterView</strong> control is deactivated. 
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl1.xaml.cs" region="DeactivateScatterViewItem" title="To deactivate a ScatterViewItem control" lang="cs" />
        <para>
             You can also change the activation state of an item contained within a 
             <strong>ScatterView</strong> control by setting the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">ScatterViewItem.IsActive</see></strong>
             property.
            </para>
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.GetContainerForItemOverride">
      <summary>
            Creates or identifies an element that is used to display a new item 
            in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <returns>A new 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            object.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares the specified element to display the specified item.
            </summary>
      <param name="element">The element that is used to display the specified item.</param>
      <param name="item">The item to display.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
      <param name="item">The item to check.</param>
      <returns>
        <strong>true</strong> if the specified item is (or is eligible to be) 
            its own container; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.OnCreateAutomationPeer">
      <summary>
            Creates an automation peer for a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <returns>
             The newly created <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /></strong> 
             object.
            </returns>
      <remarks>
            The object returned by this method is of descendent type
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewAutomationPeer" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Override of the <strong>OnRenderSizeChanged</strong> method.
            </summary>
      <param name="sizeInfo">The event parameters.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterView.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Override of the <strong>OnPropertyChanged</strong> method.
            </summary>
      <param name="e">The event parameters.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterView.TagVisualizationHostAdapter">
      <summary>
            Gets the adapter to use for hosting 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects.
            </summary>
      <remarks>
        <para>
             By default, the <strong>TagVisualizationHostAdapter</strong> property returns a
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewTagVisualizationHostAdapter" /></strong>
             object. 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
             uses this class to control hosting behavior
             when it is used by a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
             control to host visualizations.
            </para>
        <para>
             To customize the hosting behavior of a <strong>ScatterView</strong> control,
             do the following: 
            </para>
        <list type="bullet">
          <item>
             Subclass <strong>ScatterViewTagVisualizationHostAdapter</strong>, overriding the virtual methods as you want. 
            </item>
          <item>
             Subclass <strong>ScatterView</strong>, and override the 
             <strong>TagVisualizationHostAdapter</strong>
             property so that it returns the custom adapter instead of a default one.
            </item>
        </list>
        <para>
            For more information about how to create a custom host adapter, see
            <a href="/ProgrammersGuide/TagVisualization/CustomHostControl/CustomHostControl.htm">Hosting Tag Visualizations in a Custom Host Control</a>.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceListBox">
      <summary>
            Represents a control that implements a list of items that users can select.
            </summary>
      <remarks>
        <note type="caution">
            The <strong><see cref="P:System.Windows.Controls.ListBox.SelectionMode" /></strong> property
            of <strong>SurfaceListBox</strong> does not support
            <strong><see cref="T:System.Windows.Controls.SelectionMode">SelectionMode.Extended</see></strong>.
            If you set <strong>SelectionMode</strong> to <strong>SelectionMode.Extended</strong>,
            a <strong><see cref="T:System.NotSupportedException" /></strong> is thrown. Use
            <strong>SelectionMode.Single</strong> or <strong>SelectionMode.Multiple</strong> only.
            </note>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceListBox</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsItemItsOwnContainerOverride(System.Object)">
      <summary>
            Overridden. Gets a Boolean value that indicates if an item is
            (or is eligible to be) its own <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem" /></strong> object.
            </summary>
      <param name="item">The <strong>SurfaceListBoxItem</strong> to check.</param>
      <returns>
        <strong>true</strong> if the item is eligible to be
            its own <strong>SurfaceListBoxItem</strong> object; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GetContainerForItemOverride">
      <summary>
            Overridden. Creates or identifies the element that is used to display the given item.
            </summary>
      <returns>
            A <strong><see cref="T:System.Windows.DependencyObject" /></strong> object. This object is
            the element that displays the given item.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
      <summary>
            Prepares the specified element to display the given item. 
            </summary>
      <param name="element">The 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem" /></strong>
            object to contain or display the specified <strong>item</strong>.</param>
      <param name="item">The separator object to display within the specified <strong>element</strong>.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBox.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBox.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem">
      <summary>
            Represents an item that users can select from a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceListBox"></see>SurfaceListBox</strong> control.
            
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceListBoxItem</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsPressedProperty">
      <summary>
            Identifies a dependency property that specifies whether a mouse or contact is pressing a list box item.
            </summary>
      <remarks>
            The <strong>IsPressedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsPressed" /></strong> dependency property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown">MouseLeftButtonDown</see></strong>
            routed event is raised on this element.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseRightButtonDown">MouseRightButtonDown</see></strong>
            routed event is raised on this element.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp">MouseLeftButtonUp</see></strong>
            routed event is raised on this element.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseRightButtonUp">MouseRightButtonUp</see></strong>
            routed event is raised on this element.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.LostMouseCapture">LostMouseCapture</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsPressed">
      <summary>
            Determines whether a mouse or contact is pressing a list box item.
            </summary>
      <remarks>The <strong>IsPressed</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceListBoxItem.IsPressedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if 
            a mouse or contact is pressing a list box item; otherwise, <strong>false</strong>. 
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton">
      <summary>
            Represents a button that users can select, but not clear. 
            If a <strong>SurfaceRadioButton</strong> control is part of a group of <strong>SurfaceRadioButton</strong> controls, 
            the group includes functionality to manage switching between selections.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonDown">MouseLeftButtonDown</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when a 
            <strong><see cref="E:System.Windows.UIElement.MouseLeftButtonUp">MouseLeftButtonUp</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse button event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when a <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            event occurs.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when the mouse is no longer captured to this control.
            </summary>
      <param name="e">The mouse event argument object.</param>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceRadioButton</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.OnToggle">
      <summary>
            Overridden. Called when a button is toggled.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceRadioButton.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer">
      <summary>
            Represents an area that users can scroll through and that can contain other visible elements.
            </summary>
      <remarks>
        <para>
          <strong>SurfaceScrollViewer</strong> derives from the Microsoft Windows Presentation Foundation (WPF) 
             <strong><see cref="T:system.windows.controls.ScrollViewer" /></strong>
             class, and adds Microsoft Surface-specific enhancements to the control.
            </para>
        <para>
             Users can flick the content of a <strong>SurfaceScrollViewer</strong> control 
             by placing a contact on the control, rapidly moving the contact a short distance, and then lifting 
             the contact. When the contact it lifted, the content of the <strong>SurfaceScrollViewer</strong> 
             control continues to move. The content then decelerates and comes to a stop.
             You can programmatically stop the movement caused by flicking by calling the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.StopFlick" /></strong> method.
            </para>
        <para>
             You can manipulate the content of a <strong>SurfaceScrollViewer</strong> either by moving a 
             scroll bar (like with the WPF <strong>ScrollViewer</strong>) or by direct contact with the content itself. 
             The ability to manipulate the content directly is called <em>panning</em>. By default, panning is enabled. 
             You can disable it by setting the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsPanningEnabled" /></strong> property 
             to <strong>false</strong>.
            </para>
        <para>
             When users are panning, the content moves in the same direction as the manipulating contact. When users use a scroll bar, 
             the content moves in the opposite direction of the contact (standard control behavior).
            </para>
        <para>
          <strong>SurfaceScrollViewer</strong> uses the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.SurfaceScrollInfo">SurfaceScrollInfo</see></strong> 
             property to provide access to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo" /></strong>
             interface. This interface extends the WPF 
             <strong><see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /></strong>
             interface to provide extra methods for panning.
            </para>
        <para>
          <strong>SurfaceScrollViewer</strong> supports <em>elasticity</em>, which is the ability to 
             scroll beyond the boundaries (top, bottom, left, or right) 
             of the content. As users scroll in this way, the ratio of contact movement to content movement increases. 
             This behavior emulates the stretching of an elastic band; the content appears to be more difficult 
             to move. When the contact is lifted, the content bounces back to its normal boundary.
             You can control the elasticity by setting the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.Elasticity" /></strong> property.
            </para>
        <para>
             The following image shows a <strong>SurfaceScrollViewer</strong> control that is scrolled 
             beyond the top of the content. This action occurs by placing a contact on the content itself 
             and pulling the content down.
            </para>
        <para>
          <img src="/Resources/Images/SurfaceScrollViewerElasticity1.jpg" alt="SurfaceScrollViewer" title="SurfaceScrollViewer" />
        </para>
        <para>
             When the contact is lifted, the content bounces back to its normal boundary.
            </para>
        <para>
          <img src="/Resources/Images/SurfaceScrollViewerElasticity2.jpg" alt="SurfaceScrollViewer" title="SurfaceScrollViewer" />
        </para>
        <para>
             Flicking and elasticity work together. If content is moving because of inertia processing 
             that occurs after the contact is lifted from the surface, the content can move beyond a content boundary 
             during deceleration. When the content reaches its over-scroll limit 
             (which the <strong>Elasticity</strong> property determines), it bounces and decelerates more rapidly 
             until coming to rest on its normal boundary.
            </para>
      </remarks>
      <example>
        <para>
             In the following code example, a <strong>SurfaceScrollViewer</strong> object is declared. It contains a
             <strong><see cref="T:System.Windows.Controls.StackPanel" /></strong> object with four
             <strong><see cref="T:System.Windows.Shapes.Rectangle" /></strong> objects.
            </para>
        <code source="Presentation\Class_SurfaceScrollViewer\Controls\SurfaceScrollViewer1.xaml" title="" lang="xml" />
      </example>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown" /></strong> event.
            </summary>
      <remarks>The <strong>ContactDownEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown" /></strong> event.
            The <strong>ContactDown</strong> event occurs when a contact touches the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp" /></strong> event.
            </summary>
      <remarks>
        <para>The <strong>ContactUpEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp" /></strong> event.
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged" /></strong> event.
            </summary>
      <remarks>The <strong>ContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged" /></strong> event.
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactEnterEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactEnter" /></strong> event.
            </summary>
      <remarks>The <strong>ContactEnterEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactEnter" /></strong> event.
            <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown" /></strong> event.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactLeaveEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactLeave" /></strong> event.
            </summary>
      <remarks>The <strong>ContactLeaveEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactLeave" /></strong> event.
            The <strong>ContactLeave</strong> event occurs when a contact leaves the
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactDownEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactDown" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactDownEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactDown" /></strong> event.
             The <strong>PreviewContactDown</strong> event occurs when a contact touches an element.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactUpEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactUp" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactUpEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactUp" /></strong> event.
             The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactChanged" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactChanged" /></strong> event.
             The <strong>PreviewContactChanged</strong> event occurs when a contact changes any of its attributes, 
             including orientation and position. 
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>GotContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture" /></strong> event.
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCaptureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCapture" /></strong> event.
            </summary>
      <remarks>The <strong>LostContactCaptureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCapture" /></strong> event.
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactTapGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactTapGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactTapGesture" /></strong> event.
             The <strong>PreviewContactTapGesture</strong> event occurs when the Microsoft
             Surface software recognizes a tap gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGesture" /></strong> bubbling event.
             </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactHoldGesture" /></strong> event.
            </summary>
      <remarks>
             The <strong>PreviewContactHoldGestureEvent</strong> field is the identifier 
             for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactHoldGesture" /></strong> event.
             The <strong>PreviewContactHoldGesture</strong> event occurs when the Microsoft
             Surface software recognizes a press-and-hold gesture.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGesture" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactTapGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGesture" /></strong> event.
            The <strong>ContactTapGesture</strong> event occurs when the Microsoft
            Surface software recognizes a tap gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGesture" /></strong> event.
            </summary>
      <remarks>The <strong>ContactHoldGestureEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGesture" /></strong> event.
            The <strong>ContactHoldGesture</strong> event occurs when the Microsoft
            Surface software recognizes a press-and-hold gesture.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is over the control.
            </summary>
      <remarks>The <strong>IsAnyContactOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies an attached property that specifies whether at least one contact
            is directly over the control.
            </summary>
      <remarks>The <strong>IsAnyContactDirectlyOverProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactDirectlyOver" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedProperty">
      <summary>
            Identifies an attached property that specifies whether a control has captured
            at least one contact.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCaptured" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies an attached property that specifies whether a control or its subtree
            have captured at least one contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithinProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedWithin" /></strong> property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.#ctor">
      <summary>
            Initializes a new instance of the <strong>SurfaceScrollViewer</strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves an element. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position. 
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> method that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters an element's boundaries. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves an element's boundaries but still touches the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when an element captures a contact that is touching the Microsoft Surface screen.
            This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture is lost. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a tap gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Microsoft Surface software recognizes
            a press-and-hold gesture. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong> object that contains the event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnIsAnyContactDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactDirectlyOverChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnIsAnyContactCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnIsAnyContactCapturedWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes. This method is a virtual method.
            </summary>
      <param name="e">
            The <strong><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></strong> object that contains the event data.
            </param>
      <remarks>
            The <strong>OnIsAnyContactCapturedWithinChanged</strong> method has no default implementation.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before rendering) if an element's
            <strong><see cref="P:System.Windows.UIElement.RenderSize" /></strong> property
            has changed because of the layout update.
            </summary>
      <param name="info">
            A <strong><see cref="T:System.Windows.SizeChangedInfo" /></strong> value.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.CaptureContact(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Captures the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to capture.
            </param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled and this control must be enabled,
             must allow capturing of contacts, and must allow capturing
             of this particular <em>contact</em>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases the specified contact.
            </summary>
      <param name="contact">
            A <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> object that represents the contact to release.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ReleaseAllContactCaptures">
      <summary>
            Releases all contacts that an element has captured.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GetTemplateChild(System.String)">
      <summary>
            Gets the item in the
            <strong><see cref="P:System.Windows.FrameworkTemplate.VisualTree">VisualTree</see></strong>
            object of an element that corresponds to the element with
            the specified <em>childName</em> in this element's style definition.
            </summary>
      <param name="childName">The name of the child element to find.</param>
      <returns>The child element that is specified in <em>childName</em>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called whenever a dependency property changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnApplyTemplate">
      <summary>
            Overridden. Called whenever a control's template is generated.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsPanningEnabledProperty">
      <summary>
            Identifies a dependency property that specifies whether panning is enabled or not.
            </summary>
      <remarks>
            The <strong>IsPanningEnabledProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsPanningEnabled" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsScrollingProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong> object is being scrolled.
            </summary>
      <remarks>
            The <strong>IsScrollingProperty</strong> field is the identifier for
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsScrolling" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ElasticityProperty">
      <summary>
            Identifies an attached dependency property for bounce padding.
            </summary>
      <remarks>The <strong>ElasticityProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.Elasticity" /></strong> property.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.SetElasticity(System.Windows.DependencyObject,System.Windows.Vector)">
      <summary>
            Sets the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.Elasticity" /></strong> attached property.
            </summary>
      <param name="element">The element to set the <strong>Elasticity</strong> property on.</param>
      <param name="elasticity">The <strong><see cref="T:System.Windows.Vector" /></strong> object of the <strong>Elasticity</strong> property.</param>
      <remarks>
            The <strong>Elasticity</strong> property defines how far users can scroll the content vertically or horizontally 
            beyond the content edge. You can set this property
            to a vector with values that are greater than or equal to 0. These values are interpreted as a factor of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer"></see></strong> size. For example,
            if you set the elasticity to <strong>(0.0, 0.4)</strong>, users can scroll the content vertically beyond the content edge up 
            to 40% of the <strong>SurfaceScrollViewer</strong> height.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GetElasticity(System.Windows.DependencyObject)">
      <summary>
            Reads the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.Elasticity" /></strong> attached property.
            </summary>
      <param name="element">The element to get the <strong>Elasticity</strong> property on.</param>
      <returns>The <strong><see cref="T:System.Windows.Vector" /></strong> object of the <strong>Elasticity</strong> property.</returns>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.HitTestContentWhileScrollingProperty">
      <summary>
            Identifies a dependency property that specifies whether hit testing is enabled on the content while scrolling is in progress.
            </summary>
      <remarks>
            The <strong>HitTestContentWhileScrollingProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.HitTestContentWhileScrolling" /></strong> dependency property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.StopFlick">
      <summary>
            Stops a flick if it is in progress.
            </summary>
      <example>
        <para>
             In the following code example, an event handler for the
             <strong><see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /></strong>
             event checks to see if the content is moving down 
             (the change in the vertical offset is negative). If so,
             the <strong>StopFlick</strong> method is called. As a result, the content of the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong>
             can be flicked in one vertical direction only.
            </para>
        <code source="Presentation\Class_SurfaceScrollViewer\Controls\SurfaceScrollViewer2.xaml.cs" region="ScrollChanged" title="To stop a flick" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.PreviewMouseDown">PreviewMouseDown</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseDown">MouseDown</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The 
            <strong><see cref="T:System.EventArgs" /></strong>
            object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseUp">MouseUp</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The 
            <strong><see cref="T:System.EventArgs" /></strong>
            object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnMouseMove(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.MouseMove">MouseMove</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The 
            <strong><see cref="T:System.EventArgs" /></strong>
            object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Called when an unhandled 
            <strong><see cref="E:System.Windows.UIElement.GotMouseCapture">GotMouseCapture</see></strong>
            routed event
            reaches an element in its route that is derived from this class.
            </summary>
      <param name="e">The 
            <strong><see cref="T:System.EventArgs" /></strong>
            object that contains the event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
      <summary>
            Called when a change in scrolling state is detected, such as a change in scroll position, extent, or viewport size.
            </summary>
      <param name="e">Event object.</param>
      <example>
        <para>
             In the following example, an event handler for the
             <strong><see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged" /></strong>
             event checks to see if the content is moving down 
             (the change in the vertical offset is negative). If so,
             the <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.StopFlick">StopFlick</see></strong> method is called. As a result, the content of the
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong>
             can be flicked in one vertical direction only.
            </para>
        <code source="Presentation\Class_SurfaceScrollViewer\Controls\SurfaceScrollViewer2.xaml.cs" region="ScrollChanged" title="To stop a flick" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCaptured">
      <summary>
            Determines whether an element has captured any contacts.
            </summary>
      <remarks>The <strong>IsAnyContactCaptured</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if this element has captured contacts; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedWithin">
      <summary>
            Determines whether an element or its subtree have captured any contact.
            </summary>
      <remarks>The <strong>IsAnyContactCapturedWithin</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedWithinProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactDirectlyOver">
      <summary>
            Determines whether any contacts are directly over an element.
            </summary>
      <value>
        <strong>true</strong> if contacts are directly over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
      <remarks>
        <para>The <strong>IsAnyContactDirectlyOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactDirectlyOverProperty" /></strong> field.
            </para>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactOver">
      <summary>
            Determines whether any contacts are over an element. 
            </summary>
      <remarks>The <strong>IsAnyContactOver</strong> property is a dependency property 
            that is identified by the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactOverProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if contacts are over the element; otherwise, <strong>false</strong>.
            The default value is <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactsCaptured">
      <summary>
            Gets a collection of contacts that an element has captured.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of the contacts
            that this element has captured.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactsCapturedWithin">
      <summary>
            Gets a collection of contacts that an element or its subtree have captured.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactsDirectlyOver">
      <summary>
            Gets a collection of contacts that are directly over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            directly over this element.
            </value>
      <remarks>
        <para>
            For more information, see
            <strong><see cref="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">Contact.DirectlyOver</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactsOver">
      <summary>
            Gets a collection of contacts that are over an element.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection" /></strong> collection of contacts that are
            over this element.
            </value>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown">
      <summary>
            Occurs when a contact over an element is placed on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>ContactDown</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDownEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp">
      <summary>
            Occurs when a contact over an element leaves the Microsoft Surface screen.
            </summary>
      <remarks>
        <para>The <strong>ContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp" /></strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged">
      <summary>
            Occurs when a contact over an element changes any of its attributes,
            including orientation and position. 
            </summary>
      <remarks>The <strong>ContactChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChangedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong>ContactChanged</strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCapture">LostContactCapture</see></strong> event 
             occurs if a captured contact is released by your application (like the previous code example), 
             or by the Microsoft Surface software (that is, the contact is lifted from the Microsoft Surface screen 
             or moved out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactEnter">
      <summary>
            Occurs when a contact enters an element's boundaries or is placed on the area inside the boundaries.
            </summary>
      <remarks>
        <para>The <strong>ContactEnter</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactEnterEvent" /></strong> field.
            </para>
        <para>The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown">ContactDown</see></strong> event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactLeave">
      <summary>
            Occurs when a contact leaves an element's boundaries or leaves the area over the element.
            </summary>
      <remarks>The <strong>ContactLeave</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactLeaveEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactDown">
      <summary>
            Reports a preview event when a contact is over an element.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactDown</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactDownEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactDown" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactUp">
      <summary>
            Reports a preview event when a contact that is touching an element leaves
            the Microsoft Surface screen. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactUp</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactUpEvent" /></strong> field.
            </para>
        <para>The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
             This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
             physically lifting the contact from the Microsoft Surface screen.
             This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactUp" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactChanged">
      <summary>
            Reports a preview event when a contact that is touching an element
            changes any of its attributes, including orientation and position.
            </summary>
      <remarks>
        <para>The <strong>PreviewContactChanged</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactChangedEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture">
      <summary>
            Occurs when an element captures a contact. 
            </summary>
      <remarks>
        <para>The <strong>GotContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture">GotContactCapture</see></strong> event occurs when an element successfully captures a contact. 
              By handling this event, your application can take action, no matter how the contact was captured.
             </para>
        <para>
              For example, your application might handle multiple events that trigger a contact capture.
              Your application can handle all the specific logic that is related to the capturing of a contact in the
              <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture"></see></strong> event.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong>GotContactCapture</strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCapture">LostContactCapture</see></strong> event occurs if a captured contact is released by your application 
             (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). 
             In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCapture">
      <summary>
            Occurs when a capture is lost. 
            </summary>
      <remarks>
        <para>The <strong>LostContactCapture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.LostContactCaptureEvent" /></strong> field.
            </para>
        <para>
              A <strong>LostContactCapture</strong> event is raised when an element releases a 
              contact that it had previously captured.
             </para>
        <para>
              An element that captures a contact might release the contact on its own, or 
              the Microsoft Surface software might release the contact. The Microsoft Surface software releases a contact if the contact
              is lifted from the Microsoft Surface screen or moves out of sensing bounds. In both situations,
              a <strong>LostContactCapture</strong> event is raised.
             </para>
      </remarks>
      <example>
        <para>
              In this code example, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.GotContactCapture">GotContactCapture</see></strong> event handler 
              scales the element that obtained the contact capture.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GotContact" title="" lang="cs" />
        <para>
              As the contact changes, a <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactChanged">ContactChanged</see></strong> event handler moves the element
              that captured the contact. If the contact moves closer than 50 pixels to the left side
              of the Microsoft Surface screen, the contact is released by calling the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">ReleaseContactCapture</see></strong>
              method.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="ContactChanged" title="" lang="cs" />
        <para>
             The <strong>LostContactCapture</strong> event occurs if a captured contact is released by your application (like the previous code example), 
             or by the system (that is, the contact is lifted from the Microsoft Surface screen or moves out of sensing bounds). In the following code example,
             the event handler restores the element that had captured the contact back to its original size.
             </para>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="LostContact" title="" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactTapGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a tap gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactTapGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactHoldGesture">
      <summary>
            Reports a preview event that occurs when the Microsoft Surface software
            recognizes a press-and-hold gesture. 
            </summary>
      <remarks>
        <para>The <strong>PreviewContactHoldGesture</strong> event is a routed event 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.PreviewContactHoldGestureEvent" /></strong> field.
            </para>
        <para>This event is a tunneling event that is raised before the 
             corresponding <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGesture" /></strong> bubbling event.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a tap gesture.
            </summary>
      <remarks>The <strong>ContactTapGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactTapGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGesture">
      <summary>
            Occurs when the Microsoft Surface software recognizes a press-and-hold gesture.
            </summary>
      <remarks>The <strong>ContactHoldGesture</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ContactHoldGestureEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactDirectlyOverChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsAnyContactCapturedWithinChanged">
      <summary>
            Occurs when the
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty" /></strong>
            dependency property changes.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsPanningEnabled">
      <summary>
            Gets or sets value that indicates whether panning is enabled or not.
            </summary>
      <remarks>
        <para>The <strong>IsPanningEnabled</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsPanningEnabledProperty" /></strong> field.
            </para>
        <para>
             You can manipulate the content of a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong> 
             either by moving a scroll bar (as with the WPF 
             <strong><see cref="T:System.Windows.Controls.ScrollViewer" /></strong>), 
             or by direct contact with the content itself. 
             The ability to manipulate the content directly is called <em>panning</em>. By default, panning is enabled. 
             You can disable it by setting the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsPanningEnabled" /></strong> property 
             to <strong>false</strong>.
            </para>
        <para>
             When users are panning, the content moves in the same direction as the manipulating contact. When users are using a scroll bar, 
             the content moves in the opposite direction of the contact (standard control behavior).
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsScrolling">
      <summary>
            Determines whether a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong>
            object is being scrolled.
            </summary>
      <remarks>The <strong>IsScrolling</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.IsScrollingProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.Elasticity">
      <summary>
            Gets or sets the elasticity of the content.
            </summary>
      <remarks>
        <para>The <strong>Elasticity</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.ElasticityProperty" /></strong> field.
            </para>
        <para>The <strong>Elasticity</strong> property defines how far users can scroll the content vertically or horizontally 
            beyond the content edge. You can set this property
            to a vector with values that are greater than or equal to 0. These values are interpreted as a factor of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer"></see></strong> size. For example,
            if you set the elasticity to <strong>(0.0, 0.4)</strong>, users can scroll the content vertically beyond the content edge up 
            to 40% of the <strong>ScrollViewer</strong> height.</para>
      </remarks>
      <example>
        <para>
             In the following code example, the <strong>Elasticity</strong> property of 
             a <strong>SurfaceScrollViewer</strong> is established in XAML.
            </para>
        <code source="Presentation\Class_SurfaceScrollViewer\Controls\SurfaceScrollViewer4.xaml" title="" lang="xml" />
        <para>
          <strong>Elasticity</strong> can also be set in code.
            </para>
        <code source="Presentation\Class_SurfaceScrollViewer\Controls\SurfaceScrollViewer4.xaml.cs" region="Elasticity" title="To set the Elasticity property" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.HitTestContentWhileScrolling">
      <summary>
            Determines whether hit testing is enabled on the content while scrolling is in progress.
            </summary>
      <remarks>The <strong>HitTestContentWhileScrolling</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.HitTestContentWhileScrollingProperty" /></strong> field.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer.SurfaceScrollInfo">
      <summary>
            Provides the source of scrolling properties
            (Extent, Offset, ViewportSize, and conversion for panning) for this
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong> object and any of its components (like scroll bars).
            </summary>
      <remarks>
        <para>
             The <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceScrollViewer" /></strong> class
             uses the <strong>SurfaceScrollInfo</strong> 
             property to provide access to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.Primitives.ISurfaceScrollInfo" /></strong>
             interface. This interface extends the WPF 
             <strong><see cref="T:System.Windows.Controls.Primitives.IScrollInfo" /></strong>
             interface to provide extra methods for panning.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox">
      <summary>
            Represents a text control where users can enter a password.
            </summary>
      <remarks>
        <para>
             Although the <strong>SurfacePasswordBox</strong> class does not (for security reasons) derive from 
             the <strong><see cref="T:System.Windows.Controls.PasswordBox">System.Windows.Controls.PasswordBox</see></strong> class, 
             <strong>SurfacePasswordBox</strong> does expose corresponding methods, properties, events, and functionality.
            </para>
        <para>
             Like the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceTextBox" /></strong> control, a
             <strong>SurfacePasswordBox</strong> control automatically displays the on-screen keyboard when it gets focus. 
             Unlike a <strong>SurfaceTextBox</strong> control, a <strong>SurfacePasswordBox</strong> control disables 
             keyboard visual feedback. This setting minimizes how much other users can see which keys a user is pressing.
            </para>
        <para>
            This control sets the <strong><see cref="P:Microsoft.Surface.Core.SurfaceKeyboard.IsNativeInputAllowed" /></strong> property to <strong>false</strong>.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardPositioningEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardPositioning">KeyboardPositioning</see></strong>
            event.
            </summary>
      <remarks>The <strong>KeyboardPositioningEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardPositioning" /></strong> event.
            The <strong>KeyboardPositioning</strong> event occurs when a password box determines
            how to display the on-screen keyboard when the password box receives focus.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardLayoutProperty">
      <summary>
            Identifies a dependency property that specifies what keyboard layout
            that a password box uses.
            </summary>
      <remarks>
            The <strong>KeyboardLayoutProperty</strong> field is the identifier
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardLayout" /></strong> dependency property.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.#ctor">
      <summary>
            Initializes a new instance of the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox">SurfacePasswordBox</see></strong>
            class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.MaxLengthProperty">
      <summary>
            Identifies an attached property that indicates the maximum length of a password, in characters, that a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox">SurfacePasswordBox</see></strong>
            object can contain.
            </summary>
      <remarks>
            The <strong>MaxLengthProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.MaxLength" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordCharProperty">
      <summary>
            Identifies an attached property that indicates the masking character that a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox">SurfacePasswordBox</see></strong>
            control uses.
            </summary>
      <remarks>
            The <strong>PasswordCharProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChar" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChangedEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChanged">PasswordChanged</see></strong>
            event.
            </summary>
      <remarks>The <strong>PasswordChangedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChanged" /></strong> event.
            The <strong>PasswordChanged</strong> event occurs when the password in the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox">SurfacePasswordBox</see></strong> 
            control changes.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.Clear">
      <summary>
            Clears the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.Password">Password</see></strong>
            property.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.Paste">
      <summary>
            Replaces the current contents of a password box with the contents of the Clipboard.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.SelectAll">
      <summary>
            Selects the entire contents of a password box.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnApplyTemplate">
      <summary>
            Here when the template changes.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Here when a dependency property changes.
            </summary>
      <param name="e">Event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
      <summary>
            Called when the control gets focus.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over the element is placed on the surface. This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over the element leaves the surface. This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact over the element changes position or its orientation relative to the element.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact is over the element.  This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnPreviewContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact leaves the element.  This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnPreviewContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event when a contact touching the element
            changes position or its orientation relative to the element.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactEnter(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact enters the element boundary.  This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactLeave(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact leaves the element boundary but is still touching the surface.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact touching the surface is captured by the element.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when a contact capture lost.  This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnPreviewContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Tap gesture is recognized.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnPreviewContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Reports a preview event that occurs when the Press-and-hold gesture is recognized.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactTapGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Tap gesture is recognized.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnContactHoldGesture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Occurs when the Press-and-hold gesture is recognized.
            This is a virtual method.
            </summary>
      <param name="e">
            The <b><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></b> that contains event data.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
      <summary>
            Occurs after a layout update (before render) if the element's <b><see cref="P:System.Windows.UIElement.RenderSize" /></b>
            has changed as a result of the layout update.
            </summary>
      <param name="info">
            A <b><see cref="T:System.Windows.SizeChangedInfo" /></b> value.
            </param>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardPositioning">
      <summary>
            Occurs when a password box is determining how to display the
            on-screen keyboard when the password box receives focus.
            </summary>
      <remarks>
        <para>The <strong>KeyboardPositioning</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardPositioningEvent" /></strong> field.
            </para>
        <para>
             When a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox" /></strong>
             control is activated, it displays the 
             <strong><see cref="T:Microsoft.Surface.Core.SurfaceKeyboard" /></strong>
             control if it is not already visible. <strong>SurfaceKeyboard</strong> automatically 
             calculates a display position and orientation, based on the position and orientation of the 
             <strong>SurfacePasswordBox</strong> control.
            </para>
        <para>
             When the keyboard is positioned, it raises the <strong>KeyboardPositioning</strong> event.
             The 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardPositioningEventArgs" /></strong>
             object that is passed to this event contains the calculated position. Your application can modify the 
             keyboard position by setting properties of this object.
            </para>
      </remarks>
      <example>
        <para>
             In this code example, the handler for the <strong>KeyboardPositioning</strong> event
             positions the <strong>SurfaceKeyboard</strong> control directly beneath the control that activated it.
            </para>
        <code source="Core\Class_SurfaceKeyboard\SurfaceWindow1.xaml.cs" region="SurfaceBox_KeyboardPositioning" title="To handle the KeyboardPositioning event" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardLayout">
      <summary>
            Gets or sets the keyboard layout that a password box uses.
            </summary>
      <remarks>The <strong>KeyboardLayout</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.KeyboardLayoutProperty" /></strong> field.
            </remarks>
      <value>A
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.KeyboardLayout">KeyboardLayout</see></strong>
            enumeration value that specifies what keyboard layout to use. By default, the property
            is <strong>KeyboardLayout.Alphanumeric</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.MaxLength">
      <summary>
            Gets or sets the maximum length of passwords, in characters, that a password box can handle.
            </summary>
      <remarks>
        <para>The <strong>MaxLength</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.MaxLengthProperty" /></strong> field.
            </para>
        <para>
             This property restricts only passwords that a user enters manually; 
             it has no effect on programmatic manipulation of the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.Password" /></strong> property.
            </para>
        <para>
             The default value for <strong>MaxLength</strong> is zero.
             A value of zero means that no length limit is imposed.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.Password">
      <summary>
            Gets or sets the password that a password box currently contains.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChar">
      <summary>
            Gets or sets the masking character that is used to conceal characters in the
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox" /></strong>.
            </summary>
      <remarks>
        <para>The <strong>PasswordChar</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordCharProperty" /></strong> field.
            </para>
        <para>
             When text is entered into a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox" /></strong>, 
             the masking character that this property specifies is echoed in the password input field, 
             rather than the actual password itself. This masking helps prevent passwords from being exposed 
             to other people when a user enter the password.
            </para>
        <para>
             The default value for this property is a bullet character.
            </para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChanged">
      <summary>
            Occurs when the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.Password" /></strong> property is changed.
            </summary>
      <remarks>The <strong>PasswordChanged</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.SurfacePasswordBox.PasswordChangedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior">
      <summary>
            Defines the action to take for a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object when its
            contact is removed from a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object.
            </summary>
      <remarks>
        <para>
            You can implement a custom tag removal behavior. The following example demonstrates this technique.
            </para>
      </remarks>
      <example>
        <code source="Presentation\Classes_TagVisualizations\Window1.xaml.cs" region="TagVisual2" title="To implement a custom tag removal behavior" lang="cs" />
      </example>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection" />
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior.Disappear">
      <summary>
        <para>When the tag is removed, the visualization disappears
            immediately.</para>
        <para>By default, the object lifetime persists for
            500 milliseconds after the tag is removed. (You can change this behavior
            by setting the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout">LostTagTimeout</see></strong> property.) 
            If the tag is re-added within that interval (500 milliseconds), the 
            visualization reappears at the new location, and the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved">VisualizationMoved</see></strong>
            event occurs. If the tag is
            not re-added, at the end of the interval, the visualization
            is removed from the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object and the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">VisualizationRemoved</see></strong>
            event occurs.</para>
      </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior.Fade">
      <summary>
        <para>When the tag is removed, the visualization gradually fades.</para>
        <para>The default fade duration is 1,500 milliseconds. (You can change
            this duration by setting the <strong>LostTagTimeout</strong> property.) 
            If the tag is re-added
            within that interval (1,500 milliseconds), the visualization reappears at the new
            location, and the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved">VisualizationMoved</see></strong>
            event occurs. If the tag is
            not re-added, at the end of the interval, the visualization
            is removed from the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object and the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">VisualizationRemoved</see></strong>
            event occurs.</para>
      </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior.Wait">
      <summary>
        <para>When the tag is removed, the visualization remains
            until the tag is re-added. When the tag is re-added,
            the visualization moves to the new tag location.</para>
        <para>By default, the object waits forever after the tag is lost. 
            If you set the <strong>LostTagTimeout</strong> property to a
            finite value, the following behavior occurs:</para>
        <para>
          <list type="bullet">
            <item>
              <description>If the tag is re-added within the specified 
            interval, the visualization reappears at the new location, and the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved">VisualizationMoved</see></strong>
            event occurs. </description>
            </item>
            <item>
              <description>If the tag is not re-added,
            at the end of the interval, the visualization is
            removed from the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object and the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">VisualizationRemoved</see></strong>
            event occurs.</description>
            </item>
          </list>
        </para>
      </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior.Persist">
      <summary>
        <para>When the tag is removed, the visualization remains.
            If an user puts the same tag on the visualizer again, 
            a new visualization is created.</para>
        <para>The default time-out period is 500 milliseconds after
            the tag is lost. (You can change this interval by setting
            the <strong>LostTagTimeout</strong> property.) If the tag is re-added within
            the time-out period, the existing visualization is moved
            to the new tag location (similar to the <strong>Wait</strong> behavior)
            instead of creating a new visualization.</para>
      </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualization">
      <summary>
            Represents content that appears in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong> 
            control when a 
            <a href="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a>
            is put on a Microsoft Surface screen.
            </summary>
      <remarks>
        <para>
            The <strong>TagVisualization</strong> object contains several properties that your application can 
            initialize from the corresponding values of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>
            object:
            </para>
        <para>
          <list type="bullet">
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTag" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior" />
              </strong>
            </item>
            <item>
              <strong>
                <see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientation" />
              </strong>
            </item>
          </list>
        </para>
        <note type="caution">
            Your application should not try to change the 
            <strong><see cref="P:System.Windows.UIElement.RenderTransform" /></strong>
            property of a <strong>TagVisualization</strong> object. 
            This property is managed  by the owning <strong>TagVisualizer</strong> object, 
            and it is used to keep the visualization properly tracked to the tagged object.
            </note>
        <para>
            For more information about how 
            <strong>TagVisualizer</strong>, <strong>TagVisualization</strong>, and
            <strong>TagVisualizationDefinition</strong> work together to produce visible reactions
            to tagged objects, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>.
            </para>
        <h1 class="heading">TagVisualizer and TagVisualization Events</h1>
        <para>
             When a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong> control 
             creates a <strong>TagVisualization</strong> object and adds it to the visual tree, the
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded">TagVisualizer.VisualizationAdded</see></strong> 
             event is raised, followed by the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.GotTag">GotTag</see></strong>
             event.
            </para>
        <para>
             When the tagged physical object is removed from the Microsoft Surface screen, the <strong>TagVisualization</strong> 
             raises the
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTag" /></strong>
             event. If the physical object is replaced on the surface that the 
             <strong>TagVisualizer</strong> object controls before the time that is specified by 
             <strong>LostTagTimeout</strong> has expired, the 
             <strong>TagVisualization</strong> again raises the <strong>GotTag</strong> event. 
             In this case, the <strong>TagVisualizer</strong> object does not raise the 
             <strong>VisualizationAdded</strong> event again because the 
             <strong>TagVisualization</strong> object is still contained in the visual tree.
            </para>
        <para>
             When the tagged physical object is removed from the screen and remains off the 
             screen beyond the expiration of <strong>LostTagTimeout</strong>, the <strong>TagVisualizer</strong>
             control removes the <strong>TagVisualization</strong> object from the visual tree and raises the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">TagVisualizer.VisualizationRemoved</see></strong> 
             event.
            </para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" />
      <seealso href="/Samples/HowDoIExamples/CreatingTagVisualization.htm">Creating a Tag Visualization</seealso>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.OffsetOriginProperty">
      <summary>
            Identifies a dependency property that specifies the relative
            origin for a visualization.
            </summary>
      <remarks>
            The <strong>OffsetOriginProperty</strong> field is the identifier 
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OffsetOrigin" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTagProperty">
      <summary>
            Identifies a dependency property that specifies the offset of a
            visualization's center from the tag's location.
            </summary>
      <remarks>
            The <strong>PhysicalCenterOffsetFromTagProperty</strong> field is the identifier 
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTag" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTagProperty">
      <summary>
            Identifies a dependency property that specifies the offset of a
            visualization's orientation corner from the tag's orientation.
            </summary>
      <remarks>
            The <strong>OrientationOffsetFromTagProperty</strong> field is the identifier 
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.CenterProperty">
      <summary>
            Identifies the coordinates of the center of a visualization.
            </summary>
      <remarks>
            The <strong>CenterProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationProperty">
      <summary>
            Identifies the orientation of a visualization.
            </summary>
      <remarks>
            The <strong>OrientationProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientationProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            visualization rotates with its tag.
            </summary>
      <remarks>
            The <strong>UsesTagOrientationProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientation" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehaviorProperty">
      <summary>
            Identifies a dependency property that specifies how a visualization 
            behaves when its tag is removed.
            </summary>
      <remarks>
            The <strong>TagRemovedBehaviorProperty</strong> field is the identifier for 
            the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeoutProperty">
      <summary>
            Identifies a dependency property that specifies how long a visualization
            remains in the visual tree after its tracked tag contact is lost.
            </summary>
      <remarks>The <strong>LostTagTimeoutProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.ActualLostTagTimeoutProperty">
      <summary>
            Identifies a dependency property that specifies how long a visualization
            remains in the visual tree after its tracked tag contact is lost.
            </summary>
      <remarks>
            The <strong>ActualLostTagTimeoutProperty</strong> field is the identifier for the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.ActualLostTagTimeout" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.MovedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.Moved">Moved</see></strong>
            event. </summary>
      <remarks>The <strong>MovedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.Moved" /></strong> event.
            The <strong>Moved</strong> event occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object is moved because its tracked contact moved on the Microsoft Surface screen.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTag">LostTag</see></strong>
            event.
            </summary>
      <remarks>The <strong>LostTagEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTag" /></strong> event.
            The <strong>LostTag</strong> event occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object loses its tracked contact.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualization.GotTagEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.GotTag">GotTag</see></strong>
            event.
            </summary>
      <remarks>The <strong>GotTagEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualization.GotTag" /></strong> event.
            The <strong>GotTag</strong> event occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            objects obtains a tracked contact.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.#ctor">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.Matches(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Gets a value that indicates whether this visualization matches the specified contact.
            </summary>
      <remarks>
             The default implementation of the <strong>Matches</strong> method returns <strong>true</strong>  if the
             <strong><see cref="P:Microsoft.Surface.Presentation.Contact.IsTagRecognized" /></strong>
             property of the specified contact is <strong>true</strong> and the
             <strong><see cref="P:Microsoft.Surface.Presentation.Contact.Tag" /></strong>
             property of the specified contact exactly matches the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.VisualizedTag" /></strong>
             property of this instance.
            </remarks>
      <param name="contact">The contact to check.</param>
      <returns>
        <strong>true</strong> if this visualization matches the contact; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.OnLostTag(System.Windows.RoutedEventArgs)">
      <summary>
            Called when a visualization loses its tracked contact.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.OnGotTag(System.Windows.RoutedEventArgs)">
      <summary>
            Called when a visualization obtains a tracked contact.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.OnMoved(System.Windows.RoutedEventArgs)">
      <summary>
            Called when a visualization moves.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the VisualParent changes.
            </summary>
      <param name="oldParent">The previous VisualParent.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Called when a dependency property changes.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.OnCreateAutomationPeer">
      <summary>
            Creates an automation peer for the control.
            </summary>
      <returns>The newly created 
            <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer">AutomationPeer</see></strong> object.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualization.Microsoft#Surface#Presentation#Manipulations#IManipulator#GetPosition(System.Windows.UIElement)">
      <summary>
            Gets the position of the manipulator, relative to the
            specified element.
            </summary>
      <param name="relativeTo">The element relative to which to get the manipulator's position.
            May be null, in which case the returned point will be in the manipulator's container's coordinates.</param>
      <returns>The position of the manipulator relative to the specified element.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OffsetOrigin">
      <summary>
            Gets or sets the relative origin of a visualization.
            </summary>
      <remarks>
        <para>The <strong>OffsetOrigin</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.OffsetOriginProperty" /></strong> field.
            </para>
        <para>
            This property enables your application to determine what part of a visualization
            corresponds to the coordinate that is identified by the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center">Center</see></strong> property. It defaults to (0.5, 0.5),
            meaning that the physical center of the visualization is placed at the point that
            <strong>Center</strong> identifies. If you set <strong>OffsetOrigin</strong> to some other value, the visualization will be placed
            differently. For example, a value of (0.0, 0.0) places the visualization's upper-left
            corner at the <strong>Center</strong> location.
            </para>
        <para>
            If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object
            created the <strong>TagVisualization</strong> control, the initial (default) value of 
            <strong>OffsetOrigin</strong> is the same as the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OffsetOrigin">TagVisualizationDefinition.OffsetOrigin</see></strong>
            property.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTag">
      <summary>
            Gets or sets the distance, in inches, that the center of this element should
            be offset from the center of the tagged object. 
            </summary>
      <remarks>
        <para>The <strong>PhysicalCenterOffsetFromTag</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTagProperty" /></strong> field.
            </para>
        <para>
            This property enables your application to compensate for tags that are not 
            placed in the center of physical objects. For example, you might create 
            customer cards that require the horizontal center of the printed tag to be 1 inch away 
            from the horizontal center of the physical card, while aligned to the vertical center. 
            Your application can then set <strong>PhysicalCenterOffsetFromTag</strong> to 
            <strong>Vector(1.0, 0)</strong> to enable your 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> control
            to be centered correctly around the physical card.
            </para>
        <para>
            If you need to convert from a physical offset to a pixel offset, you can use the
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.PhysicalScaleTransform" /></strong>
            property of the
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurface.PrimarySurfaceDevice">InteractiveSurface.PrimarySurfaceDevice</see></strong>
            object.
            </para>
        <para>
            The default value of the <strong>PhysicalCenterOffsetFromTag</strong> property is <strong>0,0</strong>.
            If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object
            created the <strong>TagVisualization</strong> control, the initial (default) value of 
            <strong>PhysicalCenterOffsetFromTag</strong> is the same as the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.PhysicalCenterOffsetFromTag">TagVisualizationDefinition.PhysicalCenterOffsetFromTag</see></strong>
            property.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Center">
      <summary>
            Gets the position of the center of this element within its parent 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object. </summary>
      <remarks>
        <para>The <strong>Center</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.CenterProperty" /></strong> field.
            </para>
            The value of the <strong>Center</strong> property is adjusted by the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.PhysicalCenterOffsetFromTag">PhysicalCenterOffsetFromTag</see></strong>
            property.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag">
      <summary>
            Gets or sets the offset of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object's orientation from the orientation of the tag that is being tracked.
            </summary>
      <remarks>
        <para>The <strong>OrientationOffsetFromTag</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTagProperty" /></strong> field.
            </para>
        <para>
            The <strong>OrientationOffsetFromTag</strong> property is measured in degrees. 
            The default value is 0.
            </para>
        <para>
            This property enables your application to compensate for tags that are not oriented 
            in the same way as the physical object that they reside on. For example, you might 
            create customer cards that require the orientation of the printed tag to be 
            rotated 90 degrees from the orientation of the physical card. Your application 
            can then set <strong>OrientationOffsetFromTag</strong> to <strong>90.0</strong> to enable your 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            control to be correctly aligned.
            </para>
        <para>
             If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object 
             created the <strong>TagVisualization</strong> control, the initial (default) value of 
             <strong>OrientationOffsetFromTag</strong> is the same as the value of the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.OrientationOffsetFromTag">TagVisualizationDefinition.OrientationOffsetFromTag</see></strong>
             property.
            </para>
        <para>
            If the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientation" /></strong>
            property is set to <strong>false</strong>, the value of <strong>OrientationOffsetFromTag</strong> 
            is ignored, and the <strong>TagVisualization</strong> control has an
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong> value of 0.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation">
      <summary>
            Gets the orientation of this element within its parent 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object. </summary>
      <remarks>
        <para>The <strong>Orientation</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationProperty" /></strong> field.
            </para>
        <para>The <strong>Orientation</strong> property is measured in degrees.</para>
        <para>
            If the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientation" /></strong>
            property is set to <strong>true</strong>, <strong>Orientation</strong>
            is adjusted by the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag" /></strong>
            property. 
            </para>
        <para>
            If <strong>UsesTagOrientation</strong> is set to <strong>false</strong>, 
            the value of <strong>OrientationOffsetFromTag</strong> is ignored, and 
            <strong>Orientation</strong> always returns 0.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientation">
      <summary>
            Gets or sets a Boolean value that determines whether a visualization 
            is rotated to match a tag's orientation. 
            </summary>
      <remarks>
        <para>The <strong>UsesTagOrientation</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.UsesTagOrientationProperty" /></strong> field.</para>
        <para>
             By default, the <strong>UsesTagOrientation</strong> property is <strong>true</strong>.
            </para>
        <para>
             If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object
             created the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> control,
             the initial (default) value of <strong>UsesTagOrientation</strong> is the same as the value of the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.UsesTagOrientation">TagVisualizationDefinition.UsesTagOrientation</see></strong>
             property.
            </para>
        <para>
            If <strong>UsesTagOrientation</strong> is <strong>false</strong>, the value of
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.OrientationOffsetFromTag" /></strong>
            is ignored, and 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Orientation" /></strong> 
            always returns 0.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior">
      <summary>
            Gets or sets a value that determines what happens to a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object when the contact that it corresponds to is removed.  
            </summary>
      <remarks>
        <para>The <strong>TagRemovedBehavior</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehaviorProperty" /></strong> field.
            </para>
        <para>
             By default, the <strong>TagRemovedBehavior</strong> property is <strong>Disappear</strong>.
            </para>
        <para>
             If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object
             created the <strong>TagVisualization</strong> control, the initial (default) value of 
             <strong>TagRemovedBehavior</strong> is the same as the value of the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.TagRemovedBehavior">TagVisualizationDefinition.TagRemovedBehavior</see></strong>
             property.
            </para>
        <para>
            You can implement a custom tag removal behavior. The following code example demonstrates this technique.
            </para>
      </remarks>
      <example>
        <code source="Presentation\Classes_TagVisualizations\Window1.xaml.cs" region="TagVisual2" title="To implement a custom tag removal behavior" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout">
      <summary>
            Gets or sets how long, in milliseconds, a visualization should
            remain in the visual tree after it loses its tracked contact.
            </summary>
      <remarks>
        <para>The <strong>LostTagTimeout</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeoutProperty" /></strong> field.
            </para>
        <para>
             By default, the <strong>LostTagTimeout</strong> property is <strong>double.NaN</strong>,
             which indicates that the time-out value is the default value based on the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior">TagRemovedBehavior</see></strong> property.
             In this case, you can obtain the actual value that is used for the time-out operation by examining the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.ActualLostTagTimeout" /></strong> property.
            </para>
        <para>
            If a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> control
            created the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object, the initial (default) value of <strong>LostTagTimeout</strong> is the same as the value of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition.LostTagTimeout">TagVisualizationDefinition.LostTagTimeout</see></strong>
            property.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.ActualLostTagTimeout">
      <summary>
            Gets how long, in milliseconds, a visualization will
            remain in the visual tree after it loses its tracked contact.
            </summary>
      <remarks>
        <para>The <strong>ActualLostTagTimeout</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.ActualLostTagTimeoutProperty" /></strong> field.
            </para>
        <para>
             This property returns the actual time-out value that is used for this visualization.
             It differs from the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout" /></strong> property, which
             can return <strong>double.NaN</strong> 
             to indicate that the time-out value is the default value based on the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior" /></strong> property.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.VisualizedTag">
      <summary>
            Gets data for the tag that is being visualized.
            </summary>
      <remarks>
            The <strong>VisualizedTag</strong> information is set 
            at initialization time and is always available,
            even if the tag leaves the Microsoft Surface screen.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TrackedContact">
      <summary>
            Gets the tagged contact that is currently controlling the visualization's movement.
            </summary>
      <remarks>
            The <strong>TrackedContact</strong> property returns <strong>null</strong> if the visualization currently has no contact 
            (for example, after it loses its contact but before it is removed from the visualizer).
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualization.Visualizer">
      <summary>
            Gets the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            object that owns this visualization.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualization.Moved">
      <summary>
            Occurs when a visualization is moved because its tracked contact
            moves on the Microsoft Surface screen.
            </summary>
      <remarks>The <strong>Moved</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.MovedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTag">
      <summary>
            Occurs when a visualization loses its tracked contact.
            </summary>
      <remarks>
        <para>The <strong>LostTag</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagEvent" /></strong> field.
            </para>
        <para>
            The <strong>LostTag</strong> event occurs as soon as a tag is removed from the Microsoft Surface screen.
            The associated <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> object 
            can still remain in the visual tree,
            depending on the values of the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.LostTagTimeout" /></strong>
            and
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualization.TagRemovedBehavior" /></strong>
            properties.
            </para>
        <para>
            The <strong>LostTag</strong> event is typically the basis of implementing a custom
            tag removal behavior, as the following code example illustrates.
            </para>
        <para>
            For more information about events that are related to adding and removing tagged physical objects, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>.
            </para>
      </remarks>
      <example>
        <code source="Presentation\Classes_TagVisualizations\Window1.xaml.cs" region="TagVisual2" title="To implement a custom tag removal behavior" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualization.GotTag">
      <summary>
            Occurs when a visualization obtains a tracked contact.
            </summary>
      <remarks>
        <para>The <strong>GotTag</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualization.GotTagEvent" /></strong> field.
            </para>
        <para>
            The <strong>GotTag</strong> event is raised after the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            creates a <strong>TagVisualization</strong> and adds it to the visual tree.
            For more information about events that are related to adding and removing tagged physical objects, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection">
      <summary>
            Represents a collection of 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            objects that belong to a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control.
            </summary>
      <remarks>
        <para>
             When you add a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong> object
             to a <strong>TagVisualizationDefinitionCollection</strong> collection, you can add a definition 
             that conflicts with another definition that is already present in the collection. 
             In this situation, to determine which definition to use for a particular tag value, 
             the first matching definition in the collection is selected.
            </para>
        <para>
             For example, in the following code example, two 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ByteTagVisualizationDefinition" /></strong> 
             instances with the same value are added to the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizer.Definitions" /></strong>
             property of a
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
             control.
            </para>
        <code source="Presentation\Classes_TagVisualizationsHost\SurfaceWindow1.cs" region="DefinitionConflict" title="" lang="cs" />
        <para>
             When a tagged object with a value of 192 is placed on the Microsoft Surface screen, 
             the visualization that is created is represented by <i>Visualization1.xaml</i>
             because that definition is the first matching definition in the collection.
            </para>
      </remarks>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" />
      <seealso href="/Samples/HowDoIExamples/CreatingTagVisualization.htm">Creating a Tag Visualization</seealso>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection.ClearItems">
      <summary>
            Clears all items from a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection">TagVisualizationDefinitionCollection</see></strong>
            collection.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection.InsertItem(System.Int32,Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition)">
      <summary>
            Inserts a specified definition into a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection">TagVisualizationDefinitionCollection</see></strong>
            collection at the specified index.
            </summary>
      <param name="index">The index to insert the definition at.</param>
      <param name="item">The definition to insert.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection.RemoveItem(System.Int32)">
      <summary>
            Removes the definition at the specified index in a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection">TagVisualizationDefinitionCollection</see></strong>
            collection.
            </summary>
      <param name="index">The index of the definition to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection.SetItem(System.Int32,Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition)">
      <summary>
            Sets a specified definition at the specified index in a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection">TagVisualizationDefinitionCollection</see></strong>
            collection.
            </summary>
      <param name="index">The index to set the definition at.</param>
      <param name="item">The definition to set.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizationEventArgs">
      <summary>
            Specifies event arguments for tag visualizations.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizationEventArgs.Visualization">
      <summary>
            Gets the visualization that is involved with the event.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">
      <summary>
            Defines a content control that automatically displays visualization objects
            when a tag is placed on the control.
            </summary>
      <remarks>
        <para>
             The <strong>TagVisualizer</strong> control reacts to one or more tagged physical 
             objects that are placed on the Microsoft Surface screen by creating and displaying
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
             objects. A <strong>TagVisualization</strong> object represents the actual user interface that users see.
             A <strong>TagVisualizer</strong> control automatically tracks the motion of a tagged
             object and moves the <strong>TagVisualization</strong> object with the physical object.
            </para>
        <para>
            The <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizer.Definitions" /></strong> 
            property of a <strong>TagVisualizer</strong> control is a collection of 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            objects that define which tagged physical objects
            should trigger the creation of a <strong>TagVisualization</strong> object. 
            Other details about the display of a visualization are also part of a
            <strong>TagVisualizationDefinition</strong> object.
            </para>
        <para>
            For more information about how 
            <strong>TagVisualizer</strong>, <strong>TagVisualization</strong>, and
            <strong>TagVisualizationDefinition</strong> work together to produce visible reactions
            to tagged physical objects, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>.
            </para>
        <para>
            For information about events that are related to adding and removing tagged physical objects, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>.
            </para>
      </remarks>
      <example>
        <para>
            The <strong>Definitions</strong> property of a <strong>TagVisualizer</strong> can be
            <see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">populated in code</see>,
            or in XAML markup as the following example illustrates.
            </para>
        <code source="Presentation\Classes_TagVisualizations\SimpleTagVisualizer.xaml" title="" lang="xml" />
      </example>
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" />
      <seealso cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinitionCollection" />
      <seealso href="/ProgrammersGuide/TagVisualization/TagVisualization.htm">Using Tag Visualizations</seealso>
      <seealso href="/Samples/HowDoIExamples/CreatingTagVisualization.htm">Creating a Tag Visualization</seealso>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty">
      <summary>
            Identifies an attached dependency property that specifies whether an element should
            be used to host the visualizations of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control. 
            </summary>
      <remarks>
        <para>
            An element that sets this property to <strong>true</strong> must 
            derive from
            <strong><see cref="T:System.Windows.UIElement" /></strong>  and must implement the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ITagVisualizationHost" /></strong>
            interface; otherwise, an exception is thrown. 
            </para>
        <para>
            Controls that include support for hosting visualizations include 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas" /></strong>
            and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>.
            You can also
            <a href="/ProgrammersGuide/TagVisualization/CustomHostControl/CustomHostControl.htm">create your own custom host control</a>.
            </para>
        <para>
            Any control that is used to host the visualizations of a <strong>TagVisualizer</strong> must be within
            the visual tree (that is, somewhere in the content) of the <strong>TagVisualizer</strong>. 
            If not, setting this property has no effect.
            </para>
        <para>
            Your application can set this property to <strong>true</strong> on multiple elements simultaneously. 
            However, only one element at a time can act as the visualization host. 
            The parent <strong>TagVisualizer</strong> control tracks which child elements 
            set this property, or which are added or removed from the visual tree. 
            Only the most recent child element to set this property to <strong>true</strong> 
            will be the visualization host. If a child element is removed or its 
            <strong>IsTagVisualizationHostProperty</strong> attached property is set to 
            <strong>false</strong>, the <strong>TagVisualizer</strong> 
            reverts to the previous host. If there are no more explicit child elements to act as 
            the visualization host, <strong>TagVisualizer</strong> uses a default host of type 
            <strong>TagVisualizerCanvas</strong>.
            </para>
      </remarks>
      <example>
        <para>
             In this code example, a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
             control is used to host the visualizations of a <strong>TagVisualizer</strong>.
            </para>
        <code source="Presentation\Classes_TagVisualizationsHost\SurfaceWindow1.xaml" title="XAML" lang="xml" />
        <para>
             You can also set this property in code by using the static
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.SetIsTagVisualizationHost(System.Windows.DependencyObject,System.Boolean)">SetIsTagVisualizationHost</see></strong>
             method.
            </para>
        <code source="Presentation\Classes_TagVisualizationsHost\SurfaceWindow1.cs" region="SetIsTagVisualizationHost" lang="cs" />
      </example>
      <seealso href="/ProgrammersGuide/TagVisualization/TagVisualization.htm">Using Tag Visualizations</seealso>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.SetIsTagVisualizationHost(System.Windows.DependencyObject,System.Boolean)">
      <summary>
            Sets the value of the 
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty" /></strong>
            attached property.
            </summary>
      <remarks>
        <para>
            An element that sets the <strong>SetIsTagVisualizationHost</strong> property to <strong>true</strong> must 
            derive from
            <strong><see cref="T:System.Windows.UIElement" /></strong> and implement the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ITagVisualizationHost" /></strong>
            interface. 
            </para>
        <para>
            Multiple elements can set this property to <strong>true</strong>. 
            However, only one element at a time can act as the visualization host.
            For more information, see the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty" /></strong>
            attached property.
            </para>
      </remarks>
      <param name="element">The element that the property should be set on.</param>
      <param name="isHost">
        <strong>true</strong> to enable visualization hosting on <i>element</i>;
             <strong>false</strong> to disable visualization hosting on <i>element</i>.
            </param>
      <example>
        <para>
             In this code example, a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
             control is used to host the visualizations of a <strong>TagVisualizer</strong> control.
            </para>
        <code source="Presentation\Classes_TagVisualizationsHost\SurfaceWindow1.cs" region="SetIsTagVisualizationHost" lang="cs" />
        <para>
             You can also set this property in markup.
            </para>
        <code source="Presentation\Classes_TagVisualizationsHost\SurfaceWindow1.xaml" title="XAML" lang="xml" />
      </example>
      <seealso href="/ProgrammersGuide/TagVisualization/TagVisualization.htm">Using Tag Visualizations</seealso>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.GetIsTagVisualizationHost(System.Windows.DependencyObject)">
      <summary>
             Gets the value of the 
             <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty" /></strong>
             attached property.
            </summary>
      <param name="element">
             The element to get the value of <strong>IsTagVisualizationHostProperty</strong> for.
            </param>
      <returns>
        <strong>true</strong> if the specified <i>element</i> has enabled
             visualization hosting; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
            Multiple elements can have the <strong>GetIsTagVisualizationHost</strong> property set to <strong>true</strong> simultaneously. 
            However, only one element at a time can act as the visualization host.
            For more information, see the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty" /></strong>
            attached property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationInitializedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationInitialized">PreviewVisualizationInitialized</see></strong>
            event.
            </summary>
      <remarks>
            The <strong>PreviewVisualizationInitializedEvent</strong> field is the identifier for the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationInitialized" /></strong> event.
            The <strong>PreviewVisualizationInitialized</strong> event occurs
            when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object is automatically created based on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitialized" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationAddedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationAdded">PreviewVisualizationAdded</see></strong>
            event. 
            </summary>
      <remarks>
            The <strong>PreviewVisualizationAddedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationAdded" /></strong> event.
            The <strong>PreviewVisualizationAdded</strong> event occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object is added to the visual tree.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationMovedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationMoved">PreviewVisualizationMoved</see></strong>
            event.
            </summary>
      <remarks>
            The <strong>PreviewVisualizationMovedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationMoved" /></strong> event.
            The <strong>PreviewVisualizationMoved</strong> event occurs
            when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object is moved or rotated.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationRemovedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationRemoved">PreviewVisualizationRemoved</see></strong>
            event.
            </summary>
      <remarks>
            The <strong>PreviewVisualizationRemovedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationRemoved" /></strong> event.
            The <strong>PreviewVisualizationRemoved</strong> event occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object is removed from the control's visual tree.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitializedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitialized">VisualizationInitialized</see></strong>
            event.
            </summary>
      <remarks>The <strong>VisualizationInitializedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitialized" /></strong> event.
            The <strong>VisualizationInitialized</strong> event occurs
            when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object has been automatically created based on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>
            object.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAddedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded">VisualizationAdded</see></strong>
            event.
            </summary>
      <remarks>
            The <strong>VisualizationAddedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded" /></strong> event.
            The <strong>VisualizationAddedEvent</strong> event occurs
            when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object has been added to the visual tree.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMovedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved">VisualizationMoved</see></strong>
            event.
            </summary>
      <remarks>The <strong>VisualizationMovedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved" /></strong> event.
            The <strong>VisualizationMovedEvent</strong> event occurs
            when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object has been moved or rotated.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemovedEvent">
      <summary>
            Identifies the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">VisualizationRemoved</see></strong>
            event.
            </summary>
      <remarks>The <strong>VisualizationRemovedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved" /></strong> event.
            The <strong>VisualizationRemovedEvent</strong> event occurs
            when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object has been removed from the control's visual tree.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.#ctor">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong>
            class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.RemoveVisualization(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Immediately removes the specified
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object, releases capture on the
            contact that is being tracked, and raises the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">VisualizationRemoved</see></strong>
            event.
            </summary>
      <param name="visualization">The <strong>TagVisualization</strong> object to remove.</param>
      <remarks>
            If the tag contact remains within the control, further events from that
            same contact (determined by contact ID) are ignored.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.CreateVisualizationForTag(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Creates a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object for a contact.
            </summary>
      <param name="contact">
             The contact to create the <strong>TagVisualization</strong> for.
            </param>
      <remarks>
             The base implementation uses the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizer.Definitions" /></strong> 
             property to create the visualization. Subclasses might use alternative mechanisms.
            </remarks>
      <returns>
             The newly created <strong>TagVisualization</strong> object, or null if no 
             definition could be found for the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Contact">Contact</see></strong> object.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.OnApplyTemplate">
      <summary>
            Called when the control template is applied.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.OnContentChanged(System.Object,System.Object)">
      <summary>
            Called when the control's content changes.
            </summary>
      <param name="oldContent">The previous content of the control.</param>
      <param name="newContent">The new content of the control.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.OnPreviewContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Called when a contact goes down on the control.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.OnContactChanged(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Called when a contact changes.
            </summary>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Called when a contact's capture is lost.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizer.OnCreateAutomationPeer">
      <summary>
            Creates an automation peer for the control.
            </summary>
      <returns>The newly created <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer">AutomationPeer</see></strong> object.</returns>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationInitialized">
      <summary>
            Occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object is automatically created based on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>. 
            </summary>
      <remarks>
            The <strong>PreviewVisualizationInitialized</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationInitializedEvent" /></strong> field.
            Applications can use the <strong>PreviewVisualizationInitialized</strong> event to customize 
            the contents of the <strong>TagVisualization</strong> object.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitialized" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationAdded">
      <summary>
            Occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object is added to the control's visual tree.
            </summary>
      <remarks>
            The <strong>PreviewVisualizationAdded</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationAddedEvent" /></strong> field.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationMoved">
      <summary>
            Occurs when a tag that the control is visualizing is moved or rotated.
            </summary>
      <remarks>
            The <strong>PreviewVisualizationMoved</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationMovedEvent" /></strong> field.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved" /></strong> bubbling event. 
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationRemoved">
      <summary>
            Occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object is removed from the control's visual tree.
            </summary>
      <remarks>
        <para>The <strong>PreviewVisualizationRemoved</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.PreviewVisualizationRemovedEvent" /></strong> field.
            </para>
        <para>Depending on what 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior">TagRemovedBehavior</see></strong>
            value that the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object uses, the <strong>PreviewVisualizationRemoved</strong> event might not
            occur when the physical contact is removed from the Microsoft Surface screen.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved" /></strong> bubbling event. </para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitialized">
      <summary>
            Occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object has been automatically created based on a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">TagVisualizationDefinition</see></strong>
            object. 
            </summary>
      <remarks>The <strong>VisualizationInitialized</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationInitializedEvent" /></strong> field. Applications can use the <strong>VisualizationInitialized</strong> event 
            to customize the contents of the <strong>TagVisualization</strong> object.</remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAdded">
      <summary>
            Occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object has been added to the control's visual tree.
            </summary>
      <remarks>The <strong>VisualizationAdded</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationAddedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMoved">
      <summary>
            Occurs when a tag that the control is visualizing has been moved or rotated.
            </summary>
      <remarks>The <strong>VisualizationMoved</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationMovedEvent" /></strong> field.
            </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemoved">
      <summary>
            Occurs when a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong>
            object has been removed from the control's visual tree.
            </summary>
      <remarks>
        <para>The <strong>VisualizationRemoved</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.VisualizationRemovedEvent" /></strong> field.
            </para>
        <para>Depending on what 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior">TagRemovedBehavior</see></strong>
            value that the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object uses, the <strong>VisualizationRemoved</strong> event might not
            occur when the physical contact is removed from the Microsoft Surface screen.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizer.Definitions">
      <summary>
            Gets the collection of definitions that determine how the control automatically
            responds to tagged objects that are placed on it.
            </summary>
      <remarks>
            By default, the <strong>Definitions</strong> property returns an empty collection.
            </remarks>
      <example>
        <para>
             The <strong>Definitions</strong> property can be
             <see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition">populated in code</see>
             or in XAML markup as the following example illustrates.
            </para>
        <code source="Presentation\Classes_TagVisualizations\SimpleTagVisualizer.xaml" title="" lang="xml" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizer.ActiveVisualizations">
      <summary>
            Gets a read-only collection of tag visualizations that are currently being
            displayed.  
            </summary>
      <remarks>The returned collection includes visualizations for tags that 
            have been removed but are still being visualized because of their 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagRemovedBehavior">TagRemovedBehavior</see></strong>
            value.</remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas">
      <summary>
            Defines the default class that a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control uses to host its visualizations.
            </summary>
      <remarks>
        <para>
            The visualizations of a <strong>TagVisualizer</strong> control can be hosted within
            any control that derives from 
            <strong><see cref="T:System.Windows.UIElement" /></strong> and implements the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ITagVisualizationHost" /></strong>
            interface. If you do not establish alternate hosting, visualizations are hosted
            within a <strong>TagVisualizerCanvas</strong> control.
            </para>
        <para>
            For more information about how to create a custom host adapter, see
            <a href="/ProgrammersGuide/TagVisualization/CustomHostControl/CustomHostControl.htm">Hosting Tag Visualizations in a Custom Host Control</a>
            and
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizer.IsTagVisualizationHostProperty">TagVisualizer.IsTagVisualizationHostProperty</see></strong>.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.IsTagVisualizationHostProperty">
      <summary>
            Identifies a dependency property that specifies whether an element should
            be used to host the visualizations of a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control.
            </summary>
      <remarks>
            The <strong>IsTagVisualizationHostProperty</strong> field is the identifier
            for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.IsTagVisualizationHost" /></strong> dependency property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.CenterProperty">
      <summary>
            Identifies an attached dependency property that represents the coordinates of the center of a visualization.
            </summary>
      <remarks>
        <para>
            Your application can set the <strong>CenterProperty</strong> attached property only on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object or an object that derives from <strong>TagVisualization</strong>.
            </para>
        <para>
            By setting this property, you can position a visualization that has not yet had a tagged
            object placed upon it (for example, when you want a visualization to act as a visual cue
            for the placement of a tag).
            </para>
        <para>
            The center of a visualization that is through via this property is in the coordinates of the parent 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.SetCenter(Microsoft.Surface.Presentation.Controls.TagVisualization,System.Windows.Point)">
      <summary>
            Sets the value of the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.CenterProperty" /></strong> attached property.
            </summary>
      <param name="visualization">The visualization whose center to set.</param>
      <param name="center">The desired value of the <strong>CenterProperty</strong> property.</param>
      <remarks>
            For information about restrictions that apply 
            to setting this attached property, see <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.CenterProperty" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.GetCenter(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Gets the value of the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.CenterProperty" /></strong> attached property.
            </summary>
      <param name="visualization">The visualization whose center to get.</param>
      <returns>
             A <strong>Point</strong> structure that represents the center coordinates of the
             specified visualization.
            </returns>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.OrientationProperty">
      <summary>
            Identifies an attached dependency property that represents the orientation of a visualization.
            </summary>
      <remarks>
        <para>
            Your application can set the <strong>OrientationProperty</strong> attached property only on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            object or an object that derives from <strong>TagVisualization</strong>.
            </para>
        <para>
            By setting this property, you can orient a visualization that has not yet had a tagged
            object placed upon it (for example, when you want a visualization to act as a visual cue
            for the placement of a tag).
            </para>
        <para>
            The orientation of a visualization that is set through this property is in the coordinates of the parent 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.SetOrientation(Microsoft.Surface.Presentation.Controls.TagVisualization,System.Double)">
      <summary>
            Sets the value of the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.OrientationProperty" /></strong> attached property.
            </summary>
      <param name="visualization">The visualization whose orientation to set.</param>
      <param name="orientation">The desired value of the <strong>OrientationProperty</strong> property.</param>
      <remarks>
            For information about restrictions that apply 
            to setting this attached property, see <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.OrientationProperty" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.GetOrientation(Microsoft.Surface.Presentation.Controls.TagVisualization)">
      <summary>
            Gets the value of the <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.OrientationProperty" /></strong> attached property.
            </summary>
      <param name="visualization">The visualization whose orientation to get.</param>
      <returns>The orientation of the specified visualization.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.#ctor">
      <summary>
            Creates a new instance of the <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas" /></strong> class.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.CreateUIElementCollection(System.Windows.FrameworkElement)">
      <summary>
            Creates the children collection for the canvas.
            </summary>
      <param name="logicalParent">The canvas element that this collection is created on.</param>
      <returns>The <strong>UIElementCollection</strong> collection that is created for this canvas.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
      <summary>
            Overridden. Ensure proper rendering of the visual children.
            </summary>
      <param name="visualAdded">The visual that was added to the collection.</param>
      <param name="visualRemoved">The visual that was removed from the collection.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.ArrangeOverride(System.Windows.Size)">
      <summary>
            Overridden. The 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas" /></strong>
            arranges each of its children.
            </summary>
      <param name="arrangeSize">The size that the canvas assumes to position children.</param>
      <returns>The size that the canvas actually uses.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.IsTagVisualizationHost">
      <summary>
            Gets or sets a value that indicates whether this object should be used as the host for 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects within a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>
            control. </summary>
      <remarks>
            The <strong>IsTagVisualizationHost</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.IsTagVisualizationHostProperty" /></strong> field.
            Setting this property has no effect if the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas" /></strong> object is not contained
            within a <strong>TagVisualizer</strong> control.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizerCanvas.TagVisualizationHostAdapter">
      <summary>
            Gets the adapter to use for hosting 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>
            objects.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizerEventArgs">
      <summary>
            Represents the arguments that are passed to tag visualizer events.
            </summary>
      <remarks>
            For more information about how 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer" /></strong>,
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization" /></strong>, and
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>
            work together to produce visible reactions to tagged physical objects, see
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizationDefinition" /></strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.TagVisualizerEventArgs.TagVisualization">
      <summary>
            Gets the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualization">TagVisualization</see></strong> 
            object for an event.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.TagVisualizerEventHandler">
      <summary>Represents the method that will handle 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.TagVisualizer">TagVisualizer</see></strong> 
            events.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvasStrokeErasingEventHandler">
      <summary>Represents the method that will handle the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvas.StrokeErasing">StrokeErasing</see></strong>
            events.</summary>
      <param name="sender">An object.</param>
      <param name="e">A 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceInkCanvasStrokeErasingEventArgs">SurfaceInkCanvasStrokeErasingEventArgs</see></strong>
            object.</param>
    </member>
    <member name="T:Microsoft.Surface.Presentation.KeyValueTriplet`3">
      <summary>
            Defines a key/(value1,value2) triplet that can be set or retrieved.
            </summary>
      <typeparam name="TKey"></typeparam>
      <typeparam name="TValue1"></typeparam>
      <typeparam name="TValue2"></typeparam>
    </member>
    <member name="M:Microsoft.Surface.Presentation.KeyValueTriplet`3.#ctor(`0,`1,`2)">
      <summary>
            Constructs the key/(value1, value2) triplet.
            </summary>
      <param name="key"></param>
      <param name="value1"></param>
      <param name="value2"></param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.KeyValueTriplet`3.ToString">
      <summary>
            Returns a string representation of components in this key/(value1, value2) triplet.
            </summary>
      <returns></returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.KeyValueTriplet`3.Key">
      <summary>
            Gets the key in the key/(value1, value2) triplet.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.KeyValueTriplet`3.Value1">
      <summary>
            Gets the value1 in the key/(value1, value2) triplet.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.KeyValueTriplet`3.Value2">
      <summary>
            Gets the value2 in the key/(value1, value2) triplet.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.SurfaceDragCursor">
      <summary>
            Represents the state of an element that is being dragged.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragCursor.GetOrientation(System.Windows.UIElement)">
      <summary>
            Gets the orientation of the cursor, relative to the specified 
            <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <param name="relativeTo">The <strong>UIElement</strong> object that the orientation is relative to.</param>
      <returns>A <strong>double</strong> value that specifies the orientation of the cursor relative to the <em>relativeTo</em> parameter.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragCursor.GetPosition(System.Windows.UIElement)">
      <summary>
            Gets the center position of the cursor, relative to the specified 
            <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <param name="relativeTo">The <strong>UIElement</strong> object that the center position is relative to.</param>
      <returns>A <strong>Point</strong> object that defines the position of the contact relative to the <em>relativeTo</em> parameter.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCursor.DragSource">
      <summary>
            Gets the source element that is associated with the cursor.
            </summary>
      <remarks>
            The <strong>DragSource</strong> property returns the same element that 
            was passed to the <em>dragSource</em> parameter of the
            <strong><see cref="M:Microsoft.Surface.Presentation.SurfaceDragDrop.BeginDragDrop">BeginDragDrop</see></strong>
            method.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCursor.CurrentTarget">
      <summary>
            Gets the target element that is interested in accepting the cursor.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCursor.Data">
      <summary>
            Gets the data that is associated with the drag source.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCursor.Visual">
      <summary>
            Gets the visual element of the cursor.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCursor.Effects">
      <summary>
            Gets a value that specifies the <strong><see cref="T:System.Windows.DragDropEffects">DragDropEffects</see></strong> 
            object for the drag-and-drop operation.
            </summary>
      <remarks>
            Unlike the
            <strong><see cref="P:System.Windows.Forms.DragEventArgs.Effect">System.Windows.Forms.DragEventArgs.Effect</see></strong>
            property, the <strong>Effects</strong> property does not affect the dragging cursor. It is used only to inform
            the drag source about what type of operation needs to be performed.
            </remarks>
      <example>
        <para>
            In the following code example, a 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent" /></strong>
            event handler sets the <strong>Effects</strong> property to 
            <strong><see cref="T:System.Windows.DragDropEffects">DragDropEffects.Move</see></strong>.
            When the 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent" /></strong>
            event is raised, the handler checks the drag effects to determine if the dragged item should
            be removed from the source.
            </para>
        <code lang="cs">
          <code source="Presentation\SurfaceDragDrop\DragDrop1\SurfaceWindow1.xaml.cs" region="OnDrop" />
          <code source="Presentation\SurfaceDragDrop\DragDrop1\SurfaceWindow1.xaml.cs" region="OnDragCompleted" />
        </code>
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCursor.AllowedEffects">
      <summary>
            Gets a value that specifies which operations are allowed by the originator of the drag-and-drop operation.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.SurfaceDragDrop">
      <summary>
            Provides static properties and methods to perform drag-and-drop operations.
            </summary>
      <remarks>
            The <strong>SurfaceDragDrop</strong> class provides:
            <list type="bullet"><item>Methods to start and stop drag-and-drop operations.</item><item>
             Methods to query for <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
             objects that are over a given element.
            </item><item>
             Attached routed event definitions to enable notification as cursors 
             enter, leave, and are dropped on an element.
            </item></list><para>
            For more information, see 
            <a href="/ProgrammersGuide/SurfaceDragAndDropFramework/SurfaceDragAndDropFramework.htm">Using the Drag-and-Drop Framework</a>.
            </para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.GiveFeedbackEvent">
      <summary>
            Identifies an attached event that occurs when a drag operation starts and during the drag movement.
            </summary>
      <remarks>
            The <strong>GiveFeedbackEvent</strong> attached event enables
            the source element to give feedback when dragging starts, and during drag movement.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragEnterEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dragged into the bounds of a drop target.
            </summary>
      <remarks>
        <para>
            The <strong>DragEnterEvent</strong> event is raised on the drop target element.
            By default, a
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object is considered within the bounds of an element when one of the following occurs:
            </para>
        <list type="bullet">
          <item>All contacts that are dragging the cursor are inside the target element.</item>
          <item>The center of the cursor is inside the target element.</item>
        </list>
        <para>
            A potential target element can listen to the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> 
            event to provide its own hit test logic.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragLeaveEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dragged out of the bounds of a drop target.
            </summary>
      <remarks>
        <para>
            The <strong>DragLeaveEvent</strong> event is raised on the drop target element.
            By default, a
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong> object
            is considered within the bounds of an element when one of the following occurs:
            </para>
        <list type="bullet">
          <item>All contacts that are dragging the cursor are inside the target element.</item>
          <item>The center of the cursor is inside the target element.</item>
        </list>
        <para>
            When these conditions are not met, the cursor is considered outside of the element bounds.
            A potential target element can listen to the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> 
            event to provide its own hit test logic.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragOverEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dragged over the bounds of a drop target.
            </summary>
      <remarks>
        <para>
            As a 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object is moved over a target element, the <strong>DragOverEvent</strong> event
            is raised repeatedly on the target element. By default, a
            <strong>SurfaceDragCursor</strong> is considered over (or within the bounds of) 
            an element when one of the following occurs:
            </para>
        <list type="bullet">
          <item>All contacts that are dragging the cursor are inside the target element.</item>
          <item>The center of the cursor is inside the target element.</item>
        </list>
        <para>
            A potential target element can listen to the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> 
            event to provide its own hit test logic.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dropped within the bounds of a drop target. 
            </summary>
      <remarks>
        <para>
            The <strong>DropEvent</strong> event is raised only on a target element that will accept the cursor 
            and only when the cursor is released within the bounds of the element.
            By default, a
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object is considered within the bounds of an element when one of the following occurs:
            </para>
        <list type="bullet">
          <item>All contacts that are dragging the cursor are inside the target element.</item>
          <item>The center of the cursor is inside the target element.</item>
        </list>
        <para>
            A potential target element can listen to the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> 
            event to provide its own hit test logic.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.TargetChangedEvent">
      <summary>
            Identifies an attached event that occurs when the target that is associated with the cursor changes. 
            </summary>
      <remarks>
            The <strong>TargetChangedEvent</strong> event is raised on the 
            <strong><see cref="P:Microsoft.Surface.Presentation.SurfaceDragCursor.Visual">SurfaceDragCursor.Visual</see></strong>
            object.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCanceledEvent">
      <summary>
            Identifies an attached event that occurs when the drag operation is canceled.
            </summary>
      <remarks>
        <para>The <strong>DragCanceledEvent</strong> is raised on the drag source object.</para>
        <para>This event is raised when <see cref="M:Microsoft.Surface.Presentation.SurfaceDragDrop.CancelDragDrop(System.Windows.FrameworkElement)">CancelDragDrop</see> is called or when the 
            cursor is dropped in a place that is not a drop target.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent">
      <summary>
            Identifies an attached event that occurs when the drag operation is complete.
            </summary>
      <remarks>
            The <strong>DragCompletedEvent</strong> event is raised on the drag source object.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent">
      <summary>
            Identifies an attached event that occurs when a target element is queried to determine
            if it can accept the 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object.
            </summary>
      <remarks>
        <para>
            As the <strong>SurfaceDragCursor</strong>
            object moves, the <strong>QueryTargetEvent</strong> event is raised on each 
            <strong><see cref="T:System.Windows.FrameworkElement" /></strong> object that has its
            <strong><see cref="P:System.Windows.UIElement.AllowDrop" /></strong> property 
            set to <strong>true</strong>.
            </para>
        <para>
            By default, the <strong>SurfaceDragCursor</strong> is considered to be targeting an element when
            one of the following occurs:
            </para>
        <list type="bullet">
          <item>All contacts that are dragging the cursor are inside the target element.</item>
          <item>The center of the cursor is inside the target element.</item>
        </list>
        <para>
            A potential target element can listen to the <strong>QueryTargetEvent</strong> 
            event to provide its own hit test logic.
            </para>
      </remarks>
      <example>
        <para>
            In the following code example, an event handler for the <strong>QueryTargetEvent</strong> event
            uses custom hit test logic to determine if <em>DropTarget</em> is being targeted.
            This custom logic checks to see if the geometry bounds of the cursor and the target
            are intersecting.
            </para>
        <code source="Presentation\SurfaceDragDrop\DragDrop1\SurfaceWindow1.xaml.cs" region="OnQueryTargetCustom" lang="cs" />
      </example>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewGiveFeedbackEvent">
      <summary>
            Identifies an attached event that occurs when a drag operation starts and during the drag movement.
            </summary>
      <remarks>
            The <strong>PreviewGiveFeedbackEvent</strong> attached event enables
            the source container to give feedback when dragging starts, and during a drag movement.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.GiveFeedbackEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragEnterEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dragged into the bounds of a drop target.
            </summary>
      <remarks>
            The <strong>PreviewDragEnterEvent</strong> is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragEnterEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragLeaveEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dragged out of the bounds of a drop target.
            </summary>
      <remarks>
            The <strong>PreviewDragLeaveEvent</strong> is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragLeaveEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragOverEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dragged over the bounds of a drop target.
            </summary>
      <remarks>
            The <strong>PreviewDragOverEvent</strong> is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragOverEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDropEvent">
      <summary>
            Identifies an attached event that occurs when a cursor is dropped within the bounds of a drop target. 
            </summary>
      <remarks>
            The <strong>PreviewDropEvent</strong> event is raised only on a target element that will accept the cursor.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewTargetChangedEvent">
      <summary>
            Identifies an attached event that occurs when the target that is associated with the cursor changes. 
            </summary>
      <remarks>
            The <strong>PreviewTargetChangedEvent</strong> event is raised on the 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object. This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.TargetChangedEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCanceledEvent">
      <summary>
            Identifies an attached event that occurs when the drag operation is canceled.
            </summary>
      <remarks>
            The <strong>PreviewDragCanceledEvent</strong> event is raised on the source container object.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCanceledEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCompletedEvent">
      <summary>
            Identifies an attached event that occurs when the drag operation is complete.
            </summary>
      <remarks>
            The <strong>PreviewDragCompletedEvent</strong> event is raised on the source container object.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewQueryTargetEvent">
      <summary>
            Identifies an attached event that occurs when a target element is queried to determine
            if it can accept the 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object.
            </summary>
      <remarks>
            The target element can listen to the <strong>PreviewQueryTargetEvent</strong> event to provide its own hit test logic.
            This event is a tunneling event that is raised before the corresponding 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> bubbling event.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddGiveFeedbackHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.GiveFeedbackEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.GiveFeedbackEvent" /></strong> attached event.
            </summary>
      <param name="element">The element associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveGiveFeedbackHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.GiveFeedbackEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.GiveFeedbackEvent" /></strong> attached event.
            </summary>
      <param name="element">The element associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddDragEnterHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragEnterEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveDragEnterHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragEnterEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddDragLeaveHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragLeaveEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveDragLeaveHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragLeaveEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddDragOverHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragOverEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveDragOverHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragOverEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddDropHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveDropHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddTargetChangedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.TargetChangedEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.TargetChangedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveTargetChangedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.TargetChangedEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.TargetChangedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddDragCanceledHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCanceledEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveDragCanceledHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCanceledEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddDragCompletedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveDragCompletedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddQueryTargetHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.QueryTargetEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemoveQueryTargetHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.QueryTargetEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.GiveFeedbackEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewGiveFeedbackEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewGiveFeedbackHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.GiveFeedbackEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewGiveFeedbackEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewDragEnterHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragEnterEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewDragEnterHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragEnterEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewDragLeaveHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragLeaveEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewDragLeaveHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragLeaveEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewDragOverHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragOverEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewDragOverHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragOverEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewDropHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDropEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewDropHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDropEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewTargetChangedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.TargetChangedEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewTargetChangedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewTargetChangedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.TargetChangedEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewTargetChangedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewDragCanceledHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCanceledEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewDragCanceledHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragDropEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCanceledEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewDragCompletedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCompletedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewDragCompletedHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCompletedEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.AddPreviewQueryTargetHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.QueryTargetEventArgs})">
      <summary>
            Adds a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewQueryTargetEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.RemovePreviewQueryTargetHandler(System.Windows.DependencyObject,System.EventHandler{Microsoft.Surface.Presentation.QueryTargetEventArgs})">
      <summary>
            Removes a handler for the <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewQueryTargetEvent" /></strong> attached event.
            </summary>
      <param name="element">The element that is associated with this event.</param>
      <param name="handler">The event handler.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.BeginDragDrop``1(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.Object,System.Collections.Generic.IEnumerable{``0},System.Windows.DragDropEffects)">
      <summary>
            Begins the drag-and-drop operation.
            </summary>
      <param name="dragSource">The drag source of the cursor.</param>
      <param name="draggedElement">The element that is dragged from the drag source.
            The element's position and orientation are used as the cursor's initial position and orientation. </param>
      <param name="cursorVisual">The visual content of the cursor. If the 
            <strong><see cref="P:System.Windows.FrameworkElement.Width">Width</see></strong> or 
            <strong><see cref="P:System.Windows.FrameworkElement.Height">Height</see></strong> property of 
            <em>cursorVisual</em> are not explicitly set, the 
            <strong><see cref="P:System.Windows.FrameworkElement.ActualWidth">ActualWidth</see></strong> 
            and <strong><see cref="P:System.Windows.FrameworkElement.ActualHeight">ActualHeight</see></strong> 
            properties of <em>draggedElement</em> are used as <strong>Width</strong> and 
            <strong>Height</strong> for <em>cursorVisual</em>.</param>
      <param name="data">The data that is attached with the cursor.</param>
      <param name="inputDevices">The input devices that start dragging the cursor. The devices can be enumerable 
            of <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong> or 
            <strong><see cref="T:System.Windows.Input.MouseDevice" /></strong> objects.</param>
      <param name="allowedEffects">The allowed drag-and-drop effects of the operation.</param>
      <typeparam name="T">An input device. This device can be <strong>Contact</strong> or <strong>MouseDevice</strong>.</typeparam>
      <returns>
        <strong>true</strong> if the drag-and-drop operation begins successfully; otherwise, <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.CancelDragDrop(System.Windows.FrameworkElement)">
      <summary>
            Cancels the drag-and-drop operation for the specified cursor.
            </summary>
      <remarks>Your application can cancel only the cursors that are being dragged.</remarks>
      <param name="cursorVisual">The visual cursor to cancel the drag-and-drop operation for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.EndDragDrop(System.Windows.FrameworkElement)">
      <summary>
            Ends the drag-and-drop operation. 
            </summary>
      <param name="cursorVisual">The visual cursor to end the drag-and-drop operation for.</param>
      <remarks>
        <para>The <strong>EndDragDrop</strong> method causes the specified cursor to drop at its current location.</para>
        <para>Your application can end only the cursors that are being dragged.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.GetAllCursors(System.Windows.Window)">
      <summary>
            Gets all the dragging cursors for the specified window.
            </summary>
      <param name="window">The window that is hosting all drag sources and drop targets.</param>
      <returns>
            A read-only collection of 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            objects that are associated with the <em>window</em> parameter.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.GetTargetedCursors(System.Windows.FrameworkElement,System.Boolean)">
      <summary>
            Gets all the cursors that are targeting the specified target element.
            </summary>
      <param name="target">The element to get the cursors for.</param>
      <param name="includeDescendant">
        <strong>true</strong> to get cursors for 
            descendant elements of the <em>target</em> element also; otherwise, <strong>false</strong>.
            </param>
      <returns>
            A read-only collection of 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            objects that are associated with the <em>target</em> element (and 
            its descendant elements if <em>includeDescendant</em> is <strong>true</strong>).
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.GetCursorsFromDragSource(System.Windows.FrameworkElement,System.Boolean)">
      <summary>
            Gets all the cursors that are dragged from the specified source.
            </summary>
      <param name="dragSource">The drag source of the cursor.</param>
      <param name="includeDescendant">
        <strong>true</strong> to get cursors for descendant elements of <em>dragSource</em> also; 
            otherwise, <strong>false</strong>.
            </param>
      <returns>
            A read-only collection of 
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            objects that are associated with the <em>dragSource</em> source (and 
            its descendant elements if <em>includeDescendant</em> is <strong>true</strong>).
            </returns>
    </member>
    <member name="F:Microsoft.Surface.Presentation.SurfaceDragDrop.IsAnyCursorTargetedProperty">
      <summary>
            Identifies an attached dependency property that represents whether or not a cursor 
            is targeting an element.
            </summary>
      <remarks>
            Your application can attach the <strong>IsAnyCursorTargetedProperty</strong> property 
            to a potential drop target element and then use the property to determine if
            a cursor is targeting that element.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDrop.GetIsAnyCursorTargeted(System.Windows.DependencyObject)">
      <summary>
            Gets a value that indicates whether or not a cursor is targeting the specified element.
            </summary>
      <param name="element">The element to query.</param>
      <returns>
        <strong>true</strong> if any cursor is targeting the <em>element</em> element; otherwise <strong>false</strong>.
            </returns>
      <remarks>
            The <strong>GetIsAnyCursorTargeted</strong> method obtains the value of the 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.IsAnyCursorTargetedProperty" /></strong> attached property.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.SurfaceDragDropEventArgs">
      <summary>
            Represents event arguments for drag-and-drop events.
            </summary>
      <remarks>
            The <strong>SurfaceDragDropEventArgs</strong> class represents arguments 
            that attached events use as identified by the following fields:
            <list type="bullet"><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragEnterEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragLeaveEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragOverEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCanceledEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragEnterEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragLeaveEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragOverEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDropEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.PreviewDragCanceledEvent" /></strong></item></list></remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragDropEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to call the the event handler.
            </summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragDropEventArgs.Cursor">
      <summary>
            Gets the <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor">SurfaceDragCursor</see></strong> object for the drag operation.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragDropEventArgs.Effects">
      <summary>
            Gets or sets the effects of the drag-and-drop operation.
            </summary>
      <remarks>
            Unlike the
            <see cref="P:System.Windows.Forms.DragEventArgs.Effect">System.Windows.Forms.DragEventArgs.Effect</see>
            property, the <strong>Effects</strong> property does not affect the dragging cursor. It is used only to inform
            the drag source about what type of operation needs to be performed.
            </remarks>
      <example>
        <para>
            In the following code example, a 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DropEvent" /></strong>
            event handler sets the <strong>Effects</strong> property to 
            <strong><see cref="T:System.Windows.DragDropEffects">DragDropEffects.Move</see></strong>.
            When the 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent" /></strong>
            event is raised, the handler checks the drag effects to determine if the dragged item should
            be removed from the source.
            </para>
        <code lang="cs">
          <code source="Presentation\SurfaceDragDrop\DragDrop1\SurfaceWindow1.xaml.cs" region="OnDrop" />
          <code source="Presentation\SurfaceDragDrop\DragDrop1\SurfaceWindow1.xaml.cs" region="OnDragCompleted" />
        </code>
      </example>
    </member>
    <member name="T:Microsoft.Surface.Presentation.QueryTargetEventArgs">
      <summary>
            Represents event arguments for an attached event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong>
            field.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.QueryTargetEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to call the event handler.
            </summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.QueryTargetEventArgs.UseDefault">
      <summary>
            Gets or sets whether to use the default hit-test result as the target.
            </summary>
      <remarks>
            By default, the <strong>UseDefault</strong> property is <strong>true</strong>. A drop target 
            that uses custom hit-test logic should set this property to <strong>false</strong>.  
            When you provide custom hit-test logic, setting the <strong><see cref="P:Microsoft.Surface.Presentation.QueryTargetEventArgs.ProposedTarget" /></strong>
            property to a non-null value implies that <strong>UseDefault</strong> is <strong>false</strong>.
            </remarks>
      <example>
        <para>
            By default, a
            <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor" /></strong>
            object is considered to be targeting an element when one of the following occurs:
            </para>
        <list type="bullet">
          <item>All contacts that are dragging the cursor are inside the target element.</item>
          <item>The center of the cursor is inside the target element.</item>
        </list>
        <para>
            In the following code example, an event handler for the 
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.QueryTargetEvent" /></strong> 
            event uses custom hit-test logic to determine if <em>DropTarget</em> is being targeted.
            This custom logic checks to see if the geometry bounds of the cursor and the target
            are intersecting.
            </para>
        <code source="Presentation\SurfaceDragDrop\DragDrop1\SurfaceWindow1.xaml.cs" region="OnQueryTargetCustom" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.QueryTargetEventArgs.Cursor">
      <summary>
            Gets the <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor">SurfaceDragCursor</see></strong> object for the drag operation.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.QueryTargetEventArgs.ProposedTarget">
      <summary>
            Gets or sets the proposed target element for the drop operation. 
            </summary>
      <remarks>If the <strong>ProposedTarget</strong> property is set to a non-null value,
            the target that is returned by the default hit test is ignored.</remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.TargetChangedEventArgs">
      <summary>
            Represents event arguments for an attached event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.TargetChangedEvent" /></strong>
            field.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.TargetChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to call the event handler.
            </summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.TargetChangedEventArgs.Cursor">
      <summary>
            Gets the <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor">SurfaceDragCursor</see></strong> object for the drag operation.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.TargetChangedEventArgs.OldTarget">
      <summary>
            Gets the old target element that the cursor left.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.GiveFeedbackEventArgs">
      <summary>
            Represents event arguments for an attached event that the
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.GiveFeedbackEvent" /></strong>
            field identifies.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.GiveFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to call the event handler.
            </summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.GiveFeedbackEventArgs.Cursor">
      <summary>
            Gets the <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor">SurfaceDragCursor</see></strong> object for the drag operation.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs">
      <summary>
            Represents event arguments for an attached event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.SurfaceDragDrop.DragCompletedEvent" /></strong>
            field.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to call the event handler.
            </summary>
      <param name="genericHandler">The generic handler to call in a type-specific way.</param>
      <param name="genericTarget">The target to call the handler on.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SurfaceDragCompletedEventArgs.Cursor">
      <summary>
            Gets the <strong><see cref="T:Microsoft.Surface.Presentation.SurfaceDragCursor">SurfaceDragCursor</see></strong> 
            object for the drag operation.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.SimpleValueTracker`1">
      <summary>
            Simple value tracker class, designed to approximate value change velocity.
            The class keeps track of several last value samples and calculates velocity as the average velocity between the first and last values in the history.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.#ctor">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.#ctor(System.Boolean)">
      <summary>
            Constructor.
            </summary>
      <param name="usesExternalTimer"></param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.UpdateValue(`0,System.Int64)">
      <summary>
            Updates the value with the given timestamp.
            </summary>
      <param name="value"></param>
      <param name="timestamp"></param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.Reset">
      <summary>
            Resets the tracker.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.OnTick(System.Object,System.EventArgs)">
      <summary>
            Auto updates the tracker if the UpdateValue method (or Value setter) was not called for too long.
            </summary>
      <param name="sender"></param>
      <param name="args"></param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.CalculateVelocity(`0,`0,System.Double)">
      <summary>
            Calculates average velocity between two samples.
            </summary>
      <param name="first"></param>
      <param name="last"></param>
      <param name="timeDelta">in milliseconds</param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.AreClose(`0,`0)">
      <summary>
            Verifies if two values are close.
            </summary>
      <param name="value1"></param>
      <param name="value2"></param>
      <returns></returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.Enqueue(System.Int64,`0,System.Boolean)">
      <summary>
            Enqueues a record.
            </summary>
      <param name="timestamp">a timestamp of this record.</param>
      <param name="value">actual value.</param>
      <param name="stopMark">a flag indicating if the value should be treated the same as the previous one
            in the history.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.Process(System.Int64)">
      <summary>
            Auto updates the tracker if the UpdateValue method was not called for too long.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.StartTimer">
      <summary>
            Starts the timer. 
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.SimpleValueTracker`1.StopTimer">
      <summary>
            Stops the timer.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SimpleValueTracker`1.Value">
      <summary>
            Updates the value.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SimpleValueTracker`1.Velocity">
      <summary>
            Calculates the average velocity change since several last updates.
            The result is in value-units per milliseconds.
            </summary>
      <returns></returns>
    </member>
    <member name="E:Microsoft.Surface.Presentation.SimpleValueTracker`1.VelocityChanged">
      <summary>
            Occurs when the history is update which means velocity gets changed.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.SimpleValueTracker`1.IsStill">
      <summary>
            Returns true if the tracked object stays still.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.SimpleValueTracker`1.ValueRecord">
      <summary>
            Value record in the history.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.IdentityTag">
      <summary>
            Represents an identity tag on a <a src="../Development/TaggedObjects/TaggedObjects.htm">tagged object</a>.
            </summary>
      <remarks>
        <para>
             An identity tag is a physical object marker that represents a 128-bit value 
             (a composite of 2 64-bit values). An application can use identity tags to recognize an object 
             or distinguish among a collection of objects. 
            </para>
        <para>
             For example, a marketing promotion might issue identity tags with the customer ID 
             (the <strong><see cref="P:Microsoft.Surface.Presentation.IdentityTag.Value" /></strong> property) and a unique offer code 
             (the <strong><see cref="P:Microsoft.Surface.Presentation.IdentityTag.Series" /></strong> property) represented by the tag.
             At the venue, the customer can redeem the offer by placing the identity tag on the Microsoft Surface screen.
            </para>
        <para>
             For more information about how to use tagged physical objects, see
             <a href="/Development/TaggedObjects/TaggedObjects.htm">Tagged Objects</a>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IdentityTag.op_Inequality(Microsoft.Surface.Presentation.IdentityTag,Microsoft.Surface.Presentation.IdentityTag)">
      <summary>
            Determines whether two specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag">IdentityTag</see></strong>
            structures are different.
            </summary>
      <param name="left">The first <strong>IdentityTag</strong> structure to use in the comparison.</param>
      <param name="right">The second <strong>IdentityTag</strong> structure to use in the comparison.</param>
      <returns>
        <strong>true</strong> if the two <strong>IdentityTag</strong> structures are different;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IdentityTag.op_Equality(Microsoft.Surface.Presentation.IdentityTag,Microsoft.Surface.Presentation.IdentityTag)">
      <summary>
            Determines whether two specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag">IdentityTag</see></strong>
            structures are the same. 
            </summary>
      <param name="left">The first <strong>IdentityTag</strong> structure to use in the comparison.</param>
      <param name="right">The second <strong>IdentityTag</strong> structure to use in the comparison.</param>
      <returns>
        <strong>true</strong> if the two <strong>IdentityTag</strong> structures are the same;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IdentityTag.Equals(System.Object)">
      <summary>
            Override of the <strong>System.Object.Equals</strong> method. Determines if this 
            <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag">IdentityTag</see></strong> 
            structure is equal to another specified <strong>IdentityTag</strong> structure.
            </summary>
      <param name="obj">The <strong>IdentityTag</strong> structure to compare to <strong>this</strong> class instance.</param>
      <returns>
        <strong>true</strong> if the two <strong>IdentityTag</strong> structures are the same;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IdentityTag.GetHashCode">
      <summary>
            Hash code override.
            </summary>
      <returns>An int32 hash code of <strong>this.tagValue</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IdentityTag.ToString">
      <summary>
            Converts the 
            <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag">IdentityTag</see></strong>
            structure to its equivalent string representation. 
            </summary>
      <returns>A string representation of the structure (<strong>this.series</strong> plus <strong>this.tagValue</strong>).</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IdentityTag.Value">
      <summary>
            Gets the value of an identity tag.
            </summary>
      <remarks>
        <para>
             An <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag" /></strong>
             represents a 128-bit composite identifier defined by the <strong><see cref="P:Microsoft.Surface.Presentation.IdentityTag.Series" /></strong> and
             <strong>Value</strong> properties. 
            </para>
        <para>
             The <strong>Series</strong> property is used to indicate how the <strong>Value</strong>
             property is be used, or what the <strong>Value</strong> property means. For example, the
             <strong>Value</strong> property might contain a customer ID from your database, 
             and the <strong>Series</strong> property might contain a value that indicates that this customer 
             is eligible for a special promotional offer.
            </para>
        <para>
             The <strong>Series</strong> property must be globally unique. Instead of selecting
             an arbitrary value for the <strong>Series</strong> property, you should use the 
             <a href="/Tools/IdentityTagPrintingTool.htm">identity tag printing tool</a>.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IdentityTag.Series">
      <summary>
            Gets the series of an identity tag.
            </summary>
      <remarks>
        <para>
             An <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag" /></strong>
             represents a 128-bit composite identifier defined by the <strong>Series</strong> and
             <strong><see cref="P:Microsoft.Surface.Presentation.IdentityTag.Value" /></strong> properties. 
            </para>
        <para>
             The <strong>Series</strong> property is used to indicate how the <strong>Value</strong>
             property is be used, or what the <strong>Value</strong> property means. For example, the
             <strong>Value</strong> property might contain a customer ID from your database, 
             and the <strong>Series</strong> property might contain a value that indicates that this customer 
             is eligible for a special promotional offer.
            </para>
        <para>
             The <strong>Series</strong> property must be globally unique. Instead of selecting
             an arbitrary value for the <strong>Series</strong> property, you should use the 
             <a href="/Tools/IdentityTagPrintingTool.htm">identity tag printing tool</a>.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.TagType">
      <summary>
            Defines the possible tag types for a 
            <a href="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a>.
            </summary>
      <remarks>
            The <strong>TagType</strong> enumeration is used by the
            <strong><see cref="P:Microsoft.Surface.Presentation.TagData.Type" /></strong>
            property of a
            <strong><see cref="T:Microsoft.Surface.Presentation.TagData" /></strong>
            structure to identify the type of tag that the structure represents.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.TagType.None">
      <summary>This object does not have tag values that are associated with it.</summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.TagType.Byte">
      <summary>A byte tag.</summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.TagType.Identity">
      <summary>An identity tag.</summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations">
      <summary>
            Represents the possible affine two-dimensional (2-D) manipulations.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations.None">
      <summary> No manipulations. </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations.TranslateX">
      <summary> A translation in the x-direction. </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations.TranslateY">
      <summary> A translation in the y-direction. </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations.Scale">
      <summary> A scale in both directions. </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations.Rotate">
      <summary> A rotation. </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs">
      <summary>
            Represents data that is sent with an
            <strong><see cref="E:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Affine2DInertiaCompleted" /></strong>
            event or an
            <strong><see cref="E:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Affine2DManipulationCompleted" /></strong>
            event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.ManipulationOrigin">
      <summary>
            Gets the final coordinates of the composite position of the manipulation.
            </summary>
      <remarks>
        <para>
             The <strong>ManipulationOrigin</strong> point represents a point on the Microsoft Surface screen that is relative to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
             control that is the composite center of all contacts that are currently participating in the 
             manipulation. This point moves if any one of the other contacts move or when a contact is added or removed 
             from the manipulation.
             </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.TotalTranslation">
      <summary>
            Gets the amount of translational change since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.TotalScale">
      <summary>
            Gets the amount of scale change, as a percentage, since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.TotalExpansion">
      <summary>
            Gets the change in the average radius, since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.TotalRotation">
      <summary>
            Gets the amount of rotational change, in degrees clockwise, since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.Velocity">
      <summary>
            Gets the current rate of translational change, in device-independent units per millisecond.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.ExpansionVelocity">
      <summary>
            Gets the current rate of scale change, in device-independent units per millisecond.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationCompletedEventArgs.AngularVelocity">
      <summary>
            Gets the current rate of rotational change, in clockwise degrees per millisecond.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs">
      <summary>
            Represents data that is sent with an
            <strong><see cref="E:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Affine2DInertiaDelta" /></strong>
            event or an
            <strong><see cref="E:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Affine2DManipulationDelta" /></strong>
            event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.ManipulationOrigin">
      <summary>
            Gets the new coordinates of the composite position of the manipulation.
            </summary>
      <remarks>
        <para>
             The <strong>ManipulationOrigin</strong> point represents a point on the Microsoft Surface screen 
             that is relative to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
             control that is the composite center of all contacts that are currently participating in the 
             manipulation. This point moves if any one of the other contacts move or when a contact is added or removed 
             from the manipulation.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.Delta">
      <summary>
            Gets the amount of translational change since the last event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.ScaleDelta">
      <summary>
            Gets the amount of scale change as a multiplier of the previous scale.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.ExpansionDelta">
      <summary>
            Gets the change in the average radius since the last event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.RotationDelta">
      <summary>
            Gets the amount of rotational change, in degrees clockwise, since the last event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.CumulativeTranslation">
      <summary>
            Gets the amount of translational change since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.CumulativeScale">
      <summary>
            Gets the amount of scale change, as a percentage, since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.CumulativeExpansion">
      <summary>
            Gets the change in the average radius, since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.CumulativeRotation">
      <summary>
            Gets the amount of rotational change, in degrees clockwise, since the manipulation started.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.Velocity">
      <summary>
            Gets the current rate of translational change, in device-independent units per millisecond.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.ExpansionVelocity">
      <summary>
            Gets the current rate of scale change, in device-independent units per millisecond.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationDeltaEventArgs.AngularVelocity">
      <summary>
            Gets the current rate of rotational change, in clockwise degrees per millisecond.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">
      <summary>
            Implements a multiple-input, single-output compositor
            for two-dimensional (2-D) transformations in a shared coordinate space.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.#ctor(Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations,System.Windows.UIElement)">
      <summary>
            Creates a new <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object.
            </summary>
      <param name="supportedManipulations">The initial set of supported manipulations.</param>
      <param name="container">The container with the common coordinate space.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <em>supportedManipulations</em> parameter is
            not a valid combination of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations">Affine2DManipulations</see></strong>
            enumeration values.</exception>
      <exception cref="T:System.ArgumentNullException">The container is null.</exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.#ctor(Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations,System.Windows.UIElement,System.Windows.Point)">
      <summary>
            Creates a new <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object.
            </summary>
      <param name="supportedManipulations">The initial set of supported manipulations.</param>
      <param name="container">The container with the common coordinate space.</param>
      <param name="pivotPoint">The pivot point for single-manipulator rotations.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <em>supportedManipulations</em> parameter is
            not a valid combination of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations">Affine2DManipulations</see></strong>
            enumeration values.</exception>
      <exception cref="T:System.ArgumentNullException">The container is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <em>pivotPoint</em><strong>.X</strong> or <em>pivotPoint</em><strong>.Y</strong> member is
            <strong>double.PositiveInfinity</strong> or <strong>double.NegativeInfinity</strong>. These values are invalid.</exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.#ctor(Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations,System.Windows.UIElement,System.Boolean)">
      <summary>
            Creates a new <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object.
            </summary>
      <param name="supportedManipulations">The initial set of supported manipulations.</param>
      <param name="container">The container with the common coordinate space.</param>
      <param name="useScreenCoordinates">A Boolean value that specifies whether output should be in screen coordinates.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <em>supportedManipulations</em> parameter is
            not a valid combination of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations">Affine2DManipulations</see></strong>
            enumeration values.</exception>
      <exception cref="T:System.ArgumentNullException">The container is null.</exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.#ctor(Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations,System.Windows.UIElement,System.Windows.Point,System.Boolean)">
      <summary>
            Creates a new <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object.
            </summary>
      <param name="supportedManipulations">The initial set of supported manipulations.</param>
      <param name="container">The container with the common coordinate space.</param>
      <param name="pivotPoint">The pivot point for single-manipulator rotations.</param>
      <param name="useScreenCoordinates">A Boolean value that specifies whether output should be in screen coordinates.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <em>supportedManipulations</em> parameter is
            not a valid combination of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulations">Affine2DManipulations</see></strong>
            enumeration values.</exception>
      <exception cref="T:System.ArgumentNullException">The container is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <em>pivotPoint</em><strong>.X</strong> or <em>pivotPoint</em><strong>.Y</strong> member is
            <strong>double.PositiveInfinity</strong> or <strong>double.NegativeInfinity</strong>. These values are invalid.</exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.BeginTrack(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Starts tracking the state of a specified contact.
            </summary>
      <param name="contact">The contact to track.</param>
      <exception cref="T:System.InvalidOperationException">
            The <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object is not in
            a valid state to process manipulations. This situation occurs when
            the <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Container">container</see> is not within a visible visual tree.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.BeginTrack(System.Windows.Input.MouseDevice)">
      <summary>
            Starts tracking the state of a specified mouse.
            </summary>
      <param name="mouse">the Mouse</param>
      <exception cref="T:System.InvalidOperationException">
            The <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object is not in
            a valid state to process manipulations. This situation occurs when
            the <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Container">container</see></strong> is not within a visible visual tree.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.BeginTrack(Microsoft.Surface.Presentation.Manipulations.IManipulator)">
      <summary>
            Starts tracking the state of a specified manipulator.
            </summary>
      <param name="manipulator">the manipulator</param>
      <exception cref="T:System.InvalidOperationException">
            The <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor">Affine2DManipulationProcessor</see></strong> object is not in
            a valid state to process manipulations. This situation occurs when
            the <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Container">container</see></strong> is not within a visible visual tree.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.EndTrack(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Stops tracking the state of a specified contact.
            </summary>
      <param name="contact">The contact to stop tracking.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.EndTrack(System.Windows.Input.MouseDevice)">
      <summary>
            Stops tracking the state of a specified mouse.
            </summary>
      <param name="mouse">The mouse to stop tracking.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.EndTrack(Microsoft.Surface.Presentation.Manipulations.IManipulator)">
      <summary>
            Stops tracking the state of a specified manipulator.
            </summary>
      <param name="manipulator">The manipulator to stop tracking.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.CompleteManipulation">
      <summary>
            Forces completion of the current manipulation.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.SupportedManipulations">
      <summary>
            Gets or sets the current set of supported manipulations.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Container">
      <summary>
            Gets the container with the common coordinate space.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.PivotPoint">
      <summary>
            Gets or sets the pivot point for single-manipulator rotations.
            </summary>
      <remarks>
            To disable single-manipulator rotations, set <strong>PivotPoint
            = new Point(double.NaN, double.NaN)</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.PivotRadius">
      <summary>
            Gets or sets the distance from the pivot point to the edge of the
            manipulatable region. 
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The set
            value is less than 1 or is infinite.</exception>
      <remarks>
        <para>A <strong>PivotRadius</strong> value of not a number (<strong>NaN</strong>) indicates that there is no limit.
            This property must be a positive, finite value that is greater than or equal to 1.0,
            or <strong>NaN</strong>. The default value is <strong>NaN</strong>.</para>
        <para>Any pivoting that occurs within the <strong>PivotRadius</strong> distance is dampened.
            In practice, the pivot point is typically the center of an object
            that is being manipulated, and <strong>PivotRadius</strong> is the distance from that
            point to the furthest edge of the object.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.UseScreenCoordinates">
      <summary>
            Gets or sets a Boolean value that indicates whether output should be in screen coordinates.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.IsRunning">
      <summary>
            Verifies whether the manipulation is in progress.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Affine2DManipulationStarted">
      <summary>
            Occurs when a new manipulation has started.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Affine2DManipulationDelta">
      <summary>
            Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Affine2DManipulationCompleted">
      <summary>
            Occurs when a manipulation has competed.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationStartedEventArgs">
      <summary>
            Represents data that is sent with an 
            <strong><see cref="E:Microsoft.Surface.Presentation.Manipulations.Affine2DManipulationProcessor.Affine2DManipulationStarted" /></strong>
            event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DOperationStartedEventArgs.ManipulationOrigin">
      <summary>
            Gets the coordinates of the origin.
            </summary>
      <remarks>
        <para>
             The <strong>ManipulationOrigin</strong> point represents a point on the Microsoft Surface screen 
             that is relative to the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView" /></strong>
             control that is the composite center of all contacts that are currently participating in the 
             manipulation. This point moves if any one of the other contacts move or when a contact is added or removed 
             from the manipulation.
            </para>
      </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor">
      <summary>
            Implements extrapolation of object position, orientation, and average radius.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.#ctor">
      <summary>
            Creates a new 
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor">Affine2DInertiaProcessor</see></strong> object.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.#ctor(System.Windows.Point,System.Windows.Vector,System.Double)">
      <summary>
            Creates a new 
            <strong><see cref="T:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor">Affine2DInertiaProcessor</see></strong>
            object with the given origin, velocity, and desired translation.
            </summary>
      <param name="initialOrigin">The initial point to set the origin of the manipulation.</param>
      <param name="initialVelocity">The initial velocity for the x and y direction.</param>
      <param name="desiredDisplacement">The distance that the object needs to travel along the velocity vector, in device-independent units.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Begin">
      <summary>
            Begins extrapolation.
            </summary>
      <returns>
        <strong>true</strong> if extrapolation began; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.End">
      <summary>
            Retrieves the current timestamp, performs final extrapolation, and raises the 
            <strong><see cref="E:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Affine2DInertiaCompleted" /></strong>
            event.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialOrigin">
      <summary>
            Gets or sets the initial origin, in device-independent units.
            </summary>
      <remarks>
        <para>The default value is <strong>(0.0, 0.0)</strong>.</para>
        <para>Valid values are anything between, but not including, 
            <strong>NegativeInfinity</strong> and <strong>PositiveInfinity</strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialRadius">
      <summary>
            Gets or sets the initial average radius of the object.
            </summary>
      <remarks>
            Valid values are any number greater than or equal to 1.0f.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialVelocity">
      <summary>
            Gets or sets the initial velocity for <paramref name="X" />, in device-independent units per millisecond.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para> Valid values are anything between, but not including, 
            <strong>NegativeInfinity</strong> and <strong>PositiveInfinity</strong> 
            or <strong>NaN</strong>.</para>
        <para>Extrapolation for <paramref name="X" /> is disabled.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialAngularVelocity">
      <summary>
             Gets or sets the initial angular velocity, in clockwise degrees per millisecond.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para> Valid values are anything between, but not including, 
            <strong>NegativeInfinity</strong> and <strong>PositiveInfinity</strong> 
            or <strong>NaN</strong>.</para>
        <para>Extrapolation for orientation is disabled.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialExpansionVelocity">
      <summary>
            Gets or sets the expansion velocity (that is, how fast the average radius gets changes), 
            in device-independent units per millisecond.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para> Valid values are anything between, but not including, 
            <strong>NegativeInfinity</strong> and <strong>PositiveInfinity</strong> 
            or <strong>NaN</strong>. If <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialExpansionVelocity" /></strong> 
            is negative, the object shrinks.</para>
        <para>Extrapolation for expansion is disabled.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Bounds">
      <summary>
            Gets or sets how far the object can travel, in device-independent units.
            </summary>
      <remarks>
        <para>The default value is <strong>(NegativeInfinity, NegativeInfinity, PositiveInfinity, PositiveInfinity)</strong>.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialOrigin" />
          </strong> should be within the <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Bounds" /></strong> value.</para>
        <para>An example of the <strong>Bounds</strong> property is the distance that the object can travel to the control boundary.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.ElasticMargin">
      <summary>
            Gets or sets the elastic margin of the bound, in device-independent units.
            </summary>
      <remarks>
        <para>The default value is <strong>Thickness(0)</strong>.</para>
        <para>All values must be non-negative numbers up to <strong>PositiveInfinity</strong> 
            or <strong>NaN</strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDisplacement">
      <summary>
            Gets or sets the desired absolute distance that the object needs to travel along 
            the velocity vector, in device-independent units.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para>The <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDisplacement" /></strong> value is mutually 
            exclusive with the <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDeceleration" /></strong> property.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDisplacement" />
          </strong> must be a non-negative 
            number up to <strong>PositiveInfinity</strong>. The direction of displacement is along 
            the <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialVelocity" /></strong> vector.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredRotation">
      <summary>
            Gets or sets the desired rotation when the object stops, in degrees.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para>The <strong>DesiredRotation</strong> value is mutually exclusive with the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredAngularDeceleration" /></strong> property.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredRotation" />
          </strong> must be a non-negative number 
            up to <strong>PositiveInfinity</strong>. The direction of rotation is along the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialAngularVelocity" /></strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredExpansion">
      <summary>
            Gets or sets the desired change in the object average radius, in device-independent units.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para>The <strong>DesiredExpansion</strong> value is mutually exclusive with the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredExpansionDeceleration" /></strong> property.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredExpansion" />
          </strong> must be a non-negative number 
            up to <strong>PositiveInfinity</strong>. The rate of expansion is along the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.InitialExpansionVelocity" /></strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDeceleration">
      <summary>
            Gets or sets the desired absolute deceleration, in device-independent units per square millisecond.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para>The <strong>DesiredDeceleration</strong> value is mutually exclusive with the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDisplacement" /></strong> property.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredDeceleration" />
          </strong> must be a non-negative number 
            up to <strong>PositiveInfinity</strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredAngularDeceleration">
      <summary>
            Gets or sets the desired absolute deceleration of rotation, in degrees per square millisecond.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para>The <strong>DesiredAngularDeceleration</strong> value is mutually exclusive with the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredRotation" /></strong> property.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredAngularDeceleration" />
          </strong> must be a non-negative number 
            up to <strong>PositiveInfinity</strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredExpansionDeceleration">
      <summary>
            Gets or sets the desired absolute deceleration of expansion, in device-independent units per square millisecond.
            </summary>
      <remarks>
        <para>The default value is not a number (NaN).</para>
        <para>The <strong>DesiredExpansionDeceleration</strong> value is mutually exclusive with the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredExpansion" /></strong> property.</para>
        <para>
          <strong>
            <see cref="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.DesiredExpansionDeceleration" />
          </strong> must be a non-negative number 
            up to <strong>PositiveInfinity</strong>.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Affine2DInertiaDelta">
      <summary>   
            Occurs when the extrapolated origin has changed or when translation, scaling, or rotation have occurred.
            </summary>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.Affine2DInertiaCompleted">
      <summary>
            Occurs when an extrapolation has competed.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Manipulations.Affine2DInertiaProcessor.IsRunning">
      <summary>
            Verifies whether the extrapolation is in progress.
            </summary>
      <returns>
        <strong>true</strong> if the extrapolation is running; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.IntermediateContact">
      <summary>Represents an intermediate contact state.</summary>
      <remarks>
            Some contact changed events might be combined to improve
            performance. The <strong>IntermediateContact</strong> structure provides a collection
            of contacts in between
            <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactChangedEvent">ContactChanged</see></strong> events, which makes sure that all contact information
            can be handled as it is required.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.GetPosition(System.Windows.UIElement)">
      <summary>
            Gets the position of an intermediate contact, relative to a specified
                 <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <returns>
            A <strong>Point</strong> object that specifies the position of the
            intermediate contact relative to the <em>relativeTo</em> parameter.
            </returns>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned <strong>Point</strong> object will be 
             calculated relative to this element. If <em>relativeTo</em> is null, the return value is 
             calculated relative to the root visual of the presentation source.
            </para>
      </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.GetCenterPosition(System.Windows.UIElement)">
      <summary>
                Gets the center position of the ellipse that surrounds the most
                prevalent part of an intermediate contact, relative to a specified
                <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <returns>
                A <strong>Point</strong> object that defines the center position
                of the ellipse that surrounds the most prevalent part of an
                intermediate contact, relative to the <em>relativeTo</em> parameter.
            </returns>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned <strong>Point</strong> object will be 
             calculated relative to this element. If <em>relativeTo</em> is null, the return value is 
             calculated relative to the root visual of the presentation source.
            </para>
      </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.GetOrientation(System.Windows.UIElement)">
      <summary>
        <para>
                    Gets the orientation of the intermediate contact relative to a
                    specified <strong><see cref="T:System.Windows.UIElement" /></strong> object.
                </para>
      </summary>
      <returns>
        <para>A <strong>double</strong> value that specifies the orientation, in degrees, of the intermediate
                contact relative to the <em>relativeTo</em> parameter.</para>
        <para>The return value can be from 0 through 359.9999... The value can
                be null if an orientation could not be determined.</para>
      </returns>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned orientation will be 
             calculated relative to this element. If <em>relativeTo</em> is null, the return value is 
             calculated relative to the root visual of the presentation source.
            </para>
      </param>
      <remarks>The origin of the
                orientation is the positive x-axis of the element, and the direction is
                clockwise.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.ToString">
      <summary>
            Overridden. Converts the
            <strong><see cref="T:Microsoft.Surface.Presentation.IntermediateContact">IntermediateContact</see></strong>
            structure to its equivalent string representation.
            </summary>
      <returns>
                A <strong><see cref="T:System.String" /></strong> object that represents the current intermediate
                contact. The output might differ depending on what the contact is recognized as.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.GetEllipse(System.Windows.UIElement)">
      <summary>
                Creates an <strong><see cref="T:System.Windows.Shapes.Ellipse" /></strong>
                object by using a
                <strong><see cref="P:System.Windows.UIElement.RenderTransform" /></strong>
                property that defines an approximate ellipse for the intermediate contact device.
            </summary>
      <returns>
        <para>
                    An <strong>Ellipse</strong> object that defines the approximate
                    ellipse for the intermediate contact device.
                </para>
        <para>The ellipse dimensions match the screen-space dimensions of the intermediate
                contact.</para>
      </returns>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned <strong>Ellipse</strong> object will have 
             its coordinates set relative to this element. If <em>relativeTo</em> is null, the coordinates
             of the returned <strong>Ellipse</strong> will be set relative
             to the root visual of the presentation source.
            </para>
      </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.UpdateEllipse(System.Windows.Shapes.Ellipse,System.Windows.UIElement)">
      <summary>
                Updates an <strong><see cref="T:System.Windows.Shapes.Ellipse" /></strong> object
                that defines an approximate shape for an intermediate contact state to match the
                screen-space dimensions of the intermediate contact.
            </summary>
      <param name="ellipse">The <strong>Ellipse</strong> object to update.</param>
      <param name="relativeTo">
             The <strong>UIElement</strong> object that will be the parent of the ellipse.
             If <em>relativeTo</em> is null, the parent is considered to be
             the root visual of the presentation source.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.IntermediateContact.GetEllipse(System.Windows.UIElement,System.Double@,System.Double@,System.Double@)">
      <summary>
            Gets ellipse data that is relative to a specified <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object. 
            </summary>
      <remarks>
        <para>The returned data approximates a contact if an ellipse is drawn relative to the <strong>UIElement</strong> object.</para>
        <para>The <em>axisOrientation</em> might be different from the contact orientation if the <em>relativeTo</em> element 
            has a skew transform applied to it.</para>
      </remarks>
      <param name="relativeTo">
             A <strong><see cref="T:System.Windows.UIElement" /></strong> object. 
             The output parameters are calculated relative to this element.
             If <em>relativeTo</em> is null, the output parameters are calculated relative to
             the root visual of the presentation source.
            </param>
      <param name="majorAxis">The resulting major axis.</param>
      <param name="minorAxis">The resulting minor axis.</param>
      <param name="axisOrientation">The resulting major axis orientation.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IntermediateContact.IsFingerRecognized">
      <summary>
            Gets a Boolean value that indicates whether an intermediate contact state is recognized as a finger.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IntermediateContact.IsTagRecognized">
      <summary>
            Gets a Boolean value that indicates whether an intermediate contact state is recognized as a tagged object.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IntermediateContact.Tag">
      <summary>
            Gets the
            <strong><see cref="T:Microsoft.Surface.Presentation.TagData">TagData</see></strong>
            structure that contains the tag values.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IntermediateContact.PhysicalArea">
      <summary>Gets the physical area that a contact covers.</summary>
      <remarks>
            The area is reported in square inches. If the Microsoft Surface software
            cannot determine the physical area (for example, if the contact is a tagged object),
            the area is reported as 0.
            </remarks>
      <value>
            A <strong>double</strong> value that specifies the area, in square inches.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IntermediateContact.BoundingRect">
      <summary>
            Gets a <strong><see cref="T:System.Windows.Rect">Rect</see></strong> object that contains the bounds of an intermediate contact.
            </summary>
      <remarks>The location is relative to
            the application window, and the dimensions are in screen space.</remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.IntermediateContact.FrameTimestamp">
      <summary>
            The timestamp of this intermediate contact. 
            </summary>
      <remarks>
            The value of <strong>FrameTimestamp</strong> is set by calling the
            <strong><see cref="M:System.Diagnostics.Stopwatch.GetTimestamp">Stopwatch.GetTimestamp</see></strong>
            method at the time the contact is reported by the Microsoft Surface hardware.
            </remarks>
    </member>
    <member name="T:Microsoft.Surface.Presentation.InteractiveSurface">
      <remarks>
            You can use the <strong>InteractiveSurface</strong> object to determine the hardware parameters of a
            Microsoft Surface unit. Microsoft Surface applications that need to work with interactive screen size should always use 
            <strong>InteractiveSurface</strong> to get bounds, rather than using hard-coded values.
            </remarks>
      <example>
        <code source="Core\Class_SurfaceKeyboard\SurfaceWindow1.xaml.cs" region="GetSurfaceBounds" lang="cs" />
      </example>
      <summary>Provides access to the interactive Microsoft Surface devices that are attached to the system.</summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.InteractiveSurface.PrimarySurfaceDevice">
      <summary>Gets the primary
            <strong><see cref="T:Microsoft.Surface.Presentation.InteractiveSurfaceDevice">InteractiveSurfaceDevice</see></strong>
            object.</summary>
      <value>
            An <strong>InteractiveSurfaceDevice</strong> object that represents the primary Microsoft Surface
            device.
            </value>
      <remarks>
            You can use the <strong>InteractiveSurfaceDevice</strong> class to determine the hardware
            capabilities of a Microsoft Surface unit. Microsoft Surface applications that need to work with interactive 
            screen size should always use <strong>InteractiveSurface.PrimarySurfaceDevice</strong> 
            to get bounds, rather than using hard-coded values.
            </remarks>
      <example>
        <code source="Core\Class_SurfaceKeyboard\SurfaceWindow1.xaml.cs" region="GetSurfaceBounds" lang="cs" />
      </example>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Contacts">
      <summary>
            Provides events, properties, and multi-capture for all contact input that occurs
            over a Microsoft Surface application.
            </summary>
      <remarks>
        <para>The <strong>Contacts</strong> class provides contact-related events, methods, and properties
                that provide information about the state of the current contacts.</para>
        <para>The contact events are raised on the element they are attached to, so
                your application should attach event handlers through the element.</para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent">
      <summary>
            Identifies the <strong>ContactDown</strong> event.
            </summary>
      <remarks>The <strong>ContactDown</strong> event occurs when a contact touches the
            element.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactUpEvent">
      <summary>
            Identifies the <strong>ContactUp</strong> event.
            </summary>
      <remarks>
            The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen, 
            including when the contact moves to a non-sensing area (the borders of the Microsoft Surface unit) or the contact 
            is physically lifted up from the Microsoft Surface screen.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactChangedEvent">
      <summary>
            Identifies the <strong>ContactChanged</strong> event.
            </summary>
      <remarks>
            The <strong>ContactChanged</strong> event occurs when a contact changes any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactEnterEvent">
      <summary>
            Identifies the <strong>ContactEnter</strong> event.
            </summary>
      <remarks>
            The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event occurs, 
            followed by the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent">ContactDown</see></strong> event.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactLeaveEvent">
      <summary>
            Identifies the <strong>ContactLeave</strong> event.
            </summary>
      <remarks>
            The <strong>ContactLeave</strong> event occurs when a contact leaves an
            element.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.PreviewContactDownEvent">
      <summary>
            Identifies the <strong>PreviewContactDown</strong> event.
            </summary>
      <remarks>
            The <strong>PreviewContactDown</strong> event occurs when
            a contact touches an element.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.PreviewContactUpEvent">
      <summary>
            Identifies the <strong>PreviewContactUp</strong> event.
            </summary>
      <remarks>
            The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen,
            including when the contact moves to a non-sensing area (the borders of the Microsoft Surface unit) or the contact 
            is physically lifted up from the Microsoft Surface screen.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.PreviewContactChangedEvent">
      <summary>
            Identifies the <strong>PreviewContactChanged</strong> event.
            </summary>
      <remarks>The <strong>PreviewContactChanged</strong> event occurs when a contact is about to change any of its attributes, 
            including orientation and position. 
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.GotContactCaptureEvent">
      <summary>
            Identifies the <strong>GotContactCapture</strong> event.
            </summary>
      <remarks>
            The <strong>GotContactCapture</strong> event occurs when an element
            captures a contact.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.LostContactCaptureEvent">
      <summary>
            Identifies the <strong>LostContactCapture</strong> event.
            </summary>
      <remarks>
            The <strong>LostContactCapture</strong> event occurs when an element loses a
            contact capture.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.PreviewContactTapGestureEvent">
      <summary>
            Identifies the <strong>PreviewContactTapGesture</strong> event.
            </summary>
      <remarks>
        <para>
            The <strong>PreviewContactTapGesture</strong> event occurs when the 
            Microsoft Surface software recognizes a tap gesture.
            This event is raised only when the contact is
            recognized as a <i>finger</i>. Other contact types such as blob and tagged physical objects
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.PreviewContactHoldGestureEvent">
      <summary>
            Identifies the <strong>PreviewContactHoldGesture</strong> event.
            </summary>
      <remarks>
        <para>
            The <strong>PreviewContactHoldGesture</strong> event occurs when the
            Microsoft Surface software recognizes a press-and-hold gesture.
            This event is raised only when the contact is
            recognized as a <i>finger</i>. Other contact types such as blob and tagged physical objects
            do not raise this event.
            </para>
        <note type="caution">A user must touch the Microsoft Surface screen for at
            least 2 seconds to trigger this event.</note>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactTapGestureEvent">
      <summary>
            Identifies the <strong>ContactTapGesture</strong> event.
            </summary>
      <remarks>
        <para>
            The <strong>ContactTapGesture</strong> event occurs when the
            Microsoft Surface software recognizes a tap gesture.
            This event is raised only when the contact is
            recognized as a <i>finger</i>. Other contact types such as blob and tagged physical objects
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.ContactHoldGestureEvent">
      <summary>
            Identifies the <strong>ContactHoldGesture</strong> event.
            </summary>
      <remarks>
        <para>
            The <strong>ContactHoldGesture</strong> event occurs when the
            Microsoft Surface software recognizes a press-and-hold gesture.
            This event is raised only when the contact is
            recognized as a <i>finger</i>. Other contact types such as blob and tagged physical objects
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactOverProperty">
      <summary>
            Identifies the <strong>IsAnyContactOver</strong> dependency property.
            </summary>
      <remarks>
            The <strong>IsAnyContactOver</strong> attached property determines
            whether there is at least one contact over an element or within its subtree.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactDirectlyOverProperty">
      <summary>
            Identifies the <strong>IsAnyContactDirectlyOver</strong> dependency property.
            </summary>
      <remarks>
            The <strong>IsAnyContactDirectlyOver</strong> attached property
            determines whether there is at least one contact directly over an element or over an
            element within its subtree.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactOrMouseOverProperty">
      <summary>
            Identifies the <strong>IsAnyContactOrMouseOverProperty</strong> dependency property.
            </summary>
      <remarks>
            The <strong>IsAnyContactOrMouseOverProperty</strong> attached property determines
            whether the mouse is over an element or there is at least one contact over an
            element.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactOrMouseCapturedWithinProperty">
      <summary>
            Identifies the <strong>IsAnyContactOrMouseCapturedWithin</strong> dependency property.
            </summary>
      <remarks>
            The <strong>IsAnyContactOrMouseCapturedWithin</strong> attached property determines
            whether the mouse or any contact are captured within an
            element tree.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedProperty">
      <summary>
            Identifies the <strong>IsAnyContactCaptured</strong> dependency property.
            </summary>
      <remarks>
            The <strong>IsAnyContactCaptured</strong> attached property
            determines whether there an element has captured at least one contact.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Contacts.IsAnyContactCapturedWithinProperty">
      <summary>
            Identifies the <strong>IsAnyContactCapturedWithin</strong> dependency property.
            </summary>
      <remarks>
            The <strong>IsAnyContactCapturedWithin</strong> attached property
            determines whether an element or an element in its subtree have captured at least one contact.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.EnableInput(System.Windows.Window)">
      <summary>
            Enables input on the specified <strong><see cref="T:System.Windows.Window">Window</see></strong>
            object, so the associated window is active and starts to receive input events.
            </summary>
      <param name="window">The <strong>Window</strong> object to enable input on.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.EnableInput(System.Windows.Interop.HwndSource)">
      <summary>
            Enables input on the specified
            <strong><see cref="T:System.Windows.Interop.HwndSource">HwndSource</see></strong>
            object, so the associated window is active and starts to receive input events.
            </summary>
      <remarks>
            The <strong>HwndSource</strong> object must have a 
            <strong><a target="_blank" src="http://msdn.microsoft.com/en-us/system.windows.interop.hwndsource.rootvisual.aspx">RootVisual</a></strong> property
            that is set when the 
            <strong>EnableInput</strong> method is called. You should not
            try to change this <strong>RootVisual</strong> property after you enable input in
            the window. If you try to change <strong>RootVisual</strong> after you enable input,
            contact events are sent to the original root visual.
            </remarks>
      <param name="hwndSource">The <strong>HwndSource</strong> object to enable input on.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsAnyContactOver(System.Windows.IInputElement)">
      <returns>
        <strong>true</strong> if there is at least one contact
            over the specified element, including its subtree; otherwise, <strong>false</strong>.
            </returns>
      <summary>
            Determines whether a contact is over a specified element, including the element's
            subtree.
            </summary>
      <param name="element">The element that this method checks to see if a contact is over it.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsAnyContactOrMouseOver(System.Windows.IInputElement)">
      <summary>
            Determines whether a contact or mouse is over a specified element, including the
            element's subtree.
            </summary>
      <returns>
        <strong>true</strong> if there is any contact or mouse
            over the specified element, including its subtree; otherwise, <strong>false</strong>.
            </returns>
      <param name="element">The element that this method checks to see if a contact or mouse is over it.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsAnyContactOrMouseCapturedWithin(System.Windows.IInputElement)">
      <summary>
            Determines whether a contact or mouse is captured within the element's subtree.
            </summary>
      <returns>
        <strong>true</strong> if there is any contact or mouse
            captured within the specified element, including its subtree; otherwise, <strong>false</strong>.
            </returns>
      <param name="element">The element that this method checks to see if a contact or mouse is over it.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsAnyContactDirectlyOver(System.Windows.IInputElement)">
      <returns>
        <strong>true</strong> if there is at least one contact
            directly over the specified element; otherwise, <strong>false</strong>.
            </returns>
      <summary>Determines whether any contact is directly over a specified element.</summary>
      <param name="element">The element that this method checks to see if a contact is directly over it.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetContactsOver(System.Windows.IInputElement)">
      <summary>Gets a collection of the contacts over a specified element, including its subtree.</summary>
      <returns>A read-only collection of the contacts over the specified element.</returns>
      <param name="element">The element that this method gets a collection of contacts for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetContactsDirectlyOver(System.Windows.IInputElement)">
      <summary>Gets a collection of contacts that are directly over a specified element.</summary>
      <returns>A read-only collection of the contacts that are directly over the specified element.</returns>
      <param name="element">The element that this method gets a collection of contacts for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsAnyContactCapturedWithin(System.Windows.IInputElement)">
      <summary>
            Determines whether a specified element or one of its children has captured a
            contact.
            </summary>
      <returns>
        <strong>true</strong> if the specified element or one of its
            children has captured a contact; otherwise, <strong>false</strong>.
            </returns>
      <param name="element">The element that this method checks for a captured contact.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsAnyContactCaptured(System.Windows.IInputElement)">
      <summary>
            Determines whether a specified element currently has capture of at least one
            contact.
            </summary>
      <returns>
        <strong>true</strong> if the specified element currently has
            capture of at least one contact; otherwise, <strong>false</strong>.
            </returns>
      <param name="element">The element that this method checks for a captured contact.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetContactsCaptured(System.Windows.IInputElement)">
      <summary>Gets a collection of contacts that a specified element has captured.</summary>
      <returns>A read-only collection of contacts that the specified element has captured.</returns>
      <param name="element">The element that this method gets captured contacts for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetContactsCapturedWithin(System.Windows.IInputElement)">
      <summary>
            Gets a collection of contacts that are captured anywhere within a specified element's
            subtree.
            </summary>
      <returns>
            A read-only collection of contacts that are captured anywhere within
            the specified element's subtree.
            </returns>
      <param name="element">The element that this method gets captured contacts for.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactDownHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent">ContactDown</see></strong></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactDown</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactDownHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent">ContactDown</see></strong></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactDown</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactUpHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactUpEvent">ContactUp</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactUp</strong> event.</param>
      <param name="handler">The event handler to add.</param>
      <remarks>
        <para>The <strong>ContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.</para>
        <para>A <strong>ContactUp</strong> event can occur after an application has become deactivated. Monitor the 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationActivated" /></strong> and 
            <strong><see cref="E:Microsoft.Surface.ApplicationLauncher.ApplicationDeactivated" /></strong> events to track the state of your application and 
            respond to <strong>ContactUp</strong> events appropriately.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactUpHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactUpEvent">ContactUp</see></strong></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactUp</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactChangedHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactChangedEvent">ContactChanged</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object that listens to the <strong>ContactChanged</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactChangedHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactChangedEvent">ContactChanged</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactChanged</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddPreviewContactDownHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactDownEvent">PreviewContactDown</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>PreviewContactDown</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemovePreviewContactDownHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactDownEvent">PreviewContactDown</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>PreviewContactDown</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddPreviewContactUpHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactUpEvent">PreviewContactUp</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>PreviewContactUp</strong> event.</param>
      <param name="handler">The event handler to add.</param>
      <remarks>
            The <strong>PreviewContactUp</strong> event occurs when a contact leaves the Microsoft Surface screen.
            This includes moving the contact to a non-sensing area (the borders of the Microsoft Surface unit) as well as 
            physically lifting the contact from the Microsoft Surface screen.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemovePreviewContactUpHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactUpEvent">PreviewContactUp</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>PreviewContactUp</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddPreviewContactChangedHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactChangedEvent">PreviewContactChanged</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> that listens to the <strong>PreviewContactChanged</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemovePreviewContactChangedHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactChangedEvent">PreviewContactChanged</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>PreviewContactChanged</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactLeaveHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactLeaveEvent">ContactLeave</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactLeave</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactLeaveHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactLeaveEvent">ContactLeave</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactLeave</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactEnterHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactEnterEvent">ContactEnter</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactEnter</strong> event.</param>
      <param name="handler">The event handler to add.</param>
      <remarks>
            The <strong>ContactEnter</strong> event occurs when a contact that was placed outside a
            UI element is dragged over the element (that is, it <em>enters</em> the element).
            If the initial contact is made from within the element boundaries, the <strong>ContactEnter</strong> event fires, 
            followed by the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent">ContactDown</see></strong> event.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactEnterHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactEnterEvent">ContactEnter</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>ContactEnter</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddGotContactCaptureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.GotContactCaptureEvent">GotContactCapture</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>GotContactCapture</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveGotContactCaptureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.GotContactCaptureEvent">GotContactCapture</see></strong>  event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>GotContactCapture</strong>  event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddLostContactCaptureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.LostContactCaptureEvent">LostContactCapture</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>LostContactCapture</strong> event.</param>
      <param name="handler">The event handler to add.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveLostContactCaptureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.LostContactCaptureEvent">LostContactCapture</see></strong> event.
            </summary>
      <param name="element">The <strong><see cref="T:System.Windows.UIElement">UIElement</see></strong> object
            that listens to the <strong>LostContactCapture</strong> event.</param>
      <param name="handler">The event handler to remove.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddPreviewContactTapGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactTapGestureEvent">PreviewContactTapGesture</see></strong> event.
            </summary>
      <param name="element">The element to add the event handler to.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>PreviewContactTapGesture</strong> events.</param>
      <remarks>
        <para>
            A <strong>PreviewContactTapGesture</strong> event is raised only when the contact is
            recognized as a <em>finger</em>. Other contact types, such as blob and tagged physical objects,
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemovePreviewContactTapGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactTapGestureEvent">PreviewContactTapGesture</see></strong> event.
            </summary>
      <param name="element">The element to remove the event handler from.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>PreviewContactTapGesture</strong> events.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddPreviewContactHoldGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactHoldGestureEvent">PreviewContactHoldGesture</see></strong> event.
            </summary>
      <param name="element">The element to add the event handler to.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>PreviewContactHoldGesture</strong> events.</param>
      <remarks>
        <para>
            A <strong>PreviewContactHoldGesture</strong> event is raised only when the contact is
            recognized as a <em>finger</em>. Other contact types, such as blob and tagged physical objects,
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemovePreviewContactHoldGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.PreviewContactHoldGestureEvent">PreviewContactHoldGesture</see></strong> event.
            </summary>
      <param name="element">The element to remove the event handler from.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>PreviewContactHoldGesture</strong> events.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactTapGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactTapGestureEvent">ContactTapGesture</see></strong> event.
            </summary>
      <param name="element">The element to add the event handler to.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>ContactTapGesture</strong> events.</param>
      <remarks>
        <para>
            A <strong>ContactTapGesture</strong> event is raised only when the contact is
            recognized as a <em>finger</em>. Other contact types, such as blob and tagged physical objects,
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactTapGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactTapGestureEvent">ContactTapGesture</see></strong> event.
            </summary>
      <param name="element">The element to remove the event handler from.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>ContactTapGesture</strong> events.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.AddContactHoldGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Adds a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactHoldGestureEvent">ContactHoldGesture</see></strong> event.
            </summary>
      <param name="element">The element to add the event handler to.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>ContactHoldGesture</strong> events.</param>
      <remarks>
        <para>
            A <strong>ContactHoldGesture</strong> event is raised only when the contact is
            recognized as a <em>finger</em>. Other contact types, such as blob and tagged physical objects,
            do not raise this event.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.RemoveContactHoldGestureHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">
      <summary>
            Removes a specified event handler for the <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactHoldGestureEvent">ContactHoldGesture</see></strong> event.
            </summary>
      <param name="element">The element to remove the event handler from.</param>
      <param name="handler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method that handles <strong>ContactHoldGesture</strong> events.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.CaptureContact(Microsoft.Surface.Presentation.Contact,System.Windows.IInputElement)">
      <summary>
            Redirects contact input to the specified 
            <strong><a target="_blank" src="http://msdn.microsoft.com/en-us/system.windows.iinputelement.aspx">IInputElement</a></strong> object by using the
            default
            <strong><see cref="T:System.Windows.Input.CaptureMode">CaptureMode</see></strong>
            value.
            </summary>
      <param name="contact">The contact to capture.</param>
      <param name="element">The element that will capture the contact.</param>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled, <em>element</em> must be enabled,
             <em>element</em> must allow capturing of contacts, and <em>element</em> must allow capturing
             of this particular <em>contact</em>.
            </para>
        <para>
             To release capture, pass <strong>null</strong> to the
             <em>element</em> parameter of the <strong>CaptureContact</strong> method.
            </para>
      </remarks>
      <example>
        <para>
             In this example, 
             <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent">ContactDown</see></strong> and <strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactChangedEvent">ContactChanged</see></strong>
             event handlers are established for an image during application initialization.
            </para>
        <code source="Presentation\Classes_Contact\SurfaceWindow1.xaml.cs" region="AddImageEventHandlers" title="To establish event handlers" lang="cs" />
        <para>
             When a contact is placed on the image, the <strong>ContactDown</strong> event is raised.
             The event handler uses the <strong>CaptureContact</strong> method to capture the contact.
             The image now continues to receive events it has subscribed to, even if the contact 
             moves off the image.
            </para>
        <code source="Presentation\Classes_Contact\SurfaceWindow1.xaml.cs" region="ImageContactDown" title="To capture a contact" lang="cs" />
        <para>
             As the contact moves around the surface, the <strong>ContactChanged</strong> event is raised. 
             Because the contact is captured to the image element, the <strong>ContactChanged</strong> 
             event continues to be raised even when the contact has moved off the image. 
            </para>
        <para>
             During this event, the position of the contact is examined. 
             If it is within the boundaries of the image, the 
             <strong><see cref="P:System.Windows.UIElement.Opacity" /></strong>
             property of the image is set to <strong>1.0</strong>. If it is outside the boundaries of the image, 
             the <strong>Opacity</strong> property is set to <strong>0.50</strong>.
            </para>
        <code source="Presentation\Classes_Contact\SurfaceWindow1.xaml.cs" region="ImageContactChanged" title="To handle the ContactChanged event" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.CaptureContact(Microsoft.Surface.Presentation.Contact,System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
      <summary>
            Redirects contact input to the specified 
            <strong><a target="_blank" src="http://msdn.microsoft.com/en-us/system.windows.iinputelement.aspx">IInputElement</a></strong> object by using the
            specified
            <strong><see cref="T:System.Windows.Input.CaptureMode">CaptureMode</see></strong> value.
            </summary>
      <returns>
        <strong>true</strong> if the contact is captured successfully; otherwise <strong>false</strong>.
            </returns>
      <remarks>
        <para>
             For a capture to be successful, input must be enabled, <em>element</em> must be enabled,
             <em>element</em> must allow capturing of contacts, and <em>element</em> must allow capturing
             of this particular <em>contact</em>.
            </para>
        <para>
             To release capture, pass <strong>null</strong> to the
             <em>element</em> parameter of the <strong>CaptureContact</strong> method.
            </para>
      </remarks>
      <param name="contact">The contact to capture.</param>
      <param name="element">The element that will capture the contact.</param>
      <param name="captureMode">
            The capture policy to use. This parameter can be <strong>CaptureMode.Element</strong> or
            <strong>CaptureMode.Subtree</strong>.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.ReleaseContactCapture(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Releases capture of the specified contact.
            </summary>
      <param name="contact">The contact to release.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.ReleaseAllContactCaptures">
      <summary>
            Releases capture of all existing contacts.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.ReleaseAllContactCaptures(System.Windows.IInputElement)">
      <summary>
            Releases capture of all contacts that the specified 
            <strong><a target="_blank" src="http://msdn.microsoft.com/en-us/system.windows.iinputelement.aspx">IInputElement</a></strong> captured.
            </summary>
      <param name="element">The element that captured all the contacts to release.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.Synchronize">
      <summary>Forces contacts to resynchronize.</summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsCapturedWithinElementBounds(Microsoft.Surface.Presentation.Contact)">
      <summary>
            Returns a value indicating whether or not the specified contact is within the bounds of its captured element.
            </summary>
      <param name="contact">The contact to check.</param>
      <returns>
        <strong>true</strong> if <i>contact</i> is captured and within the boundaries
             of the element it is captured to; otherwise <strong>false</strong>.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contacts.GetIsMouseCapturedWithinElementBounds">
      <summary>
            Returns a value indicating whether or not the mouse is within the bounds of its captured element.
            </summary>
      <returns>
        <strong>true</strong> if the mouse is captured and within the boundaries
             of the element it is captured to; otherwise <strong>false</strong>.
            </returns>
    </member>
    <member name="T:Microsoft.Surface.Presentation.InteractiveSurfaceDevice">
      <summary>Represents an interactive surface.</summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.Bounds">
      <summary>Gets the bounds that represent the interactive surface.</summary>
      <value>
            A <strong><see cref="T:System.Windows.Rect">Rect</see></strong> object that represents the bounding rectangle that specifies the
            interactive surface.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.LogicalDpiX">
      <summary>
            Gets the logical dots per inch (dpi) along the x-axis of the
            <strong><see cref="T:Microsoft.Surface.Presentation.InteractiveSurface">InteractiveSurface</see></strong>
            interactive surface.
            </summary>
      <remarks>
            For more information, see 
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.PhysicalScaleTransform" /></strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.LogicalDpiY">
      <summary>
            Gets the logical dots per inch (dpi) along the y-axis of the
            <strong><see cref="T:Microsoft.Surface.Presentation.InteractiveSurface">InteractiveSurface</see></strong>
            interactive surface.
            </summary>
      <remarks>
            For more information, see 
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.PhysicalScaleTransform" /></strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.PhysicalScaleTransform">
      <summary>
            Gets the scale transformation to convert from device-independent pixels to inches.
            </summary>
      <remarks>
        <para>
            The <strong>PhysicalScaleTransform</strong> property represents the ratio
            between 96 dots per inch (DPI) and the logical DPI used by the Microsoft Surface unit.
            <strong><see cref="P:System.Windows.Media.ScaleTransform.ScaleX">ScaleTransform.ScaleX</see></strong>
            * 96 == 
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.LogicalDpiX" /></strong>
            and
            <strong><see cref="P:System.Windows.Media.ScaleTransform.ScaleY">ScaleTransform.ScaleY</see></strong>
            * 96 == 
            <strong><see cref="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.LogicalDpiY" /></strong>.
            </para>
        <para>
            Using the <strong>PhysicalScaleTransform</strong> property, your application
            can specify the size of a control while assuming 96 DPI. The resultant
            transformation will scale your control so that it displays
            with the correct physical size according to the logical DPI of the Microsoft Surface unit.
            </para>
      </remarks>
      <example>
            In the following example, the <strong>PhysicalScaleTransform</strong>
            property is used to scale a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            control. The size of the control is specified by using 96 DPI as the base calculation. 
            The <strong>PhysicalScaleTransform</strong> transform that is applied to the control causes it to be displayed
            in the intended physical size.
            <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl6.xaml" lang="none" /></example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.InteractiveSurfaceDevice.None">
      <summary>
            Returns a null interactive surface.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.ReadOnlyContactCollection">
      <summary>Represents a collection of contacts on a Microsoft Surface screen.</summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.SingleInputRotationMode">
      <summary>
            Specifies the possible modes for interpreting rotation when only a single input is present.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SingleInputRotationMode.Disabled">
      <summary>
            Rotation is disabled for single input.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SingleInputRotationMode.ProportionalToDistanceFromCenter">
      <summary>
            Rotation is calculated based on the single input's
            distance from the center.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.SingleInputRotationMode.Default">
      <summary>
            The default setting (<strong>ProportionalToDistanceFromCenter</strong>).
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">
      <summary>
            Represents an item that users can manipulate in a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <remarks>
        <para>
          <strong>ScatterViewItem</strong> controls are inserted into the 
            <strong><see cref="P:System.Windows.Controls.ItemsControl.Items" /></strong>
            collection of a <strong>ScatterView</strong> control to enable movement and manipulation 
            of objects of any type on the Microsoft Surface screen. Your application can explicitly create 
            <strong>ScatterViewItem</strong> controls before adding them to the <strong>Items</strong> collection, 
            or you can add an object of any type. When you add an object that is not of type 
            <strong>ScatterViewItem</strong>, the <strong>ScatterView</strong> control first wraps your object 
            in a <strong>ScatterViewItem</strong> control before adding it to the collection. The following 
            code example illustrates this behavior.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl2.xaml" lang="xml" />
        <para>
             The same concept applies when you add an object to the <strong>Items</strong> collection programmatically,
             as the following code examples illustrate.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl1.xaml.cs" region="AddScatterViewItem" title="To add an item without explicitly creating a ScatterViewItem control" lang="cs" />
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl2.xaml.cs" region="AddScatterViewItem" title="To add an item by explicitly creating a ScatterViewItem control" lang="cs" />
        <para>
             You can add a <strong>ScatterViewItem</strong> control to the <strong>Items</strong> collection 
             without layout properties that are explicitly established. If so, values for the following properties are 
             assigned automatically:
            </para>
        <list type="bullet">
          <item>
            <strong>
              <see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Center" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="P:System.Windows.FrameworkElement.Height" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="P:System.Windows.FrameworkElement.Width" />
            </strong>
          </item>
          <item>
            <strong>
              <see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Orientation" />
            </strong>
          </item>
        </list>
        <para>
             The values that are assigned in this manner are not entirely random. When adding items without 
             explicit layout information, the <strong>ScatterView</strong> control considers the 
             content size of the items and the positioning of existing items.
            </para>
        <para>
             If it is needed, your application can assign the layout properties explicitly as the following code example illustrates.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml" lang="xml" />
        <para>
             After a <strong>ScatterViewItem</strong> control has been inserted into the 
             <strong>Items</strong> collection, users can manipulate it on the Microsoft Surface screen in a variety of ways. 
             By using simple gestures, users can move, rotate, and scale the <strong>ScatterViewItem</strong> control. 
             These manipulations can occur simultaneously.
            </para>
        <para>
             If you want to limit the manipulations that users can perform on a <strong>ScatterViewItem</strong> 
             control, you can set the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanScale" /></strong>
             or
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanRotate" /></strong>
             properties to <strong>false</strong>.
            </para>
        <para>
             When contacts that were captured by the <strong>ScatterViewItem</strong> control are released, 
             inertia processing is used to gradually slow the movement and rotation. 
             You can control the speed at which the inertia processing occurs through the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRate" /></strong>
             and
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRate" /></strong>
             properties. 
            </para>
        <para>
             As an item is decelerating, if it encounters the bounds of its parent 
             <strong>ScatterView</strong> control, it bounces and decelerates more rapidly. 
            </para>
        <h1 class="heading">Activation and Deactivation</h1>
        <para>
             A <strong>ScatterView</strong> control activates a <strong>ScatterViewItem</strong> control 
             when a user starts manipulating the item. By default, when a <strong>ScatterViewItem</strong> object 
             is activated, it grows slightly larger and displays a shadow beneath it. To disable these effects, set the
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShowsActivationEffects" /></strong>
             property to <strong>false</strong>.
            </para>
        <para>
             You can also change the activation state of a <strong>ScatterViewItem</strong> control programmatically. 
             The 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterView.Activate(System.Object)">ScatterView.Activate</see></strong> and
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterView.Deactivate(System.Object)">ScatterView.Deactivate</see></strong>
             methods and the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive" /></strong> and
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActive" /></strong>
             properties enable you to control the activation state in the manner that your application requires.
            </para>
        <note type="caution">
          <strong>ScatterViewItem</strong> is a special type of Microsoft Windows Presentation Foundation (WPF) control.
             Most WPF controls enable you to set a 
             <strong><see cref="P:System.Windows.UIElement.RenderTransform" /></strong> property
             on the control itself. However, <strong>ScatterViewItem</strong> uses
             this property internally and will overwrite any value that you set. Avoid
             setting the <strong>RenderTransform</strong> property on
             <strong>ScatterViewItem</strong> or you will get unpredictable
             results. Instead of using <strong>RenderTransform</strong>,
             modify the <strong>ScatterViewItem</strong> control template.
            </note>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.#ctor">
      <summary>
            Initializes a new instance of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            class.
            </summary>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SingleInputRotationModeProperty">
      <summary>
            Identifies a dependency property that specifies the mode for calculating
            the rotation of an item when only a single input is manipulating it.
            </summary>
      <remarks>The <strong>SingleInputRotationModeProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SingleInputRotationMode">SingleInputRotationMode</see></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShowsActivationEffectsProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item shows visual effects when it activates and deactivates.
            </summary>
      <remarks>The default value is <strong>true</strong>.
            <para>The <strong>ShowsActivationEffectsProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShowsActivationEffects" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsTopmostOnActivationProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item becomes topmost in the z-order when it activates, or non-topmost when it deactivates.
            </summary>
      <remarks>The default value is <strong>true</strong>.
            <para>The <strong>IsTopmostOnActivationProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsTopmostOnActivation" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanScaleProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item can scale.
            </summary>
      <remarks>The default value is <strong>true</strong>.
            <para>The <strong>CanScaleProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanScale" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanRotateProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item can rotate.
            </summary>
      <remarks>The default value is <strong>true</strong>.
            <para>The <strong>CanRotateProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanRotate" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanMoveProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item can move.
            </summary>
      <remarks>The default value is <strong>true</strong>.
            <para>The <strong>CanMoveProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanMove" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CenterProperty">
      <summary>
            Identifies a dependency property that specifies the current position of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.
            </summary>
      <remarks>The <strong>CenterProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Center" /></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualCenterProperty">
      <summary>
            Identifies a dependency property that represents the rendered position of the
            center of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.
            </summary>
      <remarks>The <strong>ActualCenterProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualCenter" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OrientationProperty">
      <summary>
            Identifies a dependency property that specifies the orientation of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item when it is inside a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <remarks>The <strong>OrientationProperty</strong> field is measured clockwise, in degrees.
            <para>The <strong>OrientationProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Orientation" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualOrientationProperty">
      <summary>
            Identifies a dependency property that represents the rendered orientation of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.
            </summary>
      <remarks>The <strong>ActualOrientationProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualOrientation" /></strong> property.
            </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActiveProperty">
      <summary>
            Identifies a dependency property that specifies the active state of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.
            </summary>
      <remarks>The default value is <strong>false</strong>.
            <para>The <strong>IsActiveProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ZIndexProperty">
      <summary>
            Identifies a dependency property that specifies the z-index of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item when it is inside a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <remarks>The <strong>ZIndexProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ZIndex" /></strong> property.</remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRateProperty">
      <summary>
            Identifies a dependency property that represents the deceleration rate for a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.
            </summary>
      <remarks>
        <para>The <strong>DecelerationRateProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRate" /></strong> property.</para>
        <para>
            The <strong>DecelerationRateProperty</strong> value is measured in device-independent units per
             second squared. By default, the value is set so that when an item is travelling at 1,536 pixels
             per second (that is, 16 inches per second at 96 DPI), the item takes 1 second to decelerate fully.
            </para>
        <para>
             The <strong>DecelerationRateProperty</strong> value must be positive and finite. Or,  
             to completely disable inertia, set this property to <strong>double.NaN</strong> to cause 
             the <strong>ScatterViewItem</strong> to stop moving as soon as the 
             manipulation ends. 
             </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRateProperty">
      <summary>
            Identifies a dependency property that represents the angular deceleration rate for
            a <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.
            </summary>
      <remarks>
        <para>The <strong>AngularDecelerationRateProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRate" /></strong> property.
            </para>
        <para>
             The <strong>AngularDecelerationRateProperty</strong> value is measured in degrees per second squared.
             By default, the value is set so that when an item is rotating at 270 degrees per second,
             the item takes 1 second to decelerate fully.
            </para>
        <para>
             The <strong>AngularDecelerationRateProperty</strong> value must be positive and finite. Or,  
             to completely disable inertia, set this property to <strong>double.NaN</strong>.
             to cause the <strong>ScatterViewItem</strong> object to stop rotating as soon as the 
             manipulation ends.  
            </para>
      </remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActiveProperty">
      <summary>
            Identifies a dependency property that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> item
            remains active after all input has ended.
            </summary>
      <remarks>The default value is <strong>false</strong>.
            <para>The <strong>StaysActiveProperty</strong> field is the identifier for the <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActive" /></strong> property.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShadowVectorProperty">
      <summary>
            Identifies an attached property that specifies the distance and direction from a light
            source to an element.
            </summary>
      <remarks>The <strong>ShadowVectorProperty</strong> field is the identifier for the 
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShadowVector">ShadowVector</see></strong> property.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CancelManipulation">
      <summary>Cancels a manipulation on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.</summary>
      <remarks>
        <para>
             If a <strong>ScatterViewItem</strong> item has captured any input devices, the
             <strong>CancelManipulation</strong> method removes that
             capture and raises a
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted">ScatterManipulationCompleted</see></strong>
             event. 
            </para>
        <para>
             When a manipulation is completed as a result of a call to the 
             <strong>CancelManipulation</strong> method, the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs.Canceled" /></strong>
             property of the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationCompletedEventArgs" /></strong>
             object passed to the event handler will be set to <strong>true</strong>.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SetRelativeZIndex(Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex)">
      <summary>
            Sets the z-index for a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item so the item moves to a specified relative position from
            the other items in a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control.
            </summary>
      <param name="relativeIndex">The relative position that the <strong>ScatterViewItem</strong> item
            should move to.</param>
      <remarks>
            The <strong>SetRelativeZIndex</strong> method does not set a persistent property. Instead, this method simply
            sets the z-index at the point in time that this method is called. The relative positions
            might change after that point in time.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.BringIntoBounds">
      <summary>
            Moves the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item by the shortest distance necessary to bring it into the
            bounds of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control so that users can manipulate it.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.BeginDragDrop(System.Object)">
      <summary>
            Begins the drag-and-drop operation on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong> item.
            </summary>
      <remarks>The <strong>BeginDragDrop</strong> method works only when the item is inside a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong> control.</remarks>
      <param name="data">The data that is associated with the drag operation.</param>
      <returns>
        <strong>true</strong> if drag-and-drop operation begins successfully; otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStartedEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted">ScatterManipulationStarted</see></strong>
            event.
            </summary>
      <remarks>The <strong>ScatterManipulationStartedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted" /></strong> event.
            <para>The <strong>ScatterManipulationStarted</strong> event occurs when input is captured
            and the control is ready for manipulations to begin.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDeltaEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDelta">ScatterManipulationDelta</see></strong>
            event.
            </summary>
      <remarks>The <strong>ScatterManipulationDeltaEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDelta" /></strong> event.
            <para>The <strong>ScatterManipulationDelta</strong> event occurs when captured input
            changes position and is recognized as a known manipulation.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompletedEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted">ScatterManipulationCompleted</see></strong>
            event.
            </summary>
      <remarks>The <strong>ScatterManipulationCompletedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted" /></strong> event.
            <para>The <strong>ScatterManipulationCompleted</strong> event occurs when input
            capture is lost.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActivatedEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Activated">Activated</see></strong>
            event.
            </summary>
      <remarks>The <strong>ActivatedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Activated" /></strong> event.
            <para>The <strong>Activated</strong> event occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">IsActive</see></strong>
            property becomes <strong>true</strong>.</para></remarks>
    </member>
    <member name="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DeactivatedEvent">
      <summary>
            Identifies the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Deactivated">Deactivated</see></strong>
            event.
            </summary>
      <remarks>The <strong>DeactivatedEvent</strong> field is the identifier for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Deactivated" /></strong> event.
            <para>The <strong>Deactivated</strong> event occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">IsActive</see></strong>
            property becomes <strong>false</strong>.</para></remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnActivated(System.Windows.RoutedEventArgs)">
      <summary>
            Raises the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Activated">Activated</see></strong>
            event with the specified event data.
            </summary>
      <param name="e">The event data to include with the <strong>Activated</strong> event.</param>
      <remarks>
        <para>The <strong>OnActivated</strong> method is called when the value of
            the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">IsActive</see></strong>
            property is set to <strong>true</strong>.</para>
        <para>When you override this method in a derived class, call the <strong>OnActivated</strong>
            method of the base class so that the event is raised.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnDeactivated(System.Windows.RoutedEventArgs)">
      <summary>
            Raises the
            <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Deactivated">Deactivated</see></strong>
            event with the specified event data.
            </summary>
      <param name="e">The event data to include with the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Activated">Activated</see></strong> event.</param>
      <remarks>
        <para>The <strong>OnDeactivated</strong> method is called when the value of
            the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">IsActive</see></strong>
            property is set to <strong>false</strong>.</para>
        <para>When you override this method in a derived class, call the <strong>OnDeactivated</strong>
            method of the base class so that the event is raised.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>
            Override. Called when the effective value of any dependency property on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item is updated. </summary>
      <param name="e">The event data that describes the property that changed
            and old and new values.</param>
      <remarks>The specific dependency property that
            changed is reported in the <em>e</em> parameter.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.MeasureOverride(System.Windows.Size)">
      <summary>
            Overridden. Updates the 
            <strong><see cref="P:System.Windows.UIElement.DesiredSize">DesiredSize</see></strong> property
            of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item and measures the first visual child of
            the <strong>ScatterViewItem</strong> item.
            </summary>
      <param name="availableSize">The available size that this
            <strong>ScatterViewItem</strong> item can give to the child.</param>
      <returns>The desired size of the <strong>ScatterViewItem</strong> item.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
      <summary>
            Called when the visual parent changes.
            </summary>
      <param name="oldParent">The previous parent, or null if there was no previous parent.</param>
      <remarks>
            The <strong>OnVisualParentChanged</strong> method is called whenever the
            <strong><see cref="P:System.Windows.Media.Visual.VisualParent">VisualParent</see></strong> property changes.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Captures the mouse and updates manipulations.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Stops any existing inertia and starts tracking the mouse.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
      <summary>
            Releases the mouse and updates the activation state and manipulations.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
      <summary>
            Updates the activation state and manipulations.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Captures a contact, updates the activation state, and begins manipulations.
            </summary>
      <param name="e">The event data.</param>
      <remarks>
        <para>
             The <strong>OnContactDown</strong> method is called when a contact is placed on the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control. It captures the contact and prevents any
             <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.AddContactDownHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">ContactDown</see></strong>
             event handlers that your application might have established on the
             <strong>ScatterViewItem</strong> control from being raised.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnGotContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Stops any existing inertia and starts tracking a contact.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnContactUp(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Releases a contact, updates the activation state, 
            and stops any manipulations.
            </summary>
      <param name="e">The event data.</param>
      <remarks>
        <para>
             The <strong>OnContactUp</strong> method is called when a contact that is captured by the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control is removed from the control. It releases the captured contact and prevents any
             <strong><see cref="M:Microsoft.Surface.Presentation.Contacts.AddContactUpHandler(System.Windows.DependencyObject,Microsoft.Surface.Presentation.ContactEventHandler)">ContactUp</see></strong>
             event handlers that your application might have established on the
             <strong>ScatterViewItem</strong> control from being raised.
            </para>
        <para>
             When a contact is released from a <strong>ScatterViewItem</strong> control, 
             the control is not necessarily deactivated. If the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActive" /></strong>
             property is set to <strong>true</strong>, or the control has other captured contacts, 
             it will remain activated.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnLostContactCapture(Microsoft.Surface.Presentation.ContactEventArgs)">
      <summary>
            Updates the activation state and manipulations.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnCreateAutomationPeer">
      <summary>
            Creates an automation peer for the control.
            </summary>
      <returns>
             The newly created <strong><see cref="T:System.Windows.Automation.Peers.AutomationPeer" /></strong>
             object.
            </returns>
      <remarks>
            The object returned by this method is of descendent type
            <strong><see cref="T:Microsoft.Surface.Presentation.Automation.Peers.ScatterViewItemAutomationPeer" /></strong>.
            </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OnContentChanged(System.Object,System.Object)">
      <summary>
            Called when the content of the item changes.
            </summary>
      <param name="oldContent">The content before the change.</param>
      <param name="newContent">The content after the change.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SingleInputRotationMode">
      <summary>
            Gets or sets a value that specifies the mode for calculating
            the rotation of an item when only a single input is manipulating it.
            </summary>
      <remarks>The <strong>SingleInputRotationMode</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SingleInputRotationModeProperty" /></strong> field.</remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShowsActivationEffects">
      <summary>
            Gets or sets a Boolean value that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item shows any visual effects when it activates and deactivates. 
            </summary>
      <value>
        <strong>true</strong> if the control should show visual effects; otherwise, <strong>false</strong>.
            By default, the value is <strong>true</strong>.
            </value>
      <remarks>
        <para>The <strong>ShowsActivationEffects</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShowsActivationEffectsProperty" /></strong> field.
            </para>
        <para>By default, when a <strong>ScatterViewItem</strong> is activated, it grows slightly larger 
            and displays a shadow beneath it. To disable these effects, set 
            <strong>ShowsActivationEffects</strong> to <strong>false</strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsTopmostOnActivation">
      <summary>
            Gets or sets a Boolean value that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item becomes topmost in the z-order when it activates, or non-topmost when it deactivates.
            </summary>
      <value>
        <strong>true</strong> if the control should move in the z-order due to activation; otherwise, <strong>false</strong>.
            By default, the value is <strong>true</strong>.
            </value>
      <remarks>
        <para>The <strong>IsTopmostOnActivation</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsTopmostOnActivationProperty" /></strong> field.</para>
        <para>By default, when a <strong>ScatterViewItem</strong> is activated, it becomes topmost in the
            z-order. To disable this behavior, set 
            <strong>IsTopmostOnActivation</strong> to <strong>false</strong>.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanScale">
      <summary>
            Gets or sets a Boolean value that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item can scale. </summary>
      <value>
        <strong>true</strong> if the control can scale; otherwise, <strong>false</strong>.
            By default, the value is <strong>true</strong>.
            </value>
      <remarks>
        <para>The <strong>CanScale</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanScaleProperty" /></strong> field.
            </para>
        <para>When the <strong>CanScale</strong> property is set to <strong>false</strong>, 
            the user cannot change the size of the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            control. However, you can still modify the size of the control programmatically by setting the 
            <strong><see cref="P:System.Windows.FrameworkElement.Width" /></strong>
            and
            <strong><see cref="P:System.Windows.FrameworkElement.Height" /></strong>
            properties.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanRotate">
      <summary>
            Gets or sets a Boolean value that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item can rotate. </summary>
      <value>
        <strong>true</strong> if the control can rotate; otherwise, <strong>false</strong>.
            By default, the value is <strong>true</strong>.
            </value>
      <remarks>
        <para>The <strong>CanRotate</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanRotateProperty" /></strong> field.</para>
        <para>When the <strong>CanRotate</strong> property is set to <strong>false</strong>, 
            the user cannot rotate the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            control. However, you can still modify the rotation of the control programmatically by setting the 
            <see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Orientation" />
            property.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanMove">
      <summary>
            Gets or sets a Boolean value that specifies whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item can move. </summary>
      <value>
        <strong>true</strong> if the control can move; otherwise, <strong>false</strong>.
            By default, the value is <strong>true</strong>.
            </value>
      <remarks>
        <para>The <strong>CanMove</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CanMoveProperty" /></strong> field.</para>
        <para>When the <strong>CanMove</strong> property is set to <strong>false</strong>, 
            the user cannot move the 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
            control. However, you can still modify the position of the control programmatically by setting the 
            <see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Center" />
            property.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Center">
      <summary>
            Gets or sets the position of the center of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item.  </summary>
      <remarks>
        <para>The <strong>Center</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.CenterProperty" /></strong> field.
            </para>
        <para>The center position is relative to the upper-left corner of the
                <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
                parent element.</para>
        <para>If you do not specify a value, the Microsoft Surface software randomly chooses
                a default value when the
                control is added to a <strong>ScatterView</strong> control.</para>
      </remarks>
      <value>A <strong>Point</strong> object.</value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualCenter">
      <summary>
            Gets the rendered position of the center of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item. </summary>
      <remarks>The <strong>ActualCenter</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualCenterProperty" /></strong> field.</remarks>
      <value>A <strong>Point</strong> object.</value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Orientation">
      <summary>
            Gets or sets the orientation of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item, as it appears on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control. 
            </summary>
      <value>A <strong>double</strong> value that specifies the orientation of the item. This value is
            measured clockwise, in degrees.</value>
      <remarks>
        <para>The <strong>Orientation</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.OrientationProperty" /></strong> field.</para>
        <para>If you do not specify an orientation value, the Microsoft Surface software randomly chooses
                a default value when the item is added to a <strong>ScatterView</strong> control.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualOrientation">
      <summary>
            Gets the rendered orientation of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item. </summary>
      <remarks>The <strong>ActualOrientation</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActualOrientationProperty" /></strong> field.</remarks>
      <value>A <strong>double</strong> value that represents the orientation.</value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ZIndex">
      <summary>
            Gets or sets the z-index of a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item when it is inside a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong>
            control. </summary>
      <value>
             An integer value.
             <strong>ScatterViewItem</strong> controls with higher z-index values are rendered 
             on top of those with lower z-index values.
            </value>
      <remarks>
        <para>The <strong>ZIndex</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ZIndexProperty" /></strong> field.
            </para>
        <para>You can also affect the <strong>ZIndex</strong> property indirectly by calling the 
            <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterViewItem.SetRelativeZIndex(Microsoft.Surface.Presentation.Controls.RelativeScatterViewZIndex)">SetRelativeZIndex</see></strong>
            method.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRate">
      <summary>
            Gets or sets the deceleration rate for a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item that is moving because of inertia. 
            </summary>
      <value>
            A <strong>double</strong> value that specifies the deceleration rate. This value is measured in
            device-independent units per second squared. By default, the value is set so that when an item
            is travelling at 1,536 pixels per second (that is, 16 inches per second at 96 DPI), the item
            takes 1 second to decelerate fully.
            </value>
      <remarks>
        <para>The <strong>DecelerationRate</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRateProperty" /></strong> field.</para>
        <para>The <strong>DecelerationRate</strong> value must be positive and finite. Or,  
             to completely disable inertia, set this property to <strong>double.NaN</strong> to 
             cause the <strong>ScatterViewItem</strong> item to stop moving as soon as the 
             manipulation ends. This property applies to translational velocity only; rotational inertia can still occur.  
             Use the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRate" /></strong>
             property to affect rotational inertia.</para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRate">
      <summary>
            Gets or sets the angular deceleration rate for a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item. </summary>
      <value>
            A <strong>double</strong> value that specifies the angular deceleration rate. This value is
            measured in degrees per second squared. By default, the value is set so that when an item
            is rotating at 270 degrees per second, the item takes 1 second to decelerate fully.
            </value>
      <remarks>
            The <strong>AngularDecelerationRate</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.AngularDecelerationRateProperty" /></strong> field. 
            The <strong>AngularDecelerationRate</strong> value must be positive and finite. Or,  
             to completely disable inertia, set this property to <strong>double.NaN</strong> to cause 
             the <strong>ScatterViewItem</strong> to stop rotating as soon as the 
             manipulation ends. This property applies to rotational velocity only; translational inertia can still occur.
             Use the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DecelerationRate" /></strong>
             property to affect translational inertia.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive">
      <summary>
            Gets or sets a Boolean value that determines whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item is currently receiving input or other attention.
            </summary>
      <value>
        <strong>true</strong> if the <strong>ScatterViewItem</strong> item is
            currently receiving input or other attention; otherwise, <strong>false</strong>.
            </value>
      <remarks>The <strong>IsActive</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActiveProperty" /></strong> field.</remarks>
      <example>
        <para>
             In the following code example, a randomly selected item contained within a specified 
             <strong>ScatterView</strong> control is activated. 
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl2.xaml.cs" region="ActivateScatterViewItem" title="To activate a ScatterViewItem control" lang="cs" />
        <para>
             You can also change the activation state of an item contained within a 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterView">ScatterView</see></strong> control by calling the
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterView.Activate(System.Object)">ScatterView.Activate</see></strong>
             and
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.ScatterView.Deactivate(System.Object)">ScatterView.Deactivate</see></strong>
             methods.
            </para>
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActive">
      <summary>
            Gets or sets a Boolean value that determines whether a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            item should remain active when it no longer actively receives input.
            </summary>
      <remarks>The <strong>StaysActive</strong> property is a dependency property 
            that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.StaysActiveProperty" /></strong> field.
            </remarks>
      <value>
        <strong>true</strong> if the <strong>ScatterViewItem</strong> item should remain active when it
            no longer actively receives input; otherwise, <strong>false</strong>.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShadowVector">
      <summary>
            Gets a vector that indicates relative placement of the item's shadow.
            </summary>
      <value>
             A <strong>Vector</strong> value determined by the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem" /></strong>
             control.
            </value>
      <remarks>
        <para>The <strong>ShadowVector</strong> property is a dependency property that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ShadowVectorProperty" /></strong> field.
            </para>
        <para>The <strong>ShadowVector</strong> property changes as the <strong>ScatterViewItem</strong>
             control moves on the Microsoft Surface screen. The control template for a 
             <strong>ScatterViewItem</strong> control can use this property to display a shadow for the item, 
             if desired.</para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted">
      <summary>
            Occurs when a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            control receives input capture and is ready for manipulations to begin.
            </summary>
      <remarks>The <strong>ScatterManipulationStarted</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStartedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
             In this code example, an event handler for the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted" /></strong>
             event saves the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Center" /></strong>
             property of the <strong>ScatterViewItem</strong> when manipulation begins.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemScatterManipulationStarted" title="To handle the ScatterManipulationStarted event" lang="cs" />
        <para>
             When the manipulation is finished, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted" /></strong>
             event is raised. The handler calculates the distance that the <strong>ScatterViewItem</strong> control
             has moved. If movement exceeds 300 device-independent units, the <strong>ScatterViewItem</strong> is restored
             to its original location.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemScatterManipulationCompleted" title="To handle the ScatterManipulationCompleted event" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDelta">
      <summary>
            Occurs when input that is captured to a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            control is recognized as a known manipulation.
            </summary>
      <remarks>
        <para>The <strong>ScatterManipulationDelta</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationDeltaEvent" /></strong> field.
            </para>
        <para>
             The <strong>ScatterManipulationDelta</strong> event is raised when a new contact is placed on the 
             <strong>ScatterViewItem</strong> control, the contact is moved, or the contact is lifted.
            </para>
        <para>
             When a contact is first placed on the control and the event is raised, the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.HorizontalChange" /></strong>,
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.VerticalChange" /></strong>,
             and 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.RotationalChange" /></strong>
             properties of the 
             <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs" /></strong>
             object that is passed to the event will equal zero; the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.ScaleFactor" /></strong>
             property that is passed to the event will equal 1.0. These values indicate that no change has occurred 
             in the manipulation.
            </para>
        <para>
             When the <strong>ScatterManipulationDelta</strong> event is raised, the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterManipulationDeltaEventArgs.ManipulationOrigin" /></strong>
             property of the <strong>ScatterManipulationDeltaEventArgs</strong> object represents the composite 
             center of all contacts that are currently participating in the manipulation.
            </para>
      </remarks>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted">
      <summary>
            Occurs when all input capture is lost on a
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.ScatterViewItem">ScatterViewItem</see></strong>
            control.
            </summary>
      <remarks>The <strong>ScatterManipulationCompleted</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompletedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
             In this code example, an event handler for the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationStarted" /></strong>
             event saves the 
             <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Center" /></strong>
             property of the <strong>ScatterViewItem</strong> when the manipulation begins.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemScatterManipulationStarted" title="To handle the ScatterManipulationStarted event" lang="cs" />
        <para>
             When the manipulation is finished, the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ScatterManipulationCompleted" /></strong>
             event is raised. The handler calculates the distance that the <strong>ScatterViewItem</strong> control
             has moved. If movement exceeds 300 device-independent units, the <strong>ScatterViewItem</strong> is restored
             to its original location.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemScatterManipulationCompleted" title="To handle the ScatterManipulationCompleted event" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Activated">
      <summary>
            Occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive" /></strong>
            property changes to <strong>true</strong>. </summary>
      <remarks>The <strong>Activated</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.ActivatedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
             In this code example, the event handler for the <strong>Activated</strong> event
             saves the current foreground color and then changes the foreground color to red.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemActivated" title="To handle the Activated event, changing the foreground color" lang="cs" />
        <para>
             When the <strong>ScatterViewItem</strong> is deactivated, the event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Deactivated">Deactivated</see></strong> event
             restores the original foreground color.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemDeactivated" title="To handle the Deactivated event, restoring the foreground color" lang="cs" />
      </example>
    </member>
    <member name="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Deactivated">
      <summary>
            Occurs when the
            <strong><see cref="P:Microsoft.Surface.Presentation.Controls.ScatterViewItem.IsActive" /></strong>
            property changes to <strong>false</strong>. </summary>
      <remarks>The <strong>Deactivated</strong> event is a routed event that is identified by the
            <strong><see cref="F:Microsoft.Surface.Presentation.Controls.ScatterViewItem.DeactivatedEvent" /></strong> field.
            </remarks>
      <example>
        <para>
             In this code example, the event handler for the <strong><see cref="E:Microsoft.Surface.Presentation.Controls.ScatterViewItem.Activated">Activated</see></strong> event
             saves the current foreground color and then changes the foreground color to red.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemActivated" title="To handle the Activated event, changing the foreground color" lang="cs" />
        <para>
             When the <strong>ScatterViewItem</strong> is deactivated, the event handler for the <strong>Deactivated</strong> event
             restores the original foreground color.
            </para>
        <code source="Presentation\Classes_ScatterView\Controls\ScatterViewControl3.xaml.cs" region="ScatterViewItemDeactivated" title="To handle the Deactivated event, restoring the foreground color" lang="cs" />
      </example>
    </member>
    <member name="T:Microsoft.Surface.Presentation.TagData">
      <summary>
            Represents the identifying data that is associated with a 
            <a href="/Development/TaggedObjects/TaggedObjects.htm">tagged object</a>.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.TagData.op_Inequality(Microsoft.Surface.Presentation.TagData,Microsoft.Surface.Presentation.TagData)">
      <summary>
            Determines whether two specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.TagData">TagData</see></strong> 
            structures are different.
            </summary>
      <param name="left">The first <strong>TagData</strong> structure to use in the comparison.</param>
      <param name="right">The second <strong>TagData</strong> structure to use in the comparison.</param>
      <returns>
        <strong>true</strong> if the two <strong>TagData</strong> structures are different;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.TagData.op_Equality(Microsoft.Surface.Presentation.TagData,Microsoft.Surface.Presentation.TagData)">
      <summary>
            Determines whether two specified 
            <strong><see cref="T:Microsoft.Surface.Presentation.TagData">TagData</see></strong> 
            structures are the same.
            </summary>
      <param name="left">The first <strong>TagData</strong> structure to use in the comparison.</param>
      <param name="right">The second <strong>TagData</strong> structure to use in the comparison.</param>
      <returns>
        <strong>true</strong> if the two <strong>TagData</strong> structures are the same;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.TagData.Equals(System.Object)">
      <summary>
            Determines if this 
            <strong><see cref="T:Microsoft.Surface.Presentation.TagData">TagData</see></strong> 
            structure is equal to another specified <strong>TagData</strong> structure.
            </summary>
      <param name="obj">The <strong>TagData</strong> structure to compare to this object.</param>
      <returns>
        <strong>true</strong> if the two <strong>TagData</strong> structures are the same;
            otherwise, <strong>false</strong>.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.TagData.GetHashCode">
      <summary>
            Returns the hash code for this instance. 
            </summary>
      <returns>A 32-bit signed integer hash code for this instance.</returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.TagData.ToString">
      <summary>
            Converts the <strong><see cref="T:Microsoft.Surface.Presentation.TagData">TagData</see></strong>
            structure to its equivalent string representation.
            </summary>
      <returns>A string representation of the structure.</returns>
    </member>
    <member name="P:Microsoft.Surface.Presentation.TagData.Byte">
      <summary>
            Gets a 
            <strong><see cref="T:Microsoft.Surface.Presentation.ByteTag">ByteTag</see></strong>
            object that represents the current contact's byte tag.
            </summary>
      <remarks>
             Accessing the <strong>Byte</strong> property throws an 
             <strong><see cref="T:System.InvalidOperationException">InvalidOperationException</see></strong> 
             if the value of the <strong><see cref="P:Microsoft.Surface.Presentation.TagData.Type" /></strong> property is not
             <strong><see cref="T:Microsoft.Surface.Presentation.TagType">TagType.Byte</see></strong>.
             </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.TagData.Identity">
      <summary>
            Gets a 
            <strong><see cref="T:Microsoft.Surface.Presentation.IdentityTag">IdentityTag</see></strong>
            object that represents the current contact's identity tag.
            </summary>
      <remarks>
             Accessing the <strong>Identity</strong> property throws an 
             <strong><see cref="T:System.InvalidOperationException">InvalidOperationException</see></strong> 
             if the value of the <strong><see cref="P:Microsoft.Surface.Presentation.TagData.Type" /></strong> property is not
             <strong><see cref="T:Microsoft.Surface.Presentation.TagType">TagType.Identity</see></strong>.
             </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.TagData.Type">
      <summary>
            Gets the type of the tag.
            </summary>
      <value>
            A <strong><see cref="T:Microsoft.Surface.Presentation.TagType">TagType</see></strong>
            enumeration value that specifies the tag type.
            </value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.ReadOnlyDictionary`2">
      <summary>
             This is a generic Read Only Dictionary based on the implementation of the Generic Dictionary
            </summary>
      <remarks>
        <para>
            The generic Dictionary object exposes six interfaces, so this class exposes the
            same interfaces. The methods and properties in this file are sorted by which
            interface they come from.
            </para>
        <para>
            The only reason for most of the code in this class is to ensure that the dictionary
            behaves as read-only. All the read methods just delegate to the underlying generic
            Dictionary object. All the write methods just throw.
            </para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
      <summary>
            Constructor.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{K@V}}#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>
            Adds a new entry to the collection.
            </summary>
      <param name="pair">
            The pair to be added.
            </param>
      <exception cref="T:System.NotSupportedException">
            Always, because the collection is read-only.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
      <exception cref="T:System.NotSupportedException">
            Always, because the collection is read-only.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>
            Determines whether the collection contains a specified pair.
            </summary>
      <param name="pair">
            The pair being sought.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
      <summary>
            Copies the elements of the collection to an array, starting at the specified
            array index.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
      <summary>
            Removes the first occurrence of the specified pair from the
            collection.
            </summary>
      <param name="pair">
            The pair to be removed.
            </param>
      <exception cref="T:System.NotSupportedException">
            Always, because the collection is read-only.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Add(`0,`1)">
      <summary>
            Adds an entry with the specified key (<paramref name="user" />) and value
            (<paramref name="useLicense" />) to the dictionary.
            </summary>
      <exception cref="T:System.NotSupportedException">
            Always, because the dictionary is read-only.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.ContainsKey(`0)">
      <summary>
            Determines whether the dictionary contains entry fo the specified key.
            </summary>
      <returns>
            true if the dictionary contains an entry for the specified user, otherwise false.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Remove(`0)">
      <summary>
            Remove the entry with the specified key from the dictionary.
            </summary>
      <returns>
            true if the element is successfully removed; otherwise, false. This method also returns false
            if key was not found in the dictionary.
            </returns>
      <exception cref="T:System.NotSupportedException">
            Always, because the dictionary is read-only.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
      <summary>
            Retrieve the entry associated with the specified key.
            </summary>
      <returns>
            true if the dictionary contains an entry for the specified key;
            otherwise false.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the elements of the collection to an array, starting at the specified
            array index.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Add(System.Object,System.Object)">
      <summary>
            Adds an element with the specified key and value to the dictionary.
            </summary>
      <exception cref="T:System.NotSupportedException">
            Always, because the dictionary is read-only.
            </exception>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Contains(System.Object)">
      <summary>
            Determines whether the dictionary contains an element with the specified key.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator">
      <summary>
            Returns an IDictionaryEnumerator for the dictionary.
            </summary>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Remove(System.Object)">
      <summary>
            Removes the element with the specified key from the dictionary.
            </summary>
      <exception cref="T:System.NotSupportedException">
            Always, because the dictionary is read-only.
            </exception>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Count">
      <value>
            Returns the number of elements in the collection.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.IsReadOnly">
      <value>
            Gets a value indicating whether the dictionary is read-only.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Item(`0)">
      <value>
            Gets the use license associated with the user specified by <paramref name="user" />.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Keys">
      <value>
            Returns an ICollection containing the keys of the dictionary.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Values">
      <value>
            Returns an ICollection containing the values in the dictionary.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.SyncRoot">
      <value>
            Gets an object that can be used to synchronize access to the collection.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.IsFixedSize">
      <value>
            Gets a value indicating whether the dictionary has a fixed size.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys">
      <value>
            Returns an ICollection containing the keys of the dictionary.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.System#Collections#IDictionary#Values">
      <value>
            Returns an ICollection containing the values in the dictionary.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ReadOnlyDictionary`2.Item(System.Object)">
      <value>
            Gets the value associated with the specified key&gt;.
            </value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.Contact">
      <summary>
                Represents a virtual device for a contact.
            </summary>
      <remarks>
        <para>The <strong>Contact</strong> class is similar to
                <strong><see cref="T:System.Windows.Input.MouseDevice" /></strong> and
                <strong><see cref="T:System.Windows.Input.StylusDevice" /></strong>.</para>
        <para>To access a contact device inside an event handler, use the
                <strong><see cref="P:Microsoft.Surface.Presentation.ContactEventArgs.Contact">ContactEventArgs.Contact</see></strong>
                property.</para>
      </remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.Capture(System.Windows.IInputElement)">
      <summary>
                Captures contact events to the specified element.
            </summary>
      <remarks>
        <para>When an element captures a contact, it receives contact input even if the
                contact is not within its borders.</para>
        <para>If a <strong><see cref="T:System.Windows.Input.CaptureMode" /></strong> value is not
                specified, the default <strong>CaptureMode</strong>
                value is <strong>Element</strong>.</para>
        <para>To release contact capture, call the <strong>Capture</strong> method
                and pass a null reference (<strong>Nothing</strong> in Microsoft Visual Basic) as the element to capture.</para>
        <para>The <strong>Capture</strong> method returns <strong>false</strong> if the <paramref name="element" /> parameter 
                is not in the correct state. 
                If <paramref name="element" /> is <strong><see cref="T:System.Windows.UIElement" /></strong>, it must be enabled, visible, and hit test visible.
                If <paramref name="element" /> is <strong><see cref="T:System.Windows.ContentElement" /></strong>, it must be enabled.</para>
      </remarks>
      <returns>
        <strong>true</strong> if the element captured the contact; otherwise, <strong>false</strong>.
            </returns>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="Capture1" title="To capture multiple contacts" lang="cs" />
      </example>
      <param name="element">The element to capture the contact.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)">
      <summary>
            Captures contact events to the specified element with a specified
            <strong><see cref="T:System.Windows.Input.CaptureMode" /></strong>
            value.
            </summary>
      <returns>
        <strong>true</strong> if the element captured the contact; otherwise, <strong>false</strong>.
            </returns>
      <remarks>
        <para>When an element captures a contact, it receives contact input even if the
                contact is not within its borders.</para>
        <para>If a <strong><see cref="T:System.Windows.Input.CaptureMode" /></strong> value is not
                specified, the default <strong>CaptureMode</strong> value is <strong>Element</strong>.</para>
        <para>To release contact capture, call the <strong>Capture</strong> method
                and pass a null reference (<strong>Nothing</strong> in Microsoft Visual Basic)
                as the element to capture.</para>
        <para>The <strong>Capture</strong> method returns <strong>false</strong> if the <paramref name="element" /> parameter is not in the correct state. 
                If <paramref name="element" /> is <strong><see cref="T:System.Windows.UIElement" /></strong>, it must be enabled, visible, and hit test visible.
                If <paramref name="element" /> is <strong><see cref="T:System.Windows.ContentElement" /></strong>, it must be enabled.</para>
      </remarks>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="Capture2" title="To capture multiple contacts and use the Subtree capture mode" lang="cs" />
      </example>
      <param name="element">The element to capture the contact.</param>
      <param name="captureMode">
            The capture policy to use. This parameter can be <strong>Element</strong> or
            <strong>Subtree</strong>.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetPosition(System.Windows.UIElement)">
      <summary>
                 Gets the position of a contact relative to a specified
                 <strong><see cref="T:System.Windows.UIElement" /></strong> object.
             </summary>
      <returns>
                 A <strong>Point</strong> object that defines the position of the
                 contact relative to the <em>relativeTo</em> parameter.
             </returns>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GetPosition" lang="CS" title="To obtain a contact and compare positions" />
      </example>
      <remarks>
        <para>The position that <strong>GetPosition</strong> gets is a point
                 that the Microsoft Surface Vision System recognizes as the most significant
                 part of the contact. This point is <em>not</em> necessarily the center of the contact.</para>
        <para>Use <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetCenterPosition(System.Windows.UIElement)" /></strong> for manipulations to create 
                 a consistent user experience. The center position is less sensitive to changes and 
                 will create smoother manipulations. Use <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetPosition(System.Windows.UIElement)" /></strong> for hit 
                 testing because it is more accurate.</para>
        <para>Because the input system can perceive contacts for approximately 20 pixels
                 beyond the display surface, contact positions might be reported beyond the
                 surface boundaries.</para>
      </remarks>
      <param name="relativeTo">
        <para>
              A <strong>UIElement</strong> object. The returned <strong>Point</strong> object will be 
              calculated relative to this element. If <em>relativeTo</em> is null, the return value is 
              calculated relative to the root visual of the presentation source.
             </para>
      </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetCenterPosition(System.Windows.UIElement)">
      <summary>
                Gets the center position of the ellipse that surrounds the most
                prevalent part of a contact, relative to a specified
                <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned <strong>Point</strong> object is 
             calculated relative to this element. If <em>relativeTo</em> is null, the return value is 
             calculated relative to the root visual of the presentation source.
            </para>
      </param>
      <remarks>
        <para>Use <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetCenterPosition(System.Windows.UIElement)" /></strong> for manipulations to create 
                a consistent user experience. The center position is less sensitive to changes and 
                will create smoother manipulations. Use <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetPosition(System.Windows.UIElement)" /></strong> for hit 
                testing because it is more accurate.</para>
      </remarks>
      <returns>
                A <strong>Point</strong> object that defines the center position
                of the ellipse that surrounds the most prevalent part of a contact,
                relative to the <em>relativeTo</em> parameter.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetOrientation(System.Windows.UIElement)">
      <summary>
            Gets the orientation of a contact, in degrees, relative to a specified
            <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <returns>
        <para>
              A <strong>double</strong> value that specifies the orientation
              of the contact relative to the <em>relativeTo</em> parameter.
             </para>
        <para>
              For a finger or tag contact, the return value can range from 0 through 359.9999...
              For a blob contact, the return value can range from 0 through 179.9999...
             </para>
      </returns>
      <example>
        <code source="Presentation\ContactGetOrientation1Example1\ContactGetOrientation1Example1\Window1.xaml.cs" region="ContactGetOrientation1Example1" lang="CS" title="To handle changes in contact orientation" />
      </example>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned orientation is 
             calculated relative to this element. If <em>relativeTo</em> is null, the return value is 
             calculated relative to the root visual of the presentation source.
            </para>
      </param>
      <remarks>The origin of the
                orientation is the positive x-axis of the element, and the direction is
                clockwise.</remarks>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.ToString">
      <summary>
                Overridden. Converts the
                <strong><see cref="T:Microsoft.Surface.Presentation.Contact">Contact</see></strong>
                object to its equivalent
                string representation.
            </summary>
      <returns>
            A
            <strong><see cref="T:System.String" /></strong>
            object that represents the contact. The output differs depending on what
            the contact is recognized as.
            </returns>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetEllipse(System.Windows.UIElement)">
      <summary>
                Creates an <strong><see cref="T:System.Windows.Shapes.Ellipse" /></strong>
                object by using a
                <see cref="P:System.Windows.UIElement.RenderTransform">render transform</see>
                property that defines an approximate ellipse for a contact device.
            </summary>
      <returns>
        <para>An <strong>Ellipse</strong> object that defines the approximate ellipse for the contact device.</para>
        <para>The ellipse dimensions match the screen-space dimensions of the contact.</para>
      </returns>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GetEllipse1" lang="CS" title="To draw ellipses from contacts" />
      </example>
      <remarks>
            A <strong><see cref="P:System.Windows.UIElement.RenderTransform">RenderTransform</see></strong> transform is applied to the
            <strong>Ellipse</strong> object, so that the coordinates of the returned ellipse are
            relative to the <strong>UIElement</strong> object that <em>relativeTo </em> specifies
            and so the returned ellipse matches the ellipse shape of the contact.
            </remarks>
      <param name="relativeTo">
        <para>
             A <strong>UIElement</strong> object. The returned <strong>Ellipse</strong> object has 
             its coordinates set relative to this element. If <em>relativeTo</em> is null, the coordinates
             of the returned <strong>Ellipse</strong> are set relative
             to the root visual of the presentation source.
            </para>
      </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.UpdateEllipse(System.Windows.Shapes.Ellipse,System.Windows.UIElement)">
      <summary>
                Updates an <strong><see cref="T:System.Windows.Shapes.Ellipse" /></strong> object
                that defines an approximate shape for a contact device to match the
                screen-space dimensions of the contact.
            </summary>
      <remarks>
        <para>A <strong><see cref="P:System.Windows.UIElement.RenderTransform" /></strong>
                transform is applied to the <strong>Ellipse</strong> object, so that the updated
                ellipse, when it is parented to the <strong>UIElement</strong> object that <em>relativeTo </em> specifies,
                matches the ellipse shape of the contact.</para>
        <para>The <strong>UpdateEllipse</strong> method has no effect if the contact does not have ellipse data.</para>
      </remarks>
      <example>
        <code source="Presentation\ContactUpdateEllipse1Example1\ContactUpdateEllipse1Example1\Window1.xaml.cs" region="ContactUpdateEllipse1Example1" lang="CS" title="To update an ellipse based on contacts" />
      </example>
      <exception cref="T:System.ArgumentNullException">A contact does not have ellipse data.</exception>
      <param name="ellipse">The <strong>Ellipse</strong> object to update.</param>
      <param name="relativeTo">
             The <strong>UIElement</strong> object that will be the parent of the ellipse.
             If <em>relativeTo</em> is null, the parent is considered to be
             the root visual of the presentation source.
            </param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetEllipse(System.Windows.UIElement,System.Double@,System.Double@,System.Double@)">
      <summary>
            Gets ellipse data that is relative to a given element. 
            </summary>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="GetEllipse2" lang="CS" title="To rotate an application according to the orientation of the contact" />
      </example>
      <remarks>
        <para>The return data approximates the contact if the ellipse is drawn relative to that element.
            </para>
        <para>
             The origin of the <em>axisOrientation</em> parameter is the positive x-axis of the screen, and the
             direction is clockwise. For finger and tag contacts, the <strong>axisOrientation</strong> parameter
             returns a value in the range 0 through 359.999... For a blob contact, the returned value
             is in the range 0 through 179.999...
            </para>
        <para>
             The <em>axisOrientation</em> parameter might be different from the contact orientation if the <em>relativeTo</em> parameter
             has a skew transform applied to it.
            </para>
      </remarks>
      <param name="relativeTo">
             A <strong><see cref="T:System.Windows.UIElement" /></strong> object. 
             The output parameters are calculated relative to this element.
             If <em>relativeTo</em> is null, the output parameters are calculated relative to
             the root visual of the presentation source.
            </param>
      <param name="majorAxis">The major axis of the contact.</param>
      <param name="minorAxis">The minor axis of the contact.</param>
      <param name="axisOrientation">The major axis orientation of the contact, in degrees.</param>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetIntermediateContacts">
      <summary>
            Gets an enumerator over intermediate states for a contact.
            </summary>
      <returns>
            An <strong><see cref="T:System.Collections.IEnumerable" /></strong>
            list of <strong><see cref="T:Microsoft.Surface.Presentation.IntermediateContact" /></strong>
            objects.
            </returns>
      <remarks>
            The <strong>GetIntermediateContacts</strong> method returns a list of contacts that were
            recognized between the two most recent contact events. This list enables an application to
            track contacts even if the application thread cannot handle those contact events before
            they are invalid.
            </remarks>
      <example>
        <code source="Presentation\ContactGetIntermediateContacts1Example1\ContactGetIntermediateContacts1Example1\Window1.xaml.cs" region="ContactGetIntermediateContacts1Example1" lang="CS" title="To obtain intermediate contacts" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.GetUserData(System.Object)">
      <summary>Gets the user data that is associated with a contact for the specified key.</summary>
      <returns>
                User data that is associated with this contact for a given key that the
                <strong><see cref="M:Microsoft.Surface.Presentation.Contact.SetUserData(System.Object,System.Object)" /></strong> method set. If <strong>GetUserData</strong>
                does not find data, it returns null.
            </returns>
      <param name="key">The key of the user data property to get the value for.</param>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="UserData" lang="CS" title="To set and later obtain user data" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.Contact.SetUserData(System.Object,System.Object)">
      <summary>Sets the specified user data property to the specified value.</summary>
      <remarks>
                An application can later retrieve this data by using the
                <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetUserData(System.Object)" /></strong> method. To
                remove an association, call <strong>SetUserData</strong> and pass a null value.
            </remarks>
      <param name="key">The key of the user data property to get the value for.</param>
      <param name="value">An object that represents the value to set.</param>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="UserData" lang="CS" title="To set and later obtain user data" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.ActiveSource">
      <summary>
            Overridden. Gets the
            <strong><see cref="T:System.Windows.PresentationSource" /></strong>
            object that reports the current input for a contact device.
            </summary>
      <value>
                A <strong>PresentationSource</strong> object that
                reports the current input for a contact device.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.Target">
      <summary>
                Overridden. Gets the
                <strong><see cref="T:System.Windows.IInputElement" /></strong>
                object that receives the input from a contact.
            </summary>
      <value>
                An <strong>IInputElement</strong> object that receives input.
            </value>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="CapturedTarget" title="To capture an element as the contact passes over it" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.Captured">
      <summary>
            Gets the <strong><see cref="T:System.Windows.IInputElement" /></strong>
            object that has captured the contact.
            </summary>
      <value>
            An <strong>IInputElement</strong> object that has captured the contact.
            </value>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="CapturedTarget" title="To capture an element as the contact passes over it" lang="cs" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.DirectlyOver">
      <summary>
            Gets the
            <strong><see cref="T:System.Windows.IInputElement" /></strong>
            object that a contact is directly over.
            </summary>
      <value>
            An <strong>IInputElement</strong> object that the contact is over.
            </value>
      <remarks>
        <para>
            Controls can consist of multiple, nested elements.
            The <strong>DirectlyOver</strong> property gets the specific element that the contact is over.
            </para>
        <para>
            For example, suppose that you have a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceButton">SurfaceButton</see></strong>
            control that has a 
            <strong><see cref="T:Microsoft.Surface.Presentation.Controls.SurfaceTextBox">SurfaceTextBox</see></strong>
            control assigned to its
            <strong><see cref="P:System.Windows.Controls.ContentControl.Content" /></strong>
            property. Depending on which part of the button that a contact is over, 
            the <strong>DirectlyOver</strong> property might return the
            <strong>SurfaceTextBox</strong> object or the
            <strong><see cref="T:Microsoft.Windows.Themes.ButtonChrome" /></strong>
            that is associated with the button.
            </para>
        <para>
            After a contact has been captured to a particular element, the 
            <strong>DirectlyOver</strong> property returns the element that the contact has been captured to, 
            even if the contact moves to a nested element or off the element entirely.
            </para>
        <para>
            You can also use the 
            <strong><see cref="P:Microsoft.Surface.Presentation.IContactInputElement.IsAnyContactOver" /></strong>
            property of any object that implements the 
            <strong><see cref="T:Microsoft.Surface.Presentation.IContactInputElement" /></strong>
            interface to determine whether or not a contact is over an element, including its visual child elements. 
            The <strong>IsAnyContactOver</strong> property returns <strong>true</strong> if any contact is 
            over the element, or if any contact is captured to the element, 
            regardless of the location of the captured contact.
            </para>
      </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.Id">
      <summary>Gets the identifier for a contact object.</summary>
      <value>
                An integer value that specifies the identifier.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.Tag">
      <summary>
            Gets the
            <strong><see cref="T:Microsoft.Surface.Presentation.TagData">TagData</see></strong>
            structure that contains the tag values.
            </summary>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="TagData" lang="CS" title="To check the tag data" />
      </example>
      <remarks>
            When the contact is a tagged object, the <strong>Tag.Type</strong> property is <strong>TagType.Byte</strong>.
            Otherwise, <strong>Tag.Type</strong> is <strong>TagType.None</strong>.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.PhysicalArea">
      <summary>Gets the physical area that a contact covers.</summary>
      <remarks>
            The area is reported in square inches. If the Microsoft Surface software
            cannot determine the physical area (for example, if the contact is a tagged object),
            the area is reported as 0.
            </remarks>
      <value>
            A <strong>double</strong> value that specifies the area, in square inches.
            </value>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.IsFingerRecognized">
      <summary>
            Gets a Boolean value that indicates whether a contact is recognized as a finger.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.IsTagRecognized">
      <summary>
            Gets a Boolean value that indicates whether a contact is recognized as a tagged object.
            </summary>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.BoundingRect">
      <summary>
            Gets a <strong><see cref="T:System.Windows.Rect">Rect</see></strong> object that contains the bounds of a contact.
            </summary>
      <value>A <strong>Rect</strong> object that contains the contact bounds.</value>
      <remarks>The location is relative to
            the application window, and the dimensions are in screen space.</remarks>
      <example>
        <code source="Presentation\Class_Contact\Window1.xaml.cs" region="BoundingRectangle" lang="CS" title="To create a Rectangle element from the bounds of the contact" />
      </example>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.FrameTimestamp">
      <summary>
            Gets the timestamp of this contact. 
            </summary>
      <remarks>
            The value of <strong>FrameTimestamp</strong> is set by calling the
            <strong><see cref="M:System.Diagnostics.Stopwatch.GetTimestamp">Stopwatch.GetTimestamp</see></strong>
            method at the time the contact is reported by the Microsoft Surface hardware.
            </remarks>
    </member>
    <member name="P:Microsoft.Surface.Presentation.Contact.IsCapturedWithinElementBounds">
      <summary>
            Gets <strong>true</strong> if the contact is within the bounds of its captured element.
            </summary>
    </member>
    <member name="T:Microsoft.Surface.Presentation.ContactEventArgs">
      <summary>
            Represents data for contact related events.
            </summary>
      <remarks>
             A <strong>ContactEventArgs</strong> object is passed to all contact related events
             such as:
            <list type="bullet"><item><strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactUpEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactDownEvent" /></strong></item><item><strong><see cref="F:Microsoft.Surface.Presentation.Contacts.ContactChangedEvent" /></strong></item></list></remarks>
      <example>
        <para>
             In this example, the event handler for
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactDown">SurfaceWindow.ContactDown</see></strong>
             event saves the initial center position of a contact.
            </para>
        <code source="Presentation\Classes_Contact\SurfaceWindow1.xaml.cs" region="SurfaceWindowContactDown" title="To obtain and save the center position of a contact" lang="cs" />
        <para>
             During the 
             <strong><see cref="E:Microsoft.Surface.Presentation.Controls.SurfaceWindow.ContactChanged">SurfaceWindow.ContactChanged</see></strong>
             event, the initial center position of the contact is compared to its current center position.
             If the contact has moved more than 250 device-independent units, the center position of a
             <strong><see cref="T:System.Windows.Shapes.Rectangle" /></strong> 
             object is modified to match the center position of the contact.
            </para>
        <code source="Presentation\Classes_Contact\SurfaceWindow1.xaml.cs" region="SurfaceWindowContactChanged" title="To compare positions and move a shape" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ContactEventArgs.GetPosition(System.Windows.UIElement)">
      <summary>
             Gets the position of a contact relative to a specified
             <strong><see cref="T:System.Windows.UIElement" /></strong> object.
            </summary>
      <param name="relativeTo">
             The frame of reference to calculate the position of the contact from.
            </param>
      <returns>
             A <strong><see cref="T:System.Windows.Point">Point</see></strong> object that specifies 
             the position of the contact relative to the <em>relativeTo</em> parameter.
            </returns>
      <remarks>
        <para>
          <strong>GetPosition</strong> retrieves the position of a contact. You can also use the 
              <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetPosition(System.Windows.UIElement)">Contact.GetPosition</see></strong>
              method for the same purpose. If you need the logical center of the contact, use the
              <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetCenterPosition(System.Windows.UIElement)">Contact.GetCenterPosition</see></strong>
              method.</para>
        <para>Use <strong><see cref="M:Microsoft.Surface.Presentation.Contact.GetCenterPosition" /></strong> 
              for manipulations to ensure a consistent user experience. The center position is less sensitive to 
              fluctuations and will result in smoother manipulations. Use <strong><see cref="M:Microsoft.Surface.Presentation.ContactEventArgs.GetPosition(System.Windows.UIElement)" /></strong> 
              for hit testing because it is more accurate.</para>
      </remarks>
      <example>
        <para>
             In this example, the 
             <strong><see cref="M:Microsoft.Surface.Presentation.Controls.SurfaceWindow.OnContactDown(Microsoft.Surface.Presentation.ContactEventArgs)" /></strong>
             method is overridden. When a contact is placed on the Microsoft Surface screen, the method is called. Using
             the <strong>GetPosition</strong> method of the
             <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventArgs" /></strong>
             object, the <strong>OnContactDown</strong> method calculates how far away the center of a
             <strong><see cref="T:System.Windows.Shapes.Rectangle" /></strong> 
             object is from the contact. If the contact and the <strong>Rectangle</strong> 
             are separated by more than 100 device-independent units,
             the <strong>Rectangle</strong> object is animated, moving it to the position of the contact.
            </para>
        <code source="Presentation\Classes_Contact\SurfaceWindow1.xaml.cs" region="OnContactDownMethod" title="To obtain the position of a contact" lang="cs" />
      </example>
    </member>
    <member name="M:Microsoft.Surface.Presentation.ContactEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <summary>
            Provides correct type casting to the
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            delegate.
            </summary>
      <param name="genericHandler">The
            <strong><see cref="T:Microsoft.Surface.Presentation.ContactEventHandler">ContactEventHandler</see></strong>
            method.</param>
      <param name="genericTarget">The target object.</param>
    </member>
    <member name="P:Microsoft.Surface.Presentation.ContactEventArgs.Contact">
      <summary>Gets the contact that is associated with this event.</summary>
      <value>
            A
            <strong><see cref="T:Microsoft.Surface.Presentation.Contact" /></strong>
            object that is associated with this event.
            </value>
    </member>
    <member name="T:Microsoft.Surface.Presentation.ContactEventHandler">
      <summary>
            Represents the event handler for all
            <strong><see cref="T:Microsoft.Surface.Presentation.Contact">Contact</see></strong>-related
            events.
            </summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
      <summary>
            GeneratedInternalTypeHelper
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
      <summary>
            CreateInstance
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
      <summary>
            GetPropertyValue
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>
            SetPropertyValue
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
      <summary>
            CreateDelegate
            </summary>
    </member>
    <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
      <summary>
            AddEventHandler
            </summary>
    </member>
  </members>
</doc>